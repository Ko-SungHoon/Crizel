<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="RFCLoginUsr">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="RFCLoginVO" type="egovframework.rfc3.login.vo.LoginVO"/>

	<!-- 로그인 처리를 위한 resultMap -->
	<resultMap id="login" class="egovframework.rfc3.login.vo.LoginVO">
		<result property="id" column="id" columnIndex="1"/>
		<result property="name" column="name" columnIndex="2"/>
		<result property="ihidNum" column="ihidNum" columnIndex="3"/>
		<result property="email" column="email" columnIndex="4"/>
		<result property="password" column="password" columnIndex="5"/>
		<result property="userSe" column="userSe" columnIndex="6"/>
		<result property="orgnztId" column="orgnztId" columnIndex="7"/>
		<result property="uniqId" column="uniqId" columnIndex="8"/>	
		<result property="sttusCode" column="sttusCode" columnIndex="9"/>	
		<result property="sgroupId" column="sgroupId" columnIndex="10"/>
		<result property="passwordHint" column="passwordHint" columnIndex="11"/>
		<result property="passwordCnsr" column="passwordCnsr" columnIndex="12"/>
		<result property="userAuthCode" column="userAuthCode" columnIndex="13"/>
		<result property="pwChangeDate" column="pwChangeDate" columnIndex="14"/>
		
		<result property="loginFirstEventYn" column="loginFirstEventYn" columnIndex="15"/>
		<result property="userLevel" column="userLevel" columnIndex="16"/>
		<result property="officeNm" column="officeNm" columnIndex="30"/>
		
	</resultMap>
	
	<!-- 아이디 찾기를 위한 resultMap -->
	<resultMap id="id" class="egovframework.rfc3.login.vo.LoginVO">
		<result property="id" column="id" columnIndex="1"/>
	</resultMap>
	
	<!-- 비밀번호 처리를 위한 resultMap -->
	<resultMap id="password" class="egovframework.rfc3.login.vo.LoginVO">
		<result property="password" column="password" columnIndex="1"/>
	</resultMap>
	
	<cacheModel type="${Globals.ibatis.default.cache}" id="RFCLoginUsrCache" readOnly="true" serialize="false">
     	<flushInterval hours="24" />
     	<flushOnExecute statement="RFCLoginDAO.updatePassword"/>
     </cacheModel>
	
	
	<!-- 일반 로그인 -->
	<select id="RFCLoginDAO.actionLogin" resultMap="login"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT
			       MBER_ID AS id
			     , MBER_NM AS name
			     , IHID_NUM AS ihidNum
			     , PASSWORD AS password
			     , EMAIL_ADRES AS email
			     , 'GNR' AS userSe
			     ,'' AS orgnztId
			     , UNIQ_ID AS uniqId
			     , MBER_STTUS_CODE AS  sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			     ,USER_AUTH_CODE userAuthCode
			     ,PWCHANGE_DATE pwChangeDate
			     ,LOGIN_FIRST_EVENT_YN loginFirstEventYn 
			     ,USER_LEVEL	userLevel
			     ,null as officeNm	
			  FROM RFC_COMTNMEMBER
			  WHERE MBER_ID = #id#
			
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT 
			      EMPLYR_ID AS id
			     , EMPLYR_NM AS name
			     , PASSWORD AS password
			     , IHID_NUM AS ihidNum
			     , EMAIL_ADRES AS email
			     , 'USR' AS  userSe
			     , ORGNZT_ID AS orgnztId
			     , UNIQ_ID AS uniqId
			     , EMPLYR_STTUS_CODE AS sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			     ,USER_AUTH_CODE userAuthCode
			     ,PWCHANGE_DATE pwChangeDate
			     ,LOGIN_FIRST_EVENT_YN loginFirstEventYn
			     ,USER_LEVEL	userLevel
			     ,(SELECT OFFICE_NM FROM RFC_COMTCOFFICE WHERE OFFICE_CD=ORGNZT_ID) officeNm
			  FROM RFC_COMTNMANAGER
			
			 WHERE EMPLYR_ID = #id#
			]]>
		</isEqual>
	</select>
	
	
	
	
	
	
	
	
	<!-- 이메일 일반로그인 전자결재용 -->
	<select id="RFCLoginDAO.actionLoginEmail" resultMap="login">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT
			       MBER_ID AS id
			     , MBER_NM AS name
			     , IHID_NUM AS ihidNum
			     , PASSWORD AS password
			     , EMAIL_ADRES AS email
			     , 'GNR' AS userSe
			     ,'' AS orgnztId
			     , UNIQ_ID AS uniqId
			     , MBER_STTUS_CODE AS  sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			     ,USER_AUTH_CODE userAuthCode
			     ,PWCHANGE_DATE pwChangeDate
			     ,LOGIN_FIRST_EVENT_YN loginFirstEventYn 
			     ,USER_LEVEL	userLevel
			     ,null as officeNm	
			  FROM RFC_COMTNMEMBER
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT 
			      EMPLYR_ID AS id
			     , EMPLYR_NM AS name
			     , PASSWORD AS password
			     , IHID_NUM AS ihidNum
			     , EMAIL_ADRES AS email
			     , 'USR' AS  userSe
			     , ORGNZT_ID AS orgnztId
			     , UNIQ_ID AS uniqId
			     , EMPLYR_STTUS_CODE AS sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			     ,USER_AUTH_CODE userAuthCode
			     ,PWCHANGE_DATE pwChangeDate
			     ,LOGIN_FIRST_EVENT_YN loginFirstEventYn
			     ,USER_LEVEL	userLevel
			     ,(SELECT OFFICE_NM FROM RFC_COMTCOFFICE WHERE OFFICE_CD=ORGNZT_ID) officeNm
			  FROM RFC_COMTNMANAGER
			 WHERE EMPLYR_ID = #id#
			]]>
		</isEqual>
	</select>
	
	<!-- 이메일 카운트 -->
	<select id="RFCLoginDAO.actionLoginEmailCount" resultClass="java.lang.Integer">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT
			       count(*) totcnt 
			  FROM RFC_COMTNMEMBER
			 WHERE EMAIL_ADRES = #email#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT 
			      count(*) totcnt 
			  FROM RFC_COMTNMANAGER
			 WHERE EMAIL_ADRES = #email#
			]]>
		</isEqual>
	</select>
	
	
	
	
	
	
	
	
	
	<select id="RFCLoginDAO.getUserInfoForRealAuthKey"  parameterClass="RFCLoginVO"  resultClass="RFCLoginVO"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT
			       MBER_ID AS id
			     , MBER_NM AS name
			     , IHID_NUM AS ihidNum
			     , PASSWORD AS password
			     , EMAIL_ADRES AS email
			     , 'GNR' AS userSe
			     ,'' AS orgnztId
			     , UNIQ_ID AS uniqId
			     , MBER_STTUS_CODE AS  sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			     ,USER_AUTH_CODE userAuthCode
			     
			  FROM 
			  	RFC_COMTNMEMBER
			 WHERE 
			 	IHID_NUM is not null and  IHID_NUM = #ihidNum#
			   and rownum < 2
			 
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT 
			      EMPLYR_ID AS id
			     , EMPLYR_NM AS name
			     , PASSWORD AS password
			     , IHID_NUM AS ihidNum
			     , EMAIL_ADRES AS email
			     , 'USR' AS  userSe
			     , ORGNZT_ID AS orgnztId
			     , UNIQ_ID AS uniqId
			     , EMPLYR_STTUS_CODE AS sttusCode
			     ,SITE_GROUP_ID AS sgroupId
			     , PASSWORD_HINT AS passwordHint
			     , PASSWORD_CNSR AS  passwordCnsr
			      ,USER_AUTH_CODE userAuthCode
			  FROM 
			  		RFC_COMTNMANAGER
			 WHERE 
			   IHID_NUM is not null and  IHID_NUM = #ihidNum#
			   and rownum < 2
			]]>
		</isEqual>
	</select>
	
	<!-- 인증서 로그인 -->
	<select id="RFCLoginDAO.actionCrtfctLogin"  resultClass="RFCLoginVO"  cacheModel="RFCLoginUsrCache">
		<![CDATA[
		SELECT EMPLYR_ID AS id
		     , EMPLYR_NM AS name
		     , PASSWORD AS password
		     , IHID_NUM AS ihidNum
		     , EMAIL_ADRES AS email
		     , 'USR' AS userSe
		     , ORGNZT_ID  AS orgnztId
		     , UNIQ_ID  AS uniqId
		     , EMPLYR_STTUS_CODE sttusCode
		      ,SITE_GROUP_ID AS sgroupId
		      ,GROUP_ID  groupId
		      ,USER_AUTH_CODE userAuthCode
		  FROM  RFC_COMTNMANAGER
		 WHERE SUB_DN = #dn#
		]]>
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="RFCLoginDAO.searchId" resultMap="id"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT  MBER_ID  AS id
			  FROM  RFC_COMTNMEMBER
			 WHERE MBER_NM = #name# 
			   AND  EMAIL_ADRES = ECL_ENCRYPT(#email#) 
			   AND  MBER_STTUS_CODE = 'P'
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT EMPLYR_ID  AS id
			  FROM  RFC_COMTNMANAGER
			 WHERE EMPLYR_NM = #name#
			   AND  EMAIL_ADRES = ECL_ENCRYPT(#email#) 
			   AND  EMPLYR_STTUS_CODE = 'P'
			]]>
		</isEqual>
	</select>
	
	<!-- 아이디찾기(이름/핸드폰/생년월일) -->
	<select id="RFCLoginDAO.searchIdbirthHan" resultMap="id"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT  MBER_ID  AS id
			  FROM  RFC_COMTNMEMBER
			 WHERE MBER_NM = #name# 
			 AND MOBLFRIST_NO=#moblfristNo#
			 AND MOBLMIDDLE_NO=#moblmiddleNo#
			 AND MOBLEND_NO=#moblendNo#
			 AND BRTH=#brth#
			 AND  MBER_STTUS_CODE = 'P'
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT EMPLYR_ID  AS id
			  FROM  RFC_COMTNMANAGER
			 WHERE EMPLYR_NM = #name#
			   AND MOBLFRIST_NO=#moblfristNo#
			   AND MOBLMIDDLE_NO=#moblmiddleNo#
			   AND MOBLEND_NO=#moblendNo#
			   AND BRTH=#brth#
			   AND  EMPLYR_STTUS_CODE = 'P'
			]]>
		</isEqual>
	</select>
	<!-- 비밀번호찾기(아이이/이름/핸드폰/생년월일) -->
	<select id="RFCLoginDAO.searchPasswordbirthHan" resultMap="password"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT  PASSWORD  AS password
			  FROM  RFC_COMTNMEMBER
			 WHERE  MBER_ID = #id#
			   AND   MBER_NM = #name#
			   AND MOBLFRIST_NO=#moblfristNo#
			   AND MOBLMIDDLE_NO=#moblmiddleNo#
			   AND MOBLEND_NO=#moblendNo#
			   AND BRTH=#brth#			   
			   AND   MBER_STTUS_CODE = 'P'
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT  PASSWORD  AS password
			  FROM   RFC_COMTNMANAGER
			 WHERE EMPLYR_ID = #id#
			   AND  EMPLYR_NM = #name#
			   AND MOBLFRIST_NO=#moblfristNo#
			   AND MOBLMIDDLE_NO=#moblmiddleNo#
			   AND MOBLEND_NO=#moblendNo#
			   AND BRTH=#brth#			   
			   AND  EMPLYR_STTUS_CODE = 'P'
			]]>
		</isEqual>
	</select>
	
	
	
	
	
	
	
	
	<!-- 비밀번호 찾기 -->
	<select id="RFCLoginDAO.searchPassword" resultMap="password"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT  PASSWORD  AS password
			  FROM  RFC_COMTNMEMBER
			 WHERE  MBER_ID = #id#
			   AND   MBER_NM = #name#
			   AND   EMAIL_ADRES = #email#
			   AND   PASSWORD_HINT = #passwordHint#
			   AND   PASSWORD_CNSR = #passwordCnsr#
			   AND   MBER_STTUS_CODE = 'P'
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT  PASSWORD  AS password
			  FROM   RFC_COMTNMANAGER
			 WHERE EMPLYR_ID = #id#
			   AND  EMPLYR_NM = #name#
			   AND  EMAIL_ADRES = #email#
			   AND  PASSWORD_HINT = #passwordHint#
			   AND  PASSWORD_CNSR = #passwordCnsr#
			   AND  EMPLYR_STTUS_CODE = 'P'
			]]>
		</isEqual>
	</select>
	
	<select id="RFCLoginDAO.searchPasswordToEmail" resultMap="id"  cacheModel="RFCLoginUsrCache">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT  
				 MBER_ID  AS id
			  FROM 
			  	 RFC_COMTNMEMBER
			 WHERE  
			   MBER_ID = #id#
			   AND   MBER_NM = #name#
			   AND   EMAIL_ADRES = ECL_ENCRYPT(#email#) 
			   AND   MBER_STTUS_CODE = 'P'
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT  
				 EMPLYR_ID  AS id
			  FROM   
			  	RFC_COMTNMANAGER
			 WHERE 
			  EMPLYR_ID = #id#
			   AND  EMPLYR_NM = #name#
			   AND  EMAIL_ADRES = ECL_ENCRYPT(#email#) 
			   AND  EMPLYR_STTUS_CODE = 'P'
			]]>
		</isEqual>
	</select>
	
	<!-- 변경된 비밀번호를 저장 -->
	<update id="RFCLoginDAO.updatePassword">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE  RFC_COMTNMEMBER
			   SET  PASSWORD = #password#
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE  RFC_COMTNMANAGER
			   SET  PASSWORD = #password#
			 WHERE  EMPLYR_ID = #id#
			]]>
		</isEqual>
	</update>
	
	<!-- 최초 로그인 이벤트 최초인지 체크 0:최초 1:최초아님 -->
	<update id="RFCLoginDAO.updateLoginFirstEvent">
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE  RFC_COMTNMEMBER
			   SET  LOGIN_FIRST_EVENT_YN = #loginFirstEventYn#
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE  RFC_COMTNMANAGER
			   SET  LOGIN_FIRST_EVENT_YN = #loginFirstEventYn#
			 WHERE EMPLYR_ID = #id#
			 ]]>
		</isEqual>
	</update>
	
	
	
	<!-- 변경된 비밀번호를 저장 및 패스워드 수정날짜 변경 -->
	<update id="RFCLoginDAO.changePassword">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE  RFC_COMTNMEMBER
			   SET  PASSWORD = #password#, PWCHANGE_DATE = #pwChangeDate#
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE  RFC_COMTNMANAGER
			   SET  PASSWORD = #password#, PWCHANGE_DATE = #pwChangeDate#
			 WHERE  EMPLYR_ID = #id#
			]]>
		</isEqual>
	</update>
	
	
	<update id="RFCLoginDAO.changePasswordDate">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE  RFC_COMTNMEMBER
			   SET  PWCHANGE_DATE = #pwChangeDate#
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE  RFC_COMTNMANAGER
			   SET  PWCHANGE_DATE = #pwChangeDate#
			 WHERE  EMPLYR_ID = #id#
			]]>
		</isEqual>
	</update>
	
	
	<!-- 본인확인코드 수정 -->
	<update id="RFCLoginDAO.updateIhidNum">
		<!-- 일반회원 -->
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE  RFC_COMTNMEMBER
			   SET  IHID_NUM = #ihidNum#
			 WHERE MBER_ID = #id#
			]]>
		</isEqual>
		<!-- 업무사용자 -->
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE  RFC_COMTNMANAGER
			   SET  IHID_NUM = #ihidNum#
			 WHERE  EMPLYR_ID = #id#
			]]>
		</isEqual>
	</update>
	
	<select id="RFCLoginDAO.getLoginUserInfo"  resultClass="RFCLoginVO"  cacheModel="RFCLoginUsrCache">
			       SELECT 
                       USER_ID AS id, 
                       PASSWORD AS password, 
                       USER_NM AS name,   
                       USER_EMAIL AS email, 
                       USER_SE AS userSe, 
                       ORGNZT_ID  AS orgnztId,
                       UNIQ_ID AS uniqId,
                       USER_HOMEPAGE AS userHomepage,
                       SITE_GROUP_ID AS sgroupId, 
                       GROUP_ID AS groupId,
                       ( 
                       	SELECT 
                        	SERIES 
                        FROM
                           (
                        		SELECT 
                                	SERIES 
                                FROM 
                                	RFC_COMVNUSERMASTER C,RFC_COMTNSSO D
                                WHERE
                                	C.USER_ID=D.USER_NAME
                                ORDER BY LAST_USED DESC
                           )  
                        where ROWNUM &lt; 2 
                        ) AS ssoKey
                   FROM 
                       RFC_COMVNUSERMASTER A ,  RFC_COMTNSITEGROUP B 
                  WHERE  
                       A.SITE_GROUP_ID =B.SGROUP_ID AND
                       B.IS_USE='1' AND   USER_ID = #id#
	</select>
	
	<select id="RFCLoginDAO.getLoginUserInfoTotSome"  resultClass="RFCLoginVO">
			       SELECT 
                       USER_ID AS id, 
                       PASSWORD AS password, 
                       USER_NM AS name,   
                       USER_EMAIL AS email, 
                       USER_SE AS userSe, 
                       ORGNZT_ID  AS orgnztId,
                       UNIQ_ID AS uniqId,
                       USER_HOMEPAGE AS userHomepage,
                       SITE_GROUP_ID AS sgroupId, 
                       GROUP_ID AS groupId                       
                   FROM 
                       RFC_COMVNUSERMASTER A ,  RFC_COMTNSITEGROUP B 
                  WHERE  
                       A.SITE_GROUP_ID =B.SGROUP_ID AND
                       B.IS_USE='1' AND   USER_ID = #id#
	</select>
	
	<select id="RFCLoginDAO.getLoginUserInfoTotSomeUniqId"  resultClass="RFCLoginVO">
			       SELECT 
                       USER_ID AS id, 
                       PASSWORD AS password, 
                       USER_NM AS name,   
                       USER_EMAIL AS email, 
                       USER_SE AS userSe, 
                       ORGNZT_ID  AS orgnztId,
                       UNIQ_ID AS uniqId,
                       USER_HOMEPAGE AS userHomepage,
                       SITE_GROUP_ID AS sgroupId, 
                       GROUP_ID AS groupId                       
                   FROM 
                       RFC_COMVNUSERMASTER A ,  RFC_COMTNSITEGROUP B 
                  WHERE  
                       A.SITE_GROUP_ID =B.SGROUP_ID AND
                       B.IS_USE='1' AND   UNIQ_ID = #uniqId#
	</select>
	
	<select id="RFCLoginDAO.getLoginUserAuthor" resultClass="java.lang.String"  cacheModel="RFCLoginUsrCache">
			 SELECT
			           B.ROLE_ID as role
			  FROM
			      RFC_COMVNUSERMASTER A 
			      LEFT JOIN RFC_COMTNAUTHORITES B 
			      ON  ((A.SITE_GROUP_ID=B.SGROUP_ID) AND  (A.USER_ID=B.SUBJECT_ID OR  A.GROUP_ID = B.SUBJECT_ID))
			  WHERE A.USER_ID=#id#
	</select>
	
	<select id="RFCLoginDAO.selectLoginSSoInfoList" resultClass="egovframework.rfc3.sso.vo.SsoVO" cacheModel="RFCLoginUsrCache">
				select 
					USER_NAME as  userName,
					USER_REAL_NM  as userRealNm,
					SERIES as series ,
					TOKEN as token,
					LAST_USED as lastUsed, 
					USER_IP as userIp,
				   (SELECT USER_SE  FROM RFC_COMVNUSERMASTER B WHERE B.USER_ID=A.USER_NAME ) useSe,
       			   (SELECT ORGNZT_ID  FROM RFC_COMVNUSERMASTER B WHERE B.USER_ID=A.USER_NAME ) orgnztId
			   from 
			       RFC_COMTNSSO A
			   order by LAST_USED desc
	</select>
	
	<select id="RFCLoginDAO.getLoginSSoInfo" resultClass="egovframework.rfc3.sso.vo.SsoVO" cacheModel="RFCLoginUsrCache">
				select 
					USER_NAME as  userName,
					SERIES as series ,
					TOKEN as token,
					LAST_USED as lastUsed, 
					USER_IP as userIp
			   from 
			       RFC_COMTNSSO 
			    where 
			       SERIES = #ssokey#
	</select>
	<delete id="RFCLoginDAO.deleteSSoUser" >
			delete  from RFC_COMTNSSO  
			where  SERIES = #ssokey#
	</delete>
	
	<select id="RFCLoginDAO.getEchelonDigestPassEncoder"   resultClass="java.lang.String" >
				select ECL_DIGEST(#str#) as str from dual 
	</select>
	<select id="RFCLoginDAO.getEchelonEncoder"   resultClass="java.lang.String" >
				select ECL_ENCRYPT(#str#) as str from dual 
	</select>
	<select id="RFCLoginDAO.getEchelonDecoder"   resultClass="java.lang.String" >
				select ECL_DECRYPT(#str#) as str from dual 
	</select>
	
	<!-- ksign -->
	<select id="RFCLoginDAO.getKsignEncoder"   parameterClass="java.util.HashMap" resultClass="java.lang.String" >				
				select dbsec.sdb_crypto.encrypt(#str#,#dbuserid#,'rfc_comtnmanager','detail_adres','') from dual 
	</select>
	<select id="RFCLoginDAO.getKsignDecoder"   parameterClass="java.util.HashMap" resultClass="java.lang.String" >				
				select dbsec.sdb_crypto.decrypt(#str#,#dbuserid#,'rfc_comtnmanager','detail_adres') from dual 
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</sqlMap>
