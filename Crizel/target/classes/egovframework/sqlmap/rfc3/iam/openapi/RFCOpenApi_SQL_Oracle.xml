<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RFC3OpenApi">
	<typeAlias  alias="egovMap"      						type = "egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias  alias="openApiAuthKeyVO"	 			type = "egovframework.rfc3.openapi20.vo.OpenApiAuthKeyVO"/> 
    <typeAlias  alias="openApiQosVO"	 				   type = "egovframework.rfc3.openapi20.vo.OpenApiQosVO"/>
    <typeAlias  alias="smsCertiVO"	 				       type = "egovframework.rfc3.openapi30.vo.SmsCertiVO"/>
    <typeAlias  alias="openApiStatiscVO"	 				       type = "egovframework.rfc3.openapi20.vo.OpenApiStatiscVO"/>
    <typeAlias  alias="openApiStatusVO"	 				       type = "egovframework.rfc3.openapi20.vo.OpenApiStatusVO"/>
    
    
    
     <cacheModel type="${Globals.ibatis.default.cache}" id="RFC3OpenApiCache" readOnly="true" serialize="false">
     	<flushInterval hours="24" />
     	<flushOnExecute statement="OpenApiDAO.insertAuthKey"/>
     	<flushOnExecute statement="OpenApiDAO.updateAuthKey"/>
     	<flushOnExecute statement="OpenApiDAO.updateDelayApplyAuthKey"/>
     	<flushOnExecute statement="OpenApiDAO.updateSmsSendDate"/>
     	<flushOnExecute statement="OpenApiDAO.deleteAuthKey"/>
     	<flushOnExecute statement="OpenApiDAO.insertQos"/>
     	<flushOnExecute statement="OpenApiDAO.insertSmsCertiNum"/>
     	<flushOnExecute statement="OpenApiDAO.deleteSmsCertiNum"/>
     </cacheModel> 
    <select	 id="OpenApiDAO.selectVaildAuthKey"  parameterClass="openApiAuthKeyVO" resultClass="openApiAuthKeyVO" cacheModel="RFC3OpenApiCache">
    			  select
    			  		   USER_ID  userId,
    			  		   OPEN_API_AUTHKEY  openApiAuthKey,
					       STATUS  status ,
					       REASON_NOT_AUTH reasonNotAuth
                    from 
                        RFC_COMTOPENAPIAUTHKEY 
                     where 
                     	1=1 and   OPEN_API_AUTHKEY=#openApiAuthKey#  and  
                     (
                        cast(replace(#curDay#,'-','') as NUMBER)  &gt;= cast(replace(START_DAY,'-','') as NUMBER) and
                        cast(replace(#curDay#,'-','') as NUMBER)  &lt;= cast(replace(END_DAY,'-','') as NUMBER)
                     )
     </select>
     <select id="OpenApiDAO.selectAuthKeyListTotCnt" parameterClass="openApiAuthKeyVO" resultClass="int" cacheModel="RFC3OpenApiCache">
    		select
    				 	count(*) totcnt
             from 
             			RFC_COMTOPENAPIAUTHKEY
             where 1=1
             <isNotEmpty prepend="AND" property="searchCondition" >
			          		     $searchCondition$  LIKE '%$searchKeyword$%'
			 </isNotEmpty>
			 <isNotEmpty prepend="AND" property="status" >
			          		     STATUS  =#status#
			 </isNotEmpty>
    </select>
    <select id="OpenApiDAO.selectAuthKeyList" parameterClass="openApiAuthKeyVO" resultClass="openApiAuthKeyVO" cacheModel="RFC3OpenApiCache">
    SELECT  * 
  FROM (
		SELECT ROWNUM RNUM, ALL_LIST.*  
		FROM  
		(		
    		
    		select
    				   KEY_SID keySid,
				       OPEN_API_AUTHKEY openApiAuthKey,
				       USER_ID userId,
				       USER_NM userNm,
				       START_DAY startDay,
				       END_DAY endDay,
				       BIRTHDAY birthDay,
				       ZIP zip,
				       ADDR1 addr1,
				       ADDR2 addr2,
				       TEL tel,
				       EMAIL email,
				       SERVICE_NM serviceNm,
				       USE_AIM useAim,
				       SERVICE_INFO serviceInfo,
				       STATUS status,
				       REASON_NOT_AUTH reasonNotAuth,
				       APPLY_DATE applyDate,
				       SERVICE_DATE serviceDate,
				       SMS_SEND_DATE  smsSendDate
             from 
             			RFC_COMTOPENAPIAUTHKEY
             where 1=1
             <isNotEmpty prepend="AND" property="searchCondition" >
			          		     $searchCondition$  LIKE '%$searchKeyword$%'
			 </isNotEmpty>
			 <isNotEmpty prepend="AND" property="status" >
			          		     STATUS  =#status#
			 </isNotEmpty>
			 <isNotEmpty  property="orderField" >
			            	 	ORDER BY  $orderField$   $orderSort$
			  </isNotEmpty>
               <isEmpty  property="orderField" >
             	 			 ORDER BY KEY_SID desc
               </isEmpty>
            ) ALL_LIST
	      )
  WHERE  RNUM  &gt; #firstIndex#
  AND  RNUM &lt;= #firstIndex# + #recordCountPerPage#
    		
    </select>
    <select id="OpenApiDAO.getAuthKeyInfo" parameterClass="long" resultClass="openApiAuthKeyVO" cacheModel="RFC3OpenApiCache">
    		select
    				   KEY_SID keySid,
				       OPEN_API_AUTHKEY openApiAuthKey,
				       USER_ID userId,
				       USER_NM userNm,
				       START_DAY startDay,
				       END_DAY endDay,
				       BIRTHDAY birthDay,
				       ZIP zip,
				       ADDR1 addr1,
				       ADDR2 addr2,
				       TEL tel,
				       EMAIL email,
				       SERVICE_NM serviceNm,
				       USE_AIM useAim,
				       SERVICE_INFO serviceInfo,
				       STATUS status,
				       REASON_NOT_AUTH reasonNotAuth,
				       APPLY_DATE applyDate,
				       SERVICE_DATE serviceDate,
				       SMS_SEND_DATE  smsSendDate
             from 
             			RFC_COMTOPENAPIAUTHKEY
             where  KEY_SID =#keySid#
    </select>
    <select id="OpenApiDAO.getAuthKeyUserInfo" parameterClass="string" resultClass="openApiAuthKeyVO" cacheModel="RFC3OpenApiCache">
    		select
    				   KEY_SID keySid,
				       OPEN_API_AUTHKEY openApiAuthKey,
				       USER_ID userId,
				       USER_NM userNm,
				       START_DAY startDay,
				       END_DAY endDay,
				       BIRTHDAY birthDay,
				       ZIP zip,
				       ADDR1 addr1,
				       ADDR2 addr2,
				       TEL tel,
				       EMAIL email,
				       SERVICE_NM serviceNm,
				       USE_AIM useAim,
				       SERVICE_INFO serviceInfo,
				       STATUS status,
				       REASON_NOT_AUTH reasonNotAuth,
				       APPLY_DATE applyDate,
				       SERVICE_DATE serviceDate,
				       SMS_SEND_DATE  smsSendDate
             from 
             			RFC_COMTOPENAPIAUTHKEY
             where  USER_ID =#userId#
    </select>
    <insert id="OpenApiDAO.insertAuthKey"  parameterClass="openApiAuthKeyVO" >    				
						insert into 
							RFC_COMTOPENAPIAUTHKEY( 
								KEY_SID,
								OPEN_API_AUTHKEY,
								USER_ID,
								USER_NM,
								START_DAY,
								END_DAY,
								BIRTHDAY,
								ZIP,
								ADDR1,
								ADDR2,
								TEL,
								EMAIL,
								SERVICE_NM,
								USE_AIM,
								SERVICE_INFO,
								STATUS,
								REASON_NOT_AUTH,
								APPLY_DATE,
								SERVICE_DATE
						 ) values (
						 		#keySid# ,
						 		#openApiAuthKey# ,
						 		#userId# ,
						 		#userNm# ,
						 		#startDay# ,
						 		#endDay# ,
						 		#birthDay# ,
						 		#zip# , 
						 		#addr1#, 
						 		#addr2#,
						 		#tel# ,
						 		#email# ,
						 		#serviceNm# ,
						 		#useAim# ,
						 		#serviceInfo# ,
						 		#status# ,
						 		#reasonNotAuth# ,
						 		#applyDate# ,
						 		#serviceDate#  
						  )
    				
    </insert>
    <update id="OpenApiDAO.updateAuthKey"  parameterClass="openApiAuthKeyVO" >    				
						update  RFC_COMTOPENAPIAUTHKEY
								set  START_DAY = #startDay#, 
								END_DAY = #endDay#, 
								BIRTHDAY = #birthDay#,
								ZIP = #zip#,
								ADDR1 = #addr1#,
								ADDR2 = #addr2#, 
								TEL = #tel#, 
								EMAIL = #email#, 
								SERVICE_NM = #serviceNm#, 
								USE_AIM = #useAim#, 
								USER_NM =#userNm#,
								SERVICE_INFO = #serviceInfo#, 
								STATUS =#status#,
								REASON_NOT_AUTH = #reasonNotAuth#,
								APPLY_DATE=sysdate
								
						where 
								 KEY_SID=#keySid#
    </update>
     <update id="OpenApiDAO.updateDelayApplyAuthKey"  parameterClass="openApiAuthKeyVO" >    				
								update   RFC_COMTOPENAPIAUTHKEY
								set  START_DAY = #startDay#, 
								END_DAY = #endDay#, 
								STATUS =#status#
						where 
								 OPEN_API_AUTHKEY=#openApiAuthKey#
    </update>
     <update id="OpenApiDAO.updateSmsSendDate"  parameterClass="openApiAuthKeyVO" >    				
						update  RFC_COMTOPENAPIAUTHKEY
								set  SMS_SEND_DATE = #smsSendDate#
						where 
								 KEY_SID=#keySid#
    </update>
    <delete id="OpenApiDAO.deleteAuthKey"  parameterClass="long" >    				
						delete from 
								RFC_COMTOPENAPIAUTHKEY
						where 
								 KEY_SID=#keySid#
    </delete>
	
	<select id="OpenApiDAO.selectQosListTotCnt"  parameterClass="openApiQosVO"  resultClass="int" cacheModel="RFC3OpenApiCache">
		 			select  
		 			    	/*+ parallel(8) */ 
					   count(*) totcnt 
					  from RFC_COMTOPENAPIQOS
					  
					  where 1=1
					   <isNotEmpty prepend="AND" property="searchCondition" >
			          		     $searchCondition$  LIKE '%$searchKeyword$%'
					  </isNotEmpty>
			  
	</select>
	<select id="OpenApiDAO.selectQosList"  parameterClass="openApiQosVO"  resultClass="openApiQosVO" cacheModel="RFC3OpenApiCache">
	SELECT  * 
  FROM (
		SELECT ROWNUM RNUM, ALL_LIST.*  
		FROM  
		(
			 select  
					     <isNotEmpty  property="oracleHint" >
					             /*+ INDEX_DESC (a $oracleHint$) */
					     </isNotEmpty>
				         a.QOS_SID qosSid, 
				         a.SERVICE_URL serviceUrl, 
				         a.OPEN_API_AUTHKEY openApiAuthKey, 
				         (select  USER_ID from RFC_COMTOPENAPIAUTHKEY where OPEN_API_AUTHKEY=a.OPEN_API_AUTHKEY )  userId, 
				         (select  USER_NM from RFC_COMTOPENAPIAUTHKEY where OPEN_API_AUTHKEY=a.OPEN_API_AUTHKEY )  userNm, 
				         a.START_TIME startTime, 
				         a.END_TIME endTime, 
				         a.DIFFERENCE_TIME differenceTime, 
				         a.STATUS status, 
				         a.FAIL_REASON failReason, 
				         a.REG_DATE regDate, 
				         a.QUERY_STRING queryString, 
				         a.USER_IP userIp 
				    from RFC_COMTOPENAPIQOS a 
			  
			  where 1=1
			   <isNotEmpty prepend="AND" property="searchCondition" >
	          		     $searchCondition$  LIKE '%$searchKeyword$%'
			  </isNotEmpty>
			  	 ORDER BY qosSid desc
	         	
			 ) ALL_LIST
	      )
   WHERE  RNUM  &gt; #firstIndex#
   AND  RNUM &lt;= #firstIndex# + #recordCountPerPage#	         	
	</select>
    
    

    <insert	 id="OpenApiDAO.insertQos"  parameterClass="openApiQosVO">
    			insert into		RFC_COMTOPENAPIQOS (
	    								 QOS_SID,
	    								 SERVICE_URL,
	    								 QUERY_STRING,
	    								 OPEN_API_AUTHKEY,
	    								 START_TIME,
	    								 END_TIME,
	    								 DIFFERENCE_TIME,
	    								 STATUS,
	    								 FAIL_REASON,
	    								 REG_DATE ,
	    								 USER_IP
    								 )  values (
	    								 #qosSid# ,
	    								 #serviceUrl# ,
	    								 #queryString#,
	    								 #openApiAuthKey# ,
	    								 #startTime# ,
	    								 #endTime# , 
	    								 #differenceTime#,
	    								 #status# ,
	    								 #failReason# ,
	    								 #regDate# ,
	    								 #userIp#
    								  )
    </insert>
    
    <insert	 id="OpenApiDAO.insertSmsCertiNum"  parameterClass="smsCertiVO">
    			insert into		RFC_COMTNSMSCERTI (
	    								 ID,
	    								 CERTI_NUM,
	    								 REQUEST_TIME
    								 )  values (
	    								 #id# ,
	    								 #certiNum# ,
	    								 #requestTime#
    								  )
    </insert>
    
    <delete	 id="OpenApiDAO.deleteSmsCertiNum"  parameterClass="smsCertiVO">
    			DELETE 
    			FROM
    				RFC_COMTNSMSCERTI
    			WHERE
    				ID = #id# AND CERTI_NUM = #certiNum#
    </delete>
    
    <select	 id="OpenApiDAO.selectSmsCertiNum"  parameterClass="smsCertiVO" resultClass="smsCertiVO" cacheModel="RFC3OpenApiCache">
    			SELECT
    				 ID id,
					 CERTI_NUM certiNum,
					 REQUEST_TIME requestTime
    			FROM
    				RFC_COMTNSMSCERTI
    			WHERE
    				ID = #id# AND CERTI_NUM = #certiNum#
    </select>
    
    
    
    
    
    
    
    
    
    
    <select id="OpenApiDAO.selectOpenApiStatusList" parameterClass="openApiStatusVO" resultClass="openApiStatusVO">
    			select 
    				ST_SID stSid,
    				ST_URL stUrl,
    				ST_PARAM stParam,
    				OPEN_API_AUTHKEY  openApiKey 
    			from 
    				RFC_COMTOPENAPI_STATUS a,
    				RFC_COMTOPENAPIAUTHKEY b 
    			where 
    				a.GUBUN='A' order by ST_SID asc
    </select>
    
    <insert id="OpenApiDAO.insertOpenApiStatics" parameterClass="openApiStatiscVO">
    			insert into RFC_COMTOPENAPI_STATICS  (
		    			    API_RFC_STATIC_SID,
							API_OFFER_SID,
							API_URL,
							USED_SERVICE_KEY,
							AVG_TIME,
							CALL_CNT,
							ERR_CNT,
							MAX_TIME,
						    STATIC_DATE
					 ) values (
							 #apiRfcStaticSid#,
							 #apiOfferSid#,
							 #apiUrl#,
							 #usedServiceKey#,
							 #avgTime#,
							 #callCnt#,
							 #errCnt#,
							 #maxTime#,
							 #staticDate#
					 )
    </insert>
    
    <select id="OpenApiDAO.selectQosOktotCnt"  parameterClass="openApiQosVO"  resultClass="int" >
		 			 select  
				         count(a.QOS_SID) as cnt
				    from 
				        RFC_COMTOPENAPIQOS a
			      where 
			          a.OPEN_API_AUTHKEY=#openApiAuthKey# and
			          a.SERVICE_URL like #serviceUrl# || '%' and 
			          a.QUERY_STRING like  '%' || #queryString# || '%' and 
			          a.STATUS='OK' and
			          a.REG_DATE  &gt;=TO_DATE(#searchSDate#,'YYYY-MM-DD') and a.REG_DATE  &lt; TO_DATE(#searchEdate#,'YYYY-MM-DD')
	</select>
	<select id="OpenApiDAO.selectQosFailtotCnt"  parameterClass="openApiQosVO"  resultClass="int" >
		 			 select  
				         count(a.QOS_SID) as cnt
				    from 
				        RFC_COMTOPENAPIQOS a
			      where 
			          a.OPEN_API_AUTHKEY=#openApiAuthKey# and
			          a.SERVICE_URL like #serviceUrl# || '%' and 
			          a.QUERY_STRING like  '%' || #queryString# || '%' and 
			          a.STATUS='FAIL' and
			           a.REG_DATE  &gt;=TO_DATE(#searchSDate#,'YYYY-MM-DD') and a.REG_DATE  &lt; TO_DATE(#searchEdate#,'YYYY-MM-DD')
	</select>
	
	<select id="OpenApiDAO.selectQosAvgTime"  parameterClass="openApiQosVO"  resultClass="float" >
		 			 select  
				         nvl(avg(a.DIFFERENCE_TIME),'0') as differenceTime
				    from 
				        RFC_COMTOPENAPIQOS a
			      where 
			          a.OPEN_API_AUTHKEY=#openApiAuthKey# and
			          a.SERVICE_URL like #serviceUrl# || '%' and 
			          a.QUERY_STRING like  '%' || #queryString# || '%' and 
			          a.STATUS='OK' and
			          a.REG_DATE  &gt;=TO_DATE(#searchSDate#,'YYYY-MM-DD') and a.REG_DATE  &lt; TO_DATE(#searchEdate#,'YYYY-MM-DD')
	</select>
	
	<select id="OpenApiDAO.selectQosMaxTime"  parameterClass="openApiQosVO"  resultClass="int" >
		 			 select  
				         nvl(max(a.DIFFERENCE_TIME),'0' )as differenceTime
				    from 
				        RFC_COMTOPENAPIQOS a
			      where 
			          a.OPEN_API_AUTHKEY=#openApiAuthKey# and
			          a.SERVICE_URL like #serviceUrl# || '%' and 
			          a.QUERY_STRING like  '%' || #queryString# || '%' and 
			          a.STATUS='OK' and
			           a.REG_DATE  &gt;=TO_DATE(#searchSDate#,'YYYY-MM-DD') and a.REG_DATE  &lt; TO_DATE(#searchEdate#,'YYYY-MM-DD')
	</select>
	
	
	
    <select id="OpenApiDAO.selectOpenApiServicesAllStaticsList"  parameterClass="openApiStatiscVO"  resultClass="openApiStatiscVO" >
    
    	 select
			 C.ST_SID apiOfferSid,
			 C.ST_NAME stName,
			 nvl(callCnt,0) callCnt,
			 nvl(errCnt,0) errCnt,
			 nvl(maxTime,0) maxTime,
			 nvl(avgTime,0) avgTime
	 from
		 RFC_COMTOPENAPI_STATUS C,
		 (
		 
		 SELECT 
					        A.API_OFFER_SID  apiOfferSid,
					       sum(A.CALL_CNT)  callCnt ,
					       sum(A.ERR_CNT) errCnt,
					       max(A.MAX_TIME) maxTime,
					       avg(A.AVG_TIME) avgTime
	           FROM 
	              RFC_COMTOPENAPI_STATICS A
	           where  
	                 A.STATIC_DATE &gt;=TO_DATE(#searchSDate# || ' 00:00','YYYY-MM-DD HH24:MI') and A.STATIC_DATE &lt;= TO_DATE(#searchEDate# || '23:59','YYYY-MM-DD HH24:MI') 
	    
	           group by  A.API_OFFER_SID
	           order by A.API_OFFER_SID ASC
	      ) D
	      where
	      C.GUBUN='A' and
	      C.ST_SID=D.apiOfferSid (+)
      order by callCnt desc
      
	</select>
	
	<select id="OpenApiDAO.selectOpenApiUserAllStaticsList"  parameterClass="openApiStatiscVO"  resultClass="openApiStatiscVO" >
		 			 select
							 C.USER_NM userNm,
							 C.OPEN_API_AUTHKEY usedServiceKey,
							 nvl(callCnt,0) callCnt,
							 nvl(errCnt,0) errCnt,
							 nvl(maxTime,0) maxTime,
							 nvl(avgTime,0) avgTime
						 from
						 RFC_COMTOPENAPIAUTHKEY C,
						 (
						 
						 SELECT 
									       A.USED_SERVICE_KEY usedServiceKey,
									       sum(A.CALL_CNT)  callCnt ,
									       sum(A.ERR_CNT) errCnt,
									       max(A.MAX_TIME) maxTime,
									       avg(A.AVG_TIME) avgTime
					           FROM 
					              RFC_COMTOPENAPI_STATICS A
					           where 
					                   A.STATIC_DATE &gt;=TO_DATE(#searchSDate# || ' 00:00','YYYY-MM-DD HH24:MI') and A.STATIC_DATE &lt;= TO_DATE(#searchEDate# || '23:59','YYYY-MM-DD HH24:MI') 
					           group by  A.USED_SERVICE_KEY
					  
					      ) D
	      where
			      C.STATUS='1' and
			      C.OPEN_API_AUTHKEY=D.usedServiceKey (+)
	      order by callCnt desc
		 		
	</select>
	
	
	<select id="OpenApiDAO.selectOpenApiUserStaticsList"  parameterClass="openApiStatiscVO"  resultClass="openApiStatiscVO" >
				 	select
				 	   * 
				 	from
					 	(	
						 		SELECT 
								        A.API_OFFER_SID apiOfferSid,
								        (select ST_NAME from RFC_COMTOPENAPI_STATUS where ST_SID=A.API_OFFER_SID ) stName,
								       sum(A.CALL_CNT) callCnt,
								       sum(A.ERR_CNT) errCnt,
								       max(A.MAX_TIME) maxTime,
								       avg(A.AVG_TIME) avgTime
				           FROM 
				              RFC_COMTOPENAPI_STATICS A
				                
				           where 
				                 A.USED_SERVICE_KEY=#usedServiceKey# and
				                 A.STATIC_DATE &gt;=TO_DATE(#searchSDate# || ' 00:00','YYYY-MM-DD HH24:MI') and A.STATIC_DATE &lt;= TO_DATE(#searchEDate# || '23:59','YYYY-MM-DD HH24:MI') 
		         
			          		 group by  A.API_OFFER_SID 
			           )  dd
		           order by  dd.callCnt DESC
	</select>
	<delete id="OpenApiDAO.deleteOpenApiStatics" parameterClass="openApiStatiscVO">
		   delete from 
		        RFC_COMTOPENAPI_STATICS
		   where
		    STATIC_DATE  &gt;=TO_DATE(#searchSDate#,'YYYY-MM-DD') and STATIC_DATE  &lt; TO_DATE(#searchEDate#,'YYYY-MM-DD')
	</delete>
	
</sqlMap>