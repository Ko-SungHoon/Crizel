<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RFCBoardDataManage">
	
	<cacheModel type="${Globals.ibatis.default.cache}" id="RFCBoardDataManageCache" readOnly="true" serialize="false">
      <flushInterval hours="24" />
      	<flushOnExecute statement="boardDAO.insertBoardData"/>
		<flushOnExecute statement="boardDAO.updateBoardData"/>
		<flushOnExecute statement="boardDAO.updateDataReplyOrder"/>
		<flushOnExecute statement="boardDAO.updateDataViewCount"/>
		<flushOnExecute statement="boardDAO.deleteBoardData"/>
		<flushOnExecute statement="boardDAO.updateBoardDataStatus"/>
		<flushOnExecute statement="boardDAO.insertExtensionData"/>
		<flushOnExecute statement="boardDAO.updateExtensionData"/>
		<flushOnExecute statement="boardDAO.insertBoardFile"/>
		<flushOnExecute statement="boardDAO.deleteBoardFile"/>
		<flushOnExecute statement="boardDAO.insertComment"/>
		<flushOnExecute statement="boardDAO.updateCommentReplyOrder"/>
		<flushOnExecute statement="boardDAO.deleteComment"/>
		<flushOnExecute statement="boardDAO.deleteDataListManager"/>
      	<flushOnExecute statement="boardDAO.deleteDataFileManager"/>
      	<flushOnExecute statement="boardDAO.deleteDataExtManager"/>
      	<flushOnExecute statement="boardDAO.deleteDataCommentManager"/>
      	<flushOnExecute statement="boardDAO.insertBoardDataLike"/>
      	<flushOnExecute statement="boardDAO.deleteBoardDataLike"/>      	
      	<flushOnExecute statement="boardDAO.insertCommentDataLike"/>
      	
     </cacheModel>
     
	<typeAlias  alias="egovMap"      type = "egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias  alias="boardVO"	 type = "egovframework.rfc3.board.vo.BoardVO"/>
    <typeAlias  alias="boardSearchVO"	 type = "egovframework.rfc3.board.vo.BoardSearchVO"/>
    <typeAlias  alias="boardDataVO"	 type = "egovframework.rfc3.board.vo.BoardDataVO"/>
    <typeAlias  alias="boardExtensionDataVO"	 type = "egovframework.rfc3.board.vo.BoardExtensionDataVO"/>
    <typeAlias  alias="boardFileVO"	 type = "egovframework.rfc3.board.vo.BoardFileVO"/>
    <typeAlias  alias="commentVO"	 type = "egovframework.rfc3.board.vo.CommentVO"/>
    <typeAlias  alias="boardDataLikeVO"	 type = "egovframework.rfc3.board.vo.BoardDataLikeVO"/>
    <typeAlias  alias="commentLikeVO"	 type = "egovframework.rfc3.board.vo.CommentLikeVO"/>
     
     <resultMap id="menu" class="egovframework.rfc3.menu.vo.MenuVO">
        	<result property="menuSid" column="menuSid" />
         	<result property="menuCd" column="menuCd" />
         	<result property="menuNm" column="menuNm" />
           <result property="menuParentCd" column="menuParentCd" />
			<result property="menuSortIx" column="menuSortIx" />
			<result property="menuIsUse" column="menuIsUse" />
			<result property="menuDp" column="menuDp" />
			<result property="sgroupId" column="sgroupId" />
			<result property="domainId" column="domainId" />
			<result property="officeNm" column="officeNm" />
			<result property="layoutSid" column="layoutSid" />
			<result property="pcode" column="pcode" />
			<result property="menuContentsSid" column="menuContentsSid" />
			<result property="menuLeftOutimg" column="menuLeftOutimg" />
			<result property="menuLeftOverimg" column="menuLeftOverimg" />
			<result property="menuLeftCurimg" column="menuLeftCurimg" />
			<result property="menuLeftTopimg" column="menuLeftTopimg" />
			<result property="menuIntroImg" column="menuIntroImg" />
			<result property="menuTg" column="menuTg" />
			<result property="menuBoardGb" column="menuBoardGb" />
			<result property="menuBoard1Cate" column="menuBoard1Cate" />
			<result property="menuBoard2Cate" column="menuBoard2Cate" />
			<result property="menuBoard3Cate" column="menuBoard3Cate" />
			<result property="menuOrderField" column="menuOrderField" />
			<result property="menuOrderSort" column="menuOrderSort" />
			<result property="boardPcode" column="boardPcode" />
			<result property="menuIsSatis" column="menuIsSatis" />
			<result property="menuIsBoard1Cate" column="menuIsBoard1Cate" />
			<result property="menuIsBoard2Cate" column="menuIsBoard2Cate" />
			<result property="menuIsBoard3Cate" column="menuIsBoard3Cate" />
			<result property="menuBoardCel" column="menuBoardCel" />
			<result property="menuBoardRow" column="menuBoardRow" />
			<result property="menuBoardPageBlock" column="menuBoardPageBlock" />
			<result property="menuIsFix1Cate" column="menuIsFix1Cate" />
			<result property="menuIsFix2Cate" column="menuIsFix2Cate" />
			<result property="menuIsFix3Cate" column="menuIsFix3Cate" />
			<result property="menuIsReturnPage" column="menuIsReturnPage" />
			<result property="menuLoginApply" column="menuLoginApply" />
			<result property="menuIsSkinApply" column="menuIsSkinApply" />
			<result property="categoryCode1" column="categoryCode1" />
			<result property="categoryCode2" column="categoryCode2" />
			<result property="categoryCode3" column="categoryCode3" />
			<result property="menuIsLeftPrint" column="menuIsLeftPrint" />
			<result property="menuTgOption" column="menuTgOption" />
			<result property="officePtSid" column="officePtSid" />
			<result property="menuHelp" column="menuHelp" />
			<result property="cateCd" column="cateCd" />
			<result property="cate1Cd" column="cate1Cd" />
			<result property="cate2Cd" column="cate2Cd" />
			<result property="cate3Cd" column="cate3Cd" />
			<result property="contentsType" column="contentsType" />
			<result property="contentsLinkUrl" column="contentsLinkUrl" />
			<result property="contentsModiDate" column="contentsModiDate" />
			<result property="skinId" column="skinId" />
    </resultMap>
     
    <select id="boardDAO.selectBoardDataListTotal"  parameterClass="boardSearchVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							count(distinct(A.DATA_SID)) totcnt																					  
						FROM
							RFC_COMTNBBSDATA A 
							<isNotEmpty property="extensionKey" >
								LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
								ON A.DATA_SID = B.DATA_SID
							</isNotEmpty>
							<isEmpty property="extensionKey" >
								<isNotEmpty property="userWhereSql" >
									LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
									ON A.DATA_SID = B.DATA_SID
								</isNotEmpty>
							</isEmpty>
						WHERE A.DELETE_STATUS != 'D' AND A.DATA_NOTICE = 0						
						<isNotEmpty prepend="AND" property="boardSidList" >
							A.BOARD_SID IN ($boardSidList$)
						</isNotEmpty>  
						<isNotEmpty prepend="AND" property="boardId" >
							A.BOARD_ID = #boardId#
						</isNotEmpty>
						<isNotEmpty property="userWhereSql" >
							$userWhereSql$
						</isNotEmpty>												
						AND (1=1
						<isNotEmpty prepend="AND" property="startTs" >
							A.REGISTER_DATE >= #startTs#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="endTs" >
							#endTs# >= A.REGISTER_DATE 
						</isNotEmpty>
						)												
						<isEqual prepend="AND" property="isManager" compareValue="false">
									A.DATA_STATUS != 'F' AND 
									(
										( NOW() >= A.START_DATE AND A.END_DATE >= NOW()) OR 
										( A.START_DATE IS NULL AND A.END_DATE IS NULL) OR
										( NOW() >= A.START_DATE AND A.END_DATE IS NULL) OR 
										( A.START_DATE IS NULL AND A.END_DATE >= NOW())	
									)
						</isEqual>
						<isEqual property="isListPrivateFl" compareValue="true">
									<isNotEmpty prepend="AND" property="userId" >
											( A.USER_ID = #userId# OR A.DATA_SECRET = '0' )
									</isNotEmpty>									 
									<isEmpty prepend="AND" property="userId" >
											A.DATA_SECRET = '0'
									</isEmpty>
						</isEqual>
						
						
						
						<isEqual property="isManager" compareValue="false">
							<!--isEqual prepend="AND" property="isDataDeleteFl" compareValue="false"-->
							AND	A.DELETE_STATUS != 'Y'
							<!--/isEqual-->
							AND (A.DATA_STATUS = 'N' OR A.DATA_STATUS = '' OR A.DATA_STATUS IS NULL) 
						</isEqual>
						
						
						<isNotEmpty prepend="AND" property="extensionKey" >
								 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="pcode" >
								 A.PCODE LIKE '$pcode$%'
						</isNotEmpty>						
						<isNotEqual prepend="AND" property="dataDep" compareValue="0">
								 A.DATA_DEP = #dataDep#
						</isNotEqual>
						<isNotEmpty prepend="AND" property="categoryCode1Query" >
								$categoryCode1Query$
						</isNotEmpty>						
						<isNotEmpty prepend="AND" property="categoryCode2Query" >
								$categoryCode2Query$
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode3Query" >
								$categoryCode3Query$
						</isNotEmpty>						
						<isEmpty  property="extensionKey" >
							<isNotEmpty prepend="AND" property="searchType" >
									 ( $whereStr$ )
							</isNotEmpty>						
						</isEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc1" >
								 ( $whereStrEtc1$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc2" >
								 ( $whereStrEtc2$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc3" >
								 ( $whereStrEtc3$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc4" >
								 ( $whereStrEtc4$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc5" >
								 ( $whereStrEtc5$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc6" >
								 ( $whereStrEtc6$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc7" >
								 ( $whereStrEtc7$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc8" >
								 ( $whereStrEtc8$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc9" >
								 ( $whereStrEtc9$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc10" >
								 ( $whereStrEtc10$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeAll" >
						 ( $whereStr$ )
						</isNotEmpty>
						
	</select>

	<select id="boardDAO.selectGetdistance"  parameterClass="boardSearchVO" resultClass="boardDataVO" >
	SELECT * 
  FROM 
       (SELECT ROWNUM RNUM, 
              ALL_LIST.* 
         FROM 
              (SELECT T.* 
                FROM 
                     (SELECT DATA_SID, 
                            BOARD_ID, 
                            USER_CEL, 
                            USER_ADDRESS, 
                            USER_DETAILADDR, 
                            DATA_TITLE, 
                            DATA_CONTENT, 
                            TMP_FIELD1, 
                            STAR_POINT, 
                            GETDISTANCE(126.41095, 35.8161205, TMP_FIELD4, TMP_FIELD5) AS GETDISTANCE 
                       FROM RFC_COMTNBBSDATA 
                      WHERE BOARD_ID = 'BBS_0000052' 
                            AND TMP_FIELD4 IS NOT NULL 
                            AND TMP_FIELD5 IS NOT NULL 
                            AND DATA_SID NOT IN (80) 
                            AND DELETE_STATUS != 'D' 
                     ) T 
               WHERE T.GETDISTANCE &lt; 2
              ) ALL_LIST 
        WHERE 1=1 
       ) 
 		LIMIT #pageSize# OFFSET #pageIndex# 
	</select>
	<select id="boardDAO.selectBoardDataList"  parameterClass="boardSearchVO" resultClass="boardDataVO"  >
						SELECT
							distinct(A.DATA_SID) dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.DATA_CONTENT dataContent,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
					<isEqual property="isAnother" compareValue="Echelon">
						<isEqual property="isEchelon" compareValue="true">								
							ECL_DECRYPT(A.USER_TEL) userTel,
							ECL_DECRYPT(A.USER_CEL) userCel,
							ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
							ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
							ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
							ECL_DECRYPT(A.USER_EMAIL) userEmail,
						</isEqual>
						<isNotEqual property="isEchelon" compareValue="true">								
							A.USER_TEL userTel,
							A.USER_CEL userCel,
							A.USER_DETAILADDR userDetailAddr,
							A.USER_JUMIN1 userJumin1,
							A.USER_JUMIN2 userJumin2,
							A.USER_EMAIL userEmail,
						</isNotEqual>
					</isEqual>
					
					<isEqual property="isAnother" compareValue="Damo">
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
							SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
					</isEqual>
					
					<isEmpty property="isAnother">
							A.USER_TEL userTel,
							A.USER_CEL userCel,
							A.USER_DETAILADDR userDetailAddr,
							A.USER_JUMIN1 userJumin1,
							A.USER_JUMIN2 userJumin2,
							A.USER_EMAIL userEmail,
					</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,							
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_DATA_CONTENT backupDataContent,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.FILTER_CONTENT filterContent,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt																		  
						FROM
							RFC_COMTNBBSDATA A 
							<isNotEmpty property="extensionKey" >
								LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
								ON A.DATA_SID = B.DATA_SID
							</isNotEmpty>
							<isEmpty property="extensionKey" >
								<isNotEmpty property="userWhereSql" >
									LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
									ON A.DATA_SID = B.DATA_SID
								</isNotEmpty>
							</isEmpty>
						WHERE A.DELETE_STATUS != 'D' 
						
				<isEqual prepend="AND" property="noticeBy" compareValue="true">
					A.DATA_NOTICE = 1
				</isEqual>
				<isNotEqual prepend="AND" property="noticeBy" compareValue="true">
					A.DATA_NOTICE = 0
				</isNotEqual>
										
						<isNotEmpty prepend="AND" property="boardSidList" >
							A.BOARD_SID IN ($boardSidList$)
						</isNotEmpty>  
						<isNotEmpty prepend="AND" property="boardId" >
							A.BOARD_ID = #boardId#
						</isNotEmpty>
						<isNotEmpty property="userWhereSql" >
							$userWhereSql$
						</isNotEmpty>		
						AND (1=1
						<isNotEmpty prepend="AND" property="startTs" >
							A.REGISTER_DATE >= #startTs#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="endTs" >
							#endTs# >= A.REGISTER_DATE 
						</isNotEmpty>
						)							
						<isEqual prepend="AND" property="isManager" compareValue="false">
									<!-- 
									A.DATA_STATUS != 'F' AND 
									(
										( NOW() >= A.START_DATE AND A.END_DATE >= NOW()) OR 
										( A.START_DATE IS NULL AND A.END_DATE IS NULL) OR
										( NOW() >= A.START_DATE AND A.END_DATE IS NULL) OR 
										( A.START_DATE IS NULL AND A.END_DATE >= NOW())	
									)
									-->
									<!-- 기간검색이 되지않아서 아래로 해결  2016-11-24 부터 2016-11-24 -->
									A.DATA_STATUS != 'F' AND 
									(
										( DATE_FORMAT(NOW(),'%Y-%m-%d') >= A.START_DATE AND A.END_DATE >= DATE_FORMAT(NOW(),'%Y-%m-%d')) OR 
										( A.START_DATE IS NULL AND A.END_DATE IS NULL) OR
										( DATE_FORMAT(NOW(),'%Y-%m-%d') >= A.START_DATE AND A.END_DATE IS NULL) OR 
										( A.START_DATE IS NULL AND A.END_DATE >= DATE_FORMAT(NOW(),'%Y-%m-%d'))	
									)
									
						</isEqual>
						<isEqual property="isListPrivateFl" compareValue="true">
									<isNotEmpty prepend="AND" property="userId" >
											( A.USER_ID = #userId# OR A.DATA_SECRET = '0' )
									</isNotEmpty>									 
									<isEmpty prepend="AND" property="userId" >
											A.DATA_SECRET = '0'
									</isEmpty>
						</isEqual>
						<isEqual property="isManager" compareValue="false">
							<!--isEqual prepend="AND" property="isDataDeleteFl" compareValue="false"-->
							AND	A.DELETE_STATUS != 'Y'
							<!--/isEqual-->
							AND (A.DATA_STATUS = 'N' OR A.DATA_STATUS = '' OR A.DATA_STATUS IS NULL) 
						</isEqual>
						<isNotEmpty prepend="AND" property="extensionKey" >
								 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="pcode" >
								 A.PCODE LIKE '$pcode$%'
						</isNotEmpty>						
						<isNotEqual prepend="AND" property="dataDep" compareValue="0">
								 A.DATA_DEP = #dataDep#
						</isNotEqual>
						<isNotEmpty prepend="AND" property="categoryCode1Query" >
								$categoryCode1Query$
						</isNotEmpty>						
						<isNotEmpty prepend="AND" property="categoryCode2Query" >
								$categoryCode2Query$
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode3Query" >
								$categoryCode3Query$
						</isNotEmpty>						
						<isEmpty  property="extensionKey" >
							<isNotEmpty prepend="AND" property="searchType" >
									 ( $whereStr$ )
							</isNotEmpty>						
						</isEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc1" >
						 ( $whereStrEtc1$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc2" >
								 ( $whereStrEtc2$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc3" >
								 ( $whereStrEtc3$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc4" >
								 ( $whereStrEtc4$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc5" >
								 ( $whereStrEtc5$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc6" >
								 ( $whereStrEtc6$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc7" >
								 ( $whereStrEtc7$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc8" >
								 ( $whereStrEtc8$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc9" >
								 ( $whereStrEtc9$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc10" >
								 ( $whereStrEtc10$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeAll" >
						 ( $whereStr$ )
						</isNotEmpty>
				
						<isNotEmpty  property="orderBy" >
							  ORDER BY  $orderBy$
						</isNotEmpty>
						<isEmpty  property="orderBy" >
							ORDER BY dataIdx DESC, dataRef DESC, dataDep ASC
						</isEmpty>
						LIMIT #pageSize# OFFSET #pageIndex#
	</select>
	
	<select id="boardDAO.selectBoardNoticeDataList"  parameterClass="boardSearchVO" resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							distinct(A.DATA_SID) dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.DATA_CONTENT dataContent,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>
							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">								
								A.USER_TEL userTel,
								A.USER_CEL userCel,
								A.USER_DETAILADDR userDetailAddr,
								A.USER_JUMIN1 userJumin1,
								A.USER_JUMIN2 userJumin2,
								A.USER_EMAIL userEmail,
							</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_DATA_CONTENT backupDataContent,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.FILTER_CONTENT filterContent,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt,																		  
							A.REGISTER_DATE register_dt,
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_NOTICE = 1 
						
						<isNotEmpty prepend="AND" property="startTs" >
							A.REGISTER_DATE >= #startTs#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="endTs" >
							#endTs# >= A.REGISTER_DATE 
						</isNotEmpty>
						
						<isNotEmpty prepend="AND" property="startTs" >
							A.REGISTER_DATE >= #startTs#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="endTs" >
							#endTs# >= A.REGISTER_DATE 
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode1Query" >
								$categoryCode1Query$
						</isNotEmpty>						
						<isNotEmpty prepend="AND" property="categoryCode2Query" >
								$categoryCode2Query$
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode3Query" >
								$categoryCode3Query$
						</isNotEmpty>
						<isEqual prepend="AND" property="isManager" compareValue="false">
									A.DATA_STATUS != 'F' AND 
									(
										( NOW() >= A.START_DATE AND A.END_DATE >= NOW()) OR 
										( A.START_DATE IS NULL AND A.END_DATE IS NULL) OR
										( NOW() >= A.START_DATE AND A.END_DATE IS NULL) OR 
										( A.START_DATE IS NULL AND A.END_DATE >= NOW())	
									)
						</isEqual>
						ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC
	</select>
	
	
	
	<!-- 대기중인 게시판 목록 2016.12.10 허성철 -->
	<select id="boardDAO.selectStandByDataList"  parameterClass="boardSearchVO" resultClass="boardDataVO">
						
						SELECT
							distinct(A.DATA_SID) dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>

							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">	
															
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								
							</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.TMP_FIELD11 tmpField11,
							A.TMP_FIELD12 tmpField12,
							A.TMP_FIELD13 tmpField13,
							A.TMP_FIELD14 tmpField14,
							A.TMP_FIELD15 tmpField15,
							A.TMP_FIELD16 tmpField16,
							A.TMP_FIELD17 tmpField17,
							A.TMP_FIELD18 tmpField18,
							A.TMP_FIELD19 tmpField19,
							A.TMP_FIELD20 tmpField20,
							A.PAY_MENT payMent,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt,
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date																		  
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DATA_STATUS = 'T'  and A.DELETE_STATUS='N'
					
						<isEqual  property="isManager" compareValue="false">
						             <isNotEmpty prepend="AND" property="userId" >
										A.USER_ID = #userId# 
									</isNotEmpty>	
									<isEmpty prepend="AND" property="userId" >
										A.USER_ID = '--NONE-ACCESS--'
									</isEmpty>	
						</isEqual>
						
						ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC
	</select>
	
	
	
	
	
	<select id="boardDAO.selectScheduleDataList"  parameterClass="boardSearchVO" resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							distinct(A.DATA_SID) dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.DATA_CONTENT dataContent,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>
							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">								
								A.USER_TEL userTel,
								A.USER_CEL userCel,
								A.USER_DETAILADDR userDetailAddr,
								A.USER_JUMIN1 userJumin1,
								A.USER_JUMIN2 userJumin2,
								A.USER_EMAIL userEmail,
							</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_DATA_CONTENT backupDataContent,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.FILTER_CONTENT filterContent,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt,
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date																		  
						FROM
							RFC_COMTNBBSDATA A 
							<isNotEmpty property="extensionKey" >
								LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
								ON A.DATA_SID = B.DATA_SID
							</isNotEmpty>
							<isEmpty property="extensionKey" >
								<isNotEmpty property="userWhereSql" >
									LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
									ON A.DATA_SID = B.DATA_SID
								</isNotEmpty>
							</isEmpty>
						WHERE A.DELETE_STATUS != 'D' 	AND 
							(
								(A.START_DATE &lt; #startTs# AND #startTs#  &lt;= A.END_DATE ) OR
								<!-- AND A.END_DATE &lt;= #endTs# -->
								(A.START_DATE >= #startTs# AND A.START_DATE &lt;= #endTs#) OR
								<!-- AND A.END_DATE > #endTs# -->
								(A.START_DATE  &lt; #startTs# AND A.END_DATE > #endTs# ) OR
								(A.START_DATE IS NULL AND A.END_DATE >= #startTs# ) OR
								(A.END_DATE IS  NULL AND A.START_DATE &lt;= #endTs#) OR
								(A.START_DATE IS NULL AND A.END_DATE IS  NULL)
							)
						
						<isNotEmpty prepend="AND" property="boardSidList" >
							A.BOARD_SID IN ($boardSidList$)
						</isNotEmpty>  
						<isNotEmpty prepend="AND" property="boardId" >
							A.BOARD_ID = #boardId#
						</isNotEmpty>
						<isNotEmpty property="userWhereSql" >
							$userWhereSql$
						</isNotEmpty>		
						<isEqual prepend="AND" property="isManager" compareValue="false">
									A.DATA_STATUS != 'F'
						</isEqual>
						<isEqual property="isListPrivateFl" compareValue="true">
									<isNotEmpty prepend="AND" property="userId" >
											( A.USER_ID = #userId# OR A.DATA_SECRET = FALSE )
									</isNotEmpty>									 
									<isEmpty prepend="AND" property="userId" >
											A.DATA_SECRET = FALSE
									</isEmpty>
						</isEqual>
						<isEqual property="isManager" compareValue="false">
							<!--isEqual prepend="AND" property="isDataDeleteFl" compareValue="false"-->
							AND	A.DELETE_STATUS != 'Y'
							<!--/isEqual-->
							AND (A.DATA_STATUS = 'N' OR A.DATA_STATUS = '' OR A.DATA_STATUS IS NULL) 
						</isEqual>
						<isNotEmpty prepend="AND" property="extensionKey" >
								 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="pcode" >
								 A.PCODE LIKE '$pcode$%'
						</isNotEmpty>						
						<isNotEqual prepend="AND" property="dataDep" compareValue="0">
								 A.DATA_DEP = #dataDep#
						</isNotEqual>
						<isNotEmpty prepend="AND" property="categoryCode1Query" >
								$categoryCode1Query$
						</isNotEmpty>						
						<isNotEmpty prepend="AND" property="categoryCode2Query" >
								$categoryCode2Query$
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode3Query" >
								$categoryCode3Query$
						</isNotEmpty>						
						<isEmpty  property="extensionKey" >
							<isNotEmpty prepend="AND" property="searchType" >
									 ( $whereStr$ )
							</isNotEmpty>						
						</isEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc1" >
								 ( $whereStrEtc1$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc2" >
								 ( $whereStrEtc2$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc3" >
								 ( $whereStrEtc3$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc4" >
								 ( $whereStrEtc4$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc5" >
								 ( $whereStrEtc5$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc6" >
								 ( $whereStrEtc6$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc7" >
								 ( $whereStrEtc7$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc8" >
								 ( $whereStrEtc8$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc9" >
								 ( $whereStrEtc9$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc10" >
								 ( $whereStrEtc10$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeAll" >
						 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty  property="orderBy" >
							  ORDER BY  $orderBy$
						</isNotEmpty>
						<isEmpty  property="orderBy" >
							ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC
						</isEmpty>						
						LIMIT #pageSize# OFFSET #pageIndex#
	</select>
	
	<select id="boardDAO.selectScheduleDataListTotal"  parameterClass="boardSearchVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							count(distinct(A.DATA_SID)) totcnt																			  
						FROM
							RFC_COMTNBBSDATA A 
							<isNotEmpty property="extensionKey" >
								LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
								ON A.DATA_SID = B.DATA_SID
							</isNotEmpty>
							<isEmpty property="extensionKey" >
								<isNotEmpty property="userWhereSql" >
									LEFT OUTER JOIN RFC_COMTNBBSEXTDATA B
									ON A.DATA_SID = B.DATA_SID
								</isNotEmpty>
							</isEmpty>
						WHERE A.DELETE_STATUS != 'D' 	AND 
							(
								(A.START_DATE &lt; #startTs# AND #startTs#  &lt;= A.END_DATE ) OR
								<!-- AND A.END_DATE &lt;= #endTs# -->
								(A.START_DATE >= #startTs# AND A.START_DATE &lt;= #endTs#) OR
								<!-- AND A.END_DATE > #endTs# -->
								(A.START_DATE  &lt; #startTs# AND A.END_DATE > #endTs# ) OR
								(A.START_DATE IS NULL AND A.END_DATE >= #startTs# ) OR
								(A.END_DATE IS  NULL AND A.START_DATE &lt;= #endTs#) OR
								(A.START_DATE IS NULL AND A.END_DATE IS  NULL)
							)
						
						<isNotEmpty prepend="AND" property="boardSidList" >
							A.BOARD_SID IN ($boardSidList$)
						</isNotEmpty>  
						<isNotEmpty prepend="AND" property="boardId" >
							A.BOARD_ID = #boardId#
						</isNotEmpty>
						<isNotEmpty property="userWhereSql" >
							$userWhereSql$
						</isNotEmpty>		
						<isEqual prepend="AND" property="isManager" compareValue="false">
									A.DATA_STATUS != 'F'
						</isEqual>
						<isEqual property="isListPrivateFl" compareValue="true">
									<isNotEmpty prepend="AND" property="userId" >
											( A.USER_ID = #userId# OR A.DATA_SECRET = FALSE )
									</isNotEmpty>									 
									<isEmpty prepend="AND" property="userId" >
											A.DATA_SECRET = FALSE
									</isEmpty>
						</isEqual>
						<isEqual property="isManager" compareValue="false">
							<!--isEqual prepend="AND" property="isDataDeleteFl" compareValue="false"-->
							AND	A.DELETE_STATUS != 'Y'
							<!--/isEqual-->
							AND (A.DATA_STATUS = 'N' OR A.DATA_STATUS = '' OR A.DATA_STATUS IS NULL) 
						</isEqual>
						<isNotEmpty prepend="AND" property="extensionKey" >
								 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="pcode" >
								 A.PCODE LIKE '$pcode$%'
						</isNotEmpty>						
						<isNotEqual prepend="AND" property="dataDep" compareValue="0">
								 A.DATA_DEP = #dataDep#
						</isNotEqual>
						<isNotEmpty prepend="AND" property="categoryCode1Query" >
								$categoryCode1Query$
						</isNotEmpty>						
						<isNotEmpty prepend="AND" property="categoryCode2Query" >
								$categoryCode2Query$
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="categoryCode3Query" >
								$categoryCode3Query$
						</isNotEmpty>						
						<isEmpty  property="extensionKey" >
							<isNotEmpty prepend="AND" property="searchType" >
									 ( $whereStr$ )
							</isNotEmpty>						
						</isEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc1" >
								 ( $whereStrEtc1$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc2" >
								 ( $whereStrEtc2$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc3" >
								 ( $whereStrEtc3$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc4" >
								 ( $whereStrEtc4$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc5" >
								 ( $whereStrEtc5$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc6" >
								 ( $whereStrEtc6$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc7" >
								 ( $whereStrEtc7$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc8" >
								 ( $whereStrEtc8$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc9" >
								 ( $whereStrEtc9$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeEtc10" >
								 ( $whereStrEtc10$ )
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="searchTypeAll" >
						 ( $whereStr$ )
						</isNotEmpty>
						<isNotEmpty  property="orderBy" >
							  ORDER BY  $orderBy$
						</isNotEmpty>
						<isEmpty  property="orderBy" >
							ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC
						</isEmpty>
	</select>
    
	<select id="boardDAO.selectBoardDataReplyList"  parameterClass="boardDataVO" resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache">						
						SELECT
							A.DATA_SID dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.DATA_CONTENT dataContent,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>
							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">								
								A.USER_TEL userTel,
								A.USER_CEL userCel,
								A.USER_DETAILADDR userDetailAddr,
								A.USER_JUMIN1 userJumin1,
								A.USER_JUMIN2 userJumin2,
								A.USER_EMAIL userEmail,
							</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_DATA_CONTENT backupDataContent,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.FILTER_CONTENT filterContent,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt,																		  
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_IDX = #dataIdx# AND 0 > A.DATA_REF AND A.DATA_DEP > 1
						ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
	</select>
	<select id="boardDAO.selectBoardDataOriginal"  parameterClass="boardDataVO" resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache">						
						SELECT
							A.DATA_SID dataSid,
							A.BOARD_SID boardSid,
							A.BOARD_ID boardId,
							A.DATA_IDX dataIdx,
							A.DATA_REF dataRef,
							A.DATA_DEP dataDep,
							A.DATA_TITLE dataTitle,
							A.DATA_CONTENT dataContent,
							A.USER_ID userId,
							A.USER_PW userPw,
							A.USER_NICK userNick,
							A.USER_ICON userIcon,							
							A.USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>
							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">								
								A.USER_TEL userTel,
								A.USER_CEL userCel,
								A.USER_DETAILADDR userDetailAddr,
								A.USER_JUMIN1 userJumin1,
								A.USER_JUMIN2 userJumin2,
								A.USER_EMAIL userEmail,
							</isEmpty>
							A.USER_ZIPCODE userZipcode,
							A.USER_ADDRESS userAddress,
							A.TMP_FIELD1 tmpField1,
							A.TMP_FIELD2 tmpField2,
							A.TMP_FIELD3 tmpField3,
							A.TMP_FIELD4 tmpField4,
							A.TMP_FIELD5 tmpField5,
							A.TMP_FIELD6 tmpField6,
							A.TMP_FIELD7 tmpField7,
							A.TMP_FIELD8 tmpField8,
							A.TMP_FIELD9 tmpField9,
							A.TMP_FIELD10 tmpField10,
							A.BACKUP_DATA_TITLE backupDataTitle,
							A.BACKUP_DATA_CONTENT backupDataContent,
							A.BACKUP_USER_NICK backupUserNick,
							A.DATA_NOTICE dataNotice,
							A.DATA_SECRET dataSecret,
							A.ANSWER_STATUS answerStatus,
							A.DATA_STATUS dataStatus,
							A.DELETE_STATUS deleteStatus,
							A.TAG_NAME tagName,
							A.TAG_ID tagId,
							A.VIEW_COUNT viewCount,
							A.FILTER_CONTENT filterContent,
							A.START_DATE startDate,
							A.END_DATE endDate,
							A.SCHEDULE_ITERATE scheduleIterate,
							A.CATEGORY_CODE1 categoryCode1,
							A.CATEGORY_CODE2 categoryCode2,
							A.CATEGORY_CODE3 categoryCode3,
							A.PCODE pcode,
							A.STAR_POINT starPoint,
							A.ADMIN_REPLY_NOTICE adminReplyNotice,
							A.CCL_IS_WRITER					cclIsWriter,
							A.CCL_IS_PAY							cclIsPay,
							A.CCL_IS_MODIFY					cclIsModify,
							A.MODIFY_DATE modify_dt,
							A.REGISTER_DATE register_dt,																		  
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_IDX = #dataIdx# AND A.DATA_REF = 0 AND A.DATA_DEP  = 1
						ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
	</select>
	<select id="boardDAO.getDataContent"  parameterClass="boardDataVO" resultClass="string" cacheModel="RFCBoardDataManageCache">						
						SELECT
							A.DATA_CONTENT dataContent																							  
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_SID = #dataSid#						
	</select>
	<select id="boardDAO.selectBoardDataReplyCount"  parameterClass="boardDataVO" resultClass="int" cacheModel="RFCBoardDataManageCache">						
						SELECT
							count(*) totcnt																  
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_IDX = #dataIdx# AND #dataRef# >  A.DATA_REF
						ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
	</select>
	<select id="boardDAO.getBoardData" parameterClass="boardDataVO"  resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache">
			       	SELECT			       			
			       			DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							DATA_IDX dataIdx,
							DATA_REF dataRef,
							DATA_DEP dataDep,
							DATA_TITLE dataTitle,
							DATA_CONTENT dataContent,
							USER_NICK userNick,
							USER_ID userId,
							USER_PW userPw,
							USER_ICON userIcon,
							USER_HOMEPAGE userHomepage,
							<isEqual property="isAnother" compareValue="Echelon">
								<isEqual property="isEchelon" compareValue="true">								
									ECL_DECRYPT(A.USER_TEL) userTel,
									ECL_DECRYPT(A.USER_CEL) userCel,
									ECL_DECRYPT(A.USER_DETAILADDR) userDetailAddr,
									ECL_DECRYPT(A.USER_JUMIN1) userJumin1,
									ECL_DECRYPT(A.USER_JUMIN2) userJumin2,
									ECL_DECRYPT(A.USER_EMAIL) userEmail,
								</isEqual>
								<isNotEqual property="isEchelon" compareValue="true">								
									A.USER_TEL userTel,
									A.USER_CEL userCel,
									A.USER_DETAILADDR userDetailAddr,
									A.USER_JUMIN1 userJumin1,
									A.USER_JUMIN2 userJumin2,
									A.USER_EMAIL userEmail,
								</isNotEqual>
							</isEqual>
							<isEqual property="isAnother" compareValue="Damo">
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_TEL) userTel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_CEL) userCel,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_DETAILADDR) userDetailAddr,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN1) userJumin1,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_JUMIN2) userJumin2,
								SCP.DEC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,A.USER_EMAIL) userEmail,
							</isEqual>
							<isEmpty property="isAnother">								
								A.USER_TEL userTel,
								A.USER_CEL userCel,
								A.USER_DETAILADDR userDetailAddr,
								A.USER_JUMIN1 userJumin1,
								A.USER_JUMIN2 userJumin2,
								A.USER_EMAIL userEmail,
							</isEmpty>
							USER_ZIPCODE userZipcode,
							USER_ADDRESS userAddress,
							TMP_FIELD1 tmpField1,
							TMP_FIELD2 tmpField2,
							TMP_FIELD3 tmpField3,
							TMP_FIELD4 tmpField4,
							TMP_FIELD5 tmpField5,
							TMP_FIELD6 tmpField6,
							TMP_FIELD7 tmpField7,
							TMP_FIELD8 tmpField8,
							TMP_FIELD9 tmpField9,
							TMP_FIELD10 tmpField10,
							BACKUP_DATA_TITLE backupDataTitle,
							BACKUP_DATA_CONTENT backupDataContent,
							BACKUP_USER_NICK backupUserNick,
							DATA_NOTICE dataNotice,
							DATA_SECRET dataSecret,
							ANSWER_STATUS answerStatus,
							DATA_STATUS dataStatus,
							DELETE_STATUS deleteStatus,
							TAG_NAME tagName,
							TAG_ID tagId,
							VIEW_COUNT viewCount,
							FILTER_CONTENT filterContent,
							START_DATE startDate,
							END_DATE endDate,
							SCHEDULE_ITERATE scheduleIterate,
							CATEGORY_CODE1 categoryCode1,
							CATEGORY_CODE2 categoryCode2,
							CATEGORY_CODE3 categoryCode3,
							PCODE pcode,
							STAR_POINT starPoint,
							ADMIN_REPLY_NOTICE adminReplyNotice,
							CCL_IS_WRITER					cclIsWriter,
							CCL_IS_PAY							cclIsPay,
							CCL_IS_MODIFY					cclIsModify,
							MODIFY_DATE modify_dt,							
							REGISTER_DATE register_dt,
							A.DELETE_ID deleteId,
							A.DELETE_NAME deleteName,
							A.DELETE_DATE delete_date
						FROM
						    RFC_COMTNBBSDATA	A						
						WHERE  DATA_SID = #dataSid#
						<isNotEmpty prepend="AND" property="boardId" >
							BOARD_ID = #boardId#
						</isNotEmpty>
						<!-- AND BOARD_ID = #boardId#  -->
	</select>
	<select id="boardDAO.passwordValidate" parameterClass="boardSearchVO"  resultClass="int" cacheModel="RFCBoardDataManageCache">
			       	SELECT
							count(DATA_SID) totcnt
						FROM
						    RFC_COMTNBBSDATA						
						WHERE BOARD_ID = #boardId# AND DATA_SID = #dataSid# AND USER_PW = #userPw#
	</select>
	<select id="boardDAO.getBoardDataIdx" parameterClass="boardVO"  resultClass="int" cacheModel="RFCBoardDataManageCache">
			       	SELECT
							MAX(DATA_IDX)+1 dataIdx
						FROM
						    RFC_COMTNBBSDATA						
						WHERE BOARD_ID = #boardId#
	</select>	
	<insert id="boardDAO.insertBoardData" parameterClass="boardDataVO"  >
			       	INSERT INTO RFC_COMTNBBSDATA
			       	(
			       		DATA_SID,
						BOARD_ID,
						BOARD_SID,
						DATA_IDX,
						DATA_REF,
						DATA_DEP,
						USER_ID,
						USER_PW,
						USER_NICK,
						USER_ICON,
						USER_LEVEL,
						USER_IP,
						USER_HOMEPAGE,
						USER_TEL,
						USER_CEL,
						USER_DETAILADDR,
						USER_JUMIN1,
						USER_JUMIN2,
						USER_EMAIL,
						USER_ZIPCODE,
						USER_ADDRESS,						
						TMP_FIELD1,
						TMP_FIELD2,
						TMP_FIELD3,
						TMP_FIELD4,
						TMP_FIELD5,
						TMP_FIELD6,
						TMP_FIELD7,
						TMP_FIELD8,
						TMP_FIELD9,
						TMP_FIELD10,
						DATA_TITLE,
						DATA_CONTENT,
						BACKUP_DATA_TITLE,
						BACKUP_DATA_CONTENT,
						BACKUP_USER_NICK,
						DATA_NOTICE,
						DATA_SECRET,
						ANSWER_STATUS,
						DATA_STATUS,
						DELETE_STATUS,
						TAG_NAME,
						TAG_ID,
						VIEW_COUNT,
						FILTER_CONTENT,
						START_DATE,
						END_DATE,
						SCHEDULE_ITERATE,
						CATEGORY_CODE1,
						CATEGORY_CODE2,
						CATEGORY_CODE3,
						PCODE,
						STAR_POINT,
						ADMIN_REPLY_NOTICE,
						CCL_IS_WRITER,
						CCL_IS_PAY,
						CCL_IS_MODIFY,
						MODIFY_DATE,
						REGISTER_DATE
			       	)
			       	VALUES
			       	(
			       		#dataSid#,
						#boardId#,
						#boardSid#,
						#dataIdx#,
						#dataRef#,
						#dataDep#,
						#userId#,
						#userPw#,
						#userNick#,
						#userIcon#,
						#userLevel#,
						#userIp#,
						#userHomepage#,
						<isEqual property="isAnother" compareValue="Echelon">
							<isEqual property="isEchelon" compareValue="true">								
								ECL_ENCRYPT(#userTel#),
								ECL_ENCRYPT(#userCel#),						
								ECL_ENCRYPT(#userDetailAddr#),
								ECL_ENCRYPT(#userJumin1#),
								ECL_ENCRYPT(#userJumin2#),
								ECL_ENCRYPT(#userEmail#),
							</isEqual>
							<isNotEqual property="isEchelon" compareValue="true">								
								#userTel#,
								#userCel#,						
								#userDetailAddr#,
								#userJumin1#,
								#userJumin2#,
								#userEmail#,
							</isNotEqual>
						</isEqual>
						<isEqual property="isAnother" compareValue="Damo">
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userTel#),
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userCel#),
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userDetailAddr#),
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userJumin1#),
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userJumin2#),
								SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userEmail#),
						</isEqual>
						<isEmpty property="isAnother">
								#userTel#,
								#userCel#,						
								#userDetailAddr#,
								#userJumin1#,
								#userJumin2#,
								#userEmail#,
						</isEmpty>
						#userZipcode#,
						#userAddress#,
						#tmpField1#,
						#tmpField2#,
						#tmpField3#,
						#tmpField4#,
						#tmpField5#,
						#tmpField6#,
						#tmpField7#,
						#tmpField8#,
						#tmpField9#,
						#tmpField10#,
						#dataTitle#,
						#dataContent#,
						#backupDataTitle#,
						#backupDataContent#,
						#backupUserNick#,
						#dataNotice#,
						#dataSecret#,
						#answerStatus#,
						#dataStatus#,
						'N',
						#tagName#,
						#tagId#,
						#viewCount#,
						#filterContent#,
						#startDate#,
						#endDate#,
						#scheduleIterate#,
						#categoryCodeData1#,
						#categoryCodeData2#,
						#categoryCodeData3#,
						#pcode#,
						#starPoint#,
						'',
						#cclIsWriter#,
						#cclIsPay#,
						#cclIsModify#,
						#modify_dt#,
						#register_dt#
			       	)			       	
	</insert>
	<update id="boardDAO.updateBoardData" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET
						<isNotEmpty property="userId" >
			       		USER_ID = #userId#,
			       		</isNotEmpty>
				       	<isNotEmpty property="userPw" >
				       		USER_PW=#userPw#,
				       	</isNotEmpty>
						USER_NICK=#userNick#,
						USER_ICON=#userIcon#,
						USER_HOMEPAGE=#userHomepage#,
						<isEqual property="isAnother" compareValue="Echelon">
							<isEqual property="isEchelon" compareValue="true">								
								USER_TEL = ECL_ENCRYPT(#userTel#),
								USER_CEL = ECL_ENCRYPT(#userCel#),
								USER_DETAILADDR = ECL_ENCRYPT(#userDetailAddr#),
								USER_JUMIN1 = ECL_ENCRYPT(#userJumin1#),
								USER_JUMIN2 = ECL_ENCRYPT(#userJumin2#),
								USER_EMAIL = ECL_ENCRYPT(#userEmail#),
							</isEqual>
							<isNotEqual property="isEchelon" compareValue="true">								
								USER_TEL = #userTel#,
								USER_CEL = #userCel#,
								USER_DETAILADDR = #userDetailAddr#,
								USER_JUMIN1 = #userJumin1#,
								USER_JUMIN2 = #userJumin2#,
								USER_EMAIL = #userEmail#,
							</isNotEqual>
						</isEqual>
						<isEqual property="isAnother" compareValue="Damo">
							USER_TEL = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userTel#),
							USER_CEL = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userCel#),
							USER_DETAILADDR = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userDetailAddr#),
							USER_JUMIN1 = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userJumin1#),
							USER_JUMIN2 = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userJumin2#),
							USER_EMAIL = SCP.ENC_STR(#damoUser#,'RFC_COMTNBBSDATA',#damoKey#,#userEmail#),
						</isEqual>
						<isEmpty property="isAnother">								
							USER_TEL = #userTel#,
							USER_CEL = #userCel#,
							USER_DETAILADDR = #userDetailAddr#,
							USER_JUMIN1 = #userJumin1#,
							USER_JUMIN2 = #userJumin2#,
							USER_EMAIL = #userEmail#,
						</isEmpty>
						USER_ZIPCODE = #userZipcode#,
						USER_ADDRESS = #userAddress#,						
						TMP_FIELD1 = #tmpField1#,
						TMP_FIELD2 = #tmpField2#,
						TMP_FIELD3 = #tmpField3#,
						TMP_FIELD4 = #tmpField4#,
						TMP_FIELD5 = #tmpField5#,
						TMP_FIELD6 = #tmpField6#,
						TMP_FIELD7 = #tmpField7#,
						TMP_FIELD8 = #tmpField8#,
						TMP_FIELD9 = #tmpField9#,
						TMP_FIELD10 = #tmpField10#,
						DATA_TITLE=#dataTitle#,
						DATA_CONTENT=#dataContent#,
						FILTER_CONTENT=#filterContent#,
						BACKUP_DATA_TITLE=#backupDataTitle#,
						BACKUP_DATA_CONTENT=#backupDataContent#,
						BACKUP_USER_NICK=#backupUserNick#,
						DATA_NOTICE=#dataNotice#,
						DATA_SECRET=#dataSecret#,
						TAG_NAME=#tagName#,
						TAG_ID=#tagId#,
						START_DATE=#startDate#,
						END_DATE=#endDate#,
						SCHEDULE_ITERATE=#scheduleIterate#,
						CATEGORY_CODE1=#categoryCodeData1#,
						CATEGORY_CODE2=#categoryCodeData2#,
						CATEGORY_CODE3=#categoryCodeData3#,
						PCODE=#pcode#,
						CCL_IS_WRITER=#cclIsWriter#,
						CCL_IS_PAY=#cclIsPay#,
						CCL_IS_MODIFY=#cclIsModify#,
						MODIFY_DATE=#modify_dt#,
						ANSWER_STATUS=#answerStatus#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update>	
	<update id="boardDAO.updateDataReplyOrder" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		DATA_REF = DATA_REF - 1
					WHERE DATA_IDX=#dataIdx# AND BOARD_ID=#boardId# AND DATA_DEP != 1 AND #dataRef# >= DATA_REF 
	</update>
	<update id="boardDAO.updateDataViewCount" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		VIEW_COUNT = VIEW_COUNT+1
					WHERE DATA_SID = #dataSid# AND BOARD_ID=#boardId# 
	</update>
	<update id="boardDAO.updateDataStarPoint" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		STAR_POINT = #starPoint#
					WHERE DATA_SID = #dataSid# AND BOARD_ID=#boardId# 
	</update>
	<update id="boardDAO.deleteBoardData" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		DELETE_STATUS = #deleteStatus#,
			       		DATA_TITLE=#dataTitle#,
						DATA_CONTENT=#dataContent#,
						BACKUP_DATA_TITLE=#backupDataTitle#,
						BACKUP_DATA_CONTENT=#backupDataContent#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update> 
	<update id="boardDAO.updateBoardDataStatus" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		DATA_STATUS = #dataStatus#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update>
	<update id="boardDAO.updateBoardDataAnswerStatus" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		ANSWER_STATUS = #answerStatus#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update>
	<update id="boardDAO.updateBoardDataReplyNotice" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET			       	
			       		ADMIN_REPLY_NOTICE = #adminReplyNotice#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update>	
	
	<insert id="boardDAO.insertExtensionData" parameterClass="boardExtensionDataVO"  >
			       	INSERT INTO RFC_COMTNBBSEXTDATA
			       	(
			       		DATA_SID,
						BOARD_ID,
						EXTENSION_KEY,
						EXTENSION_VALUE
			       	)
			       	VALUES
			       	(
			       		#dataSid#,
						#boardId#,
						#extensionKey#,
						#extensionValue#
			       	)			       	
	</insert>
	
	<update id="boardDAO.updateExtensionData" parameterClass="boardExtensionDataVO"  >
			       	UPDATE RFC_COMTNBBSEXTDATA
			       	SET
						EXTENSION_VALUE = #extensionValue#
					WHERE  BOARD_ID = #boardId# AND DATA_SID = #dataSid# AND EXTENSION_KEY=#extensionKey#
	</update>
	
	<select id="boardDAO.selectBoardExtensionDataList"  parameterClass="boardDataVO" resultClass="boardExtensionDataVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							DATA_SID dataSid,
							BOARD_ID boardId,
							EXTENSION_KEY extensionKey,
							EXTENSION_VALUE extensionValue																  
						FROM
						 	  RFC_COMTNBBSEXTDATA
						WHERE  BOARD_ID = #boardId# AND DATA_SID = #dataSid#
	</select>
	<select id="boardDAO.selectBoardExtensionDataCount"  parameterClass="boardExtensionDataVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							count(*) totcnt 															  
						FROM
						 	  RFC_COMTNBBSEXTDATA
						WHERE  BOARD_ID = #boardId# AND DATA_SID = #dataSid# AND EXTENSION_KEY=#extensionKey#
	</select>
	<select id="boardDAO.selectBoardFile"  parameterClass="boardDataVO" resultClass="boardFileVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							FILE_SID fileSid,
							DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							FILE_NAME fileName,
							FILE_MASK fileMask,
							FILE_MEMO fileMemo,
							FILE_SIZE fileSize,
							FILE_STATUS fileStatus,
							FILE_DEL_STATUS fileDelStatus,
							FILE_ID fileId,
							DOWNLOAD_CNT downloadCnt,
							REGISTER_DT register_dt
						FROM 
							RFC_COMTNBBSFILE
						WHERE
							DATA_SID = #dataSid# AND FILE_DEL_STATUS = 'N' AND (1=0 	
								<isNotEqual prepend="OR" property="boardSid" compareValue="0">
									BOARD_SID = #boardSid#
								</isNotEqual>
								<isNotEmpty prepend="OR" property="boardId" >
									BOARD_ID = #boardId#
								</isNotEmpty>
							)
						ORDER BY FILE_SID ASC
	</select>
	<select id="boardDAO.getBoardFile"  parameterClass="boardFileVO" resultClass="boardFileVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							FILE_SID fileSid,
							DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							FILE_NAME fileName,
							FILE_MASK fileMask,
							FILE_MEMO fileMemo,
							FILE_SIZE fileSize,
							FILE_STATUS fileStatus,
							FILE_DEL_STATUS fileDelStatus,
							FILE_ID fileId,
							DOWNLOAD_CNT downloadCnt,
							REGISTER_DT register_dt
						FROM 
							RFC_COMTNBBSFILE
						WHERE
							DATA_SID = #dataSid# AND FILE_SID = #fileSid#
	</select>
	<insert id="boardDAO.insertBoardFile" parameterClass="boardFileVO"  >
					INSERT INTO RFC_COMTNBBSFILE
					(
						FILE_SID,
						DATA_SID,
						BOARD_ID,
						BOARD_SID,
						FILE_NAME,
						FILE_MASK,
						FILE_MEMO,
						FILE_SIZE,
						FILE_STATUS,
						FILE_DEL_STATUS,
						FILE_ID,
						DOWNLOAD_CNT,
						REGISTER_DT
					)
					VALUES
					(
						#fileSid#,
						#dataSid#,
						#boardId#,
						#boardSid#,
						#fileName#,
						#fileMask#,
						#fileMemo#,
						#fileSize#,
						#fileStatus#,
						#fileDelStatus#,
						#fileId#,
						#downloadCnt#,
						#register_dt#
					)			       		       	
	</insert>
	<update id="boardDAO.updateBoardFile" parameterClass="boardFileVO"  >
					UPDATE
						RFC_COMTNBBSFILE
					SET											
						FILE_MEMO = #fileMemo#,
						FILE_STATUS = #fileStatus#,
						FILE_DEL_STATUS = #fileDelStatus#,
						DOWNLOAD_CNT = #downloadCnt#
					WHERE 
						DATA_SID = #dataSid# AND FILE_SID = #fileSid#		       		       	
	</update>
	<update id="boardDAO.deleteBoardFile" parameterClass="boardFileVO"  >
					UPDATE RFC_COMTNBBSFILE
					SET
						FILE_DEL_STATUS = 'D'
					WHERE 
						DATA_SID = #dataSid# AND FILE_SID = #fileSid#
	</update>	
	<update id="boardDAO.updateBoardFileId" parameterClass="boardFileVO"  >
					UPDATE
						RFC_COMTNBBSFILE
					SET											
						FILE_ID = #fileId#
					WHERE 
						DATA_SID = #dataSid# AND FILE_SID = #fileSid#		       		       	
	</update>
	
	<update id="boardDAO.updateFileDeleteStatus" parameterClass="boardDataVO"  >
					UPDATE RFC_COMTNBBSFILE
					SET
						FILE_DEL_STATUS = #deleteStatus#
					WHERE 
						DATA_SID = #dataSid# AND FILE_DEL_STATUS != 'D'
	</update>
	
	<select id="boardDAO.getBoardCommentIdx" parameterClass="boardSearchVO"  resultClass="int" cacheModel="RFCBoardDataManageCache">
			       	SELECT
							MAX(DATA_IDX)+1 dataIdx
						FROM
						    RFC_COMTNBBSCOMMENT						
						WHERE BOARD_ID = #boardId# AND DATA_SID = #dataSid#
	</select>
	<select id="boardDAO.selectCommentCount"  parameterClass="boardSearchVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							count(*) totcnt
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							DATA_SID = #dataSid# AND BOARD_ID = #boardId# AND COMMENT_STATUS = 'N'
	</select>
	
	<select id="boardDAO.getStarPoint"  parameterClass="boardSearchVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							CAST(SUM(STAR_POINT) / COUNT(COMMENT_SID) AS UNSIGNED)
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							DATA_SID = #dataSid# AND COMMENT_STATUS = 'N' AND STAR_POINT > 0
	</select>
	
	<select id="boardDAO.selectCommentList"  parameterClass="boardSearchVO" resultClass="commentVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							COMMENT_SID commentSid,
							DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							DATA_IDX dataIdx,
							DATA_REF dataRef,
							DATA_DEP dataDep,
							USER_ID userId,
							USER_NICK userNick,
							USER_PW userPw,
							STAR_POINT starPoint,
							COMMENT_TITLE commentTitle,
							COMMENT_STATUS commentStatus,
							USER_IP userIp,
							FILE_NAME fileName,
							FILE_MASK fileMask,
							FILE_SIZE fileSize,
							REGISTER_DT register_dt
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							DATA_SID = #dataSid# AND BOARD_ID = #boardId#	AND COMMENT_STATUS = 'N'					
						ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC						
						LIMIT #pageSize# OFFSET #commentIndex#
	</select>
	<select id="boardDAO.selectCommentListAll"  parameterClass="boardDataVO" resultClass="commentVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							COMMENT_SID commentSid,
							DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							DATA_IDX dataIdx,
							DATA_REF dataRef,
							DATA_DEP dataDep,
							USER_ID userId,
							USER_NICK userNick,
							USER_PW userPw,
							STAR_POINT starPoint,
							COMMENT_TITLE commentTitle,
							COMMENT_STATUS commentStatus,
							USER_IP userIp,
							FILE_NAME fileName,
							FILE_MASK fileMask,
							FILE_SIZE fileSize,
							REGISTER_DT register_dt
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							DATA_SID = #dataSid# AND BOARD_ID = #boardId#	AND COMMENT_STATUS = 'N'					
						ORDER BY DATA_IDX DESC, DATA_REF DESC, DATA_DEP ASC						
	</select>
	<select id="boardDAO.getComment"  parameterClass="commentVO" resultClass="commentVO" cacheModel="RFCBoardDataManageCache">
						SELECT
							COMMENT_SID commentSid,
							DATA_SID dataSid,
							BOARD_ID boardId,
							BOARD_SID boardSid,
							DATA_IDX dataIdx,
							DATA_REF dataRef,
							DATA_DEP dataDep,
							USER_ID userId,
							USER_NICK userNick,
							USER_PW userPw,
							STAR_POINT starPoint,
							COMMENT_TITLE commentTitle,
							COMMENT_STATUS commentStatus,
							USER_IP userIp,
							FILE_NAME fileName,
							FILE_MASK fileMask,
							FILE_SIZE fileSize,
							REGISTER_DT register_dt
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							COMMENT_SID = #commentSid# AND DATA_SID = #dataSid# AND BOARD_ID = #boardId#	AND COMMENT_STATUS = 'N'					
	</select>	
	<insert id="boardDAO.insertComment" parameterClass="commentVO"  >
					INSERT INTO RFC_COMTNBBSCOMMENT
					(
						COMMENT_SID,
						DATA_SID,
						BOARD_ID,
						BOARD_SID,
						DATA_IDX,
						DATA_REF,
						DATA_DEP,
						USER_ID,
						USER_NICK,
						USER_PW,
						STAR_POINT,
						COMMENT_TITLE,
						COMMENT_STATUS,
						USER_IP,
						FILE_NAME,
						FILE_MASK,
						FILE_SIZE,
						REGISTER_DT
					)
					VALUES
					(
						#commentSid#,
						#dataSid#,
						#boardId#,
						#boardSid#,
						#dataIdx#,
						#dataRef#,
						#dataDep#,
						#userId#,
						#userNick#,
						#userPw#,
						#starPoint#,
						#commentTitle#,
						#commentStatus#,
						#userIp#,
						#fileName#,
						#fileMask#,
						#fileSize#,
						#register_dt#
					)			       		       	
	</insert>
	<update id="boardDAO.updateCommentReplyOrder" parameterClass="commentVO"  >
			       	UPDATE RFC_COMTNBBSCOMMENT 
			       	SET			       	
			       		DATA_REF = DATA_REF - 1
					WHERE DATA_SID = #dataSid# AND DATA_IDX=#dataIdx# AND BOARD_ID=#boardId# AND DATA_DEP != 1 AND #dataRef# >= DATA_REF 
	</update>
	<!-- 
	<update id="boardDAO.deleteComment" parameterClass="commentVO"  >
					UPDATE RFC_COMTNBBSCOMMENT
					SET
						COMMENT_STATUS = 'D'
					WHERE 
						DATA_SID = #dataSid# AND COMMENT_SID = #commentSid#
	</update>
	 -->
	 <delete id="boardDAO.deleteComment" parameterClass="commentVO"  >
					DELETE FROM RFC_COMTNBBSCOMMENT					
					WHERE 
						DATA_SID = #dataSid# AND COMMENT_SID = #commentSid#
	</delete>
	
	<select id="boardDAO.selectBoardDataManagerTotal"  parameterClass="boardVO" resultClass="int" >
    	SELECT
    		count(*) totcnt
    	FROM
    		RFC_COMTNBBSDATA A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
    	WHERE 1=1
    		<isNotEmpty prepend="AND" property="boardId" >
          		    B.BOARD_ID =#boardId# 
            </isNotEmpty>	
    		<isNotEmpty prepend="AND" property="searchCondition" >
          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="sgroupId" >
          		     B.SGROUP_ID  = #sgroupId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="domainId" >
                      B.DOMAIN_ID  = #domainId#
               </isNotEmpty>		
           <isEmpty  property="domainId" >
               	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
                	B.DOMAIN_ID in ( $myDomainList$ )
        		</isEqual>
           </isEmpty> 
    </select>
   <select id="boardDAO.selectBoardDataManagerList"  parameterClass="boardVO" resultClass="boardDataVO">
    	SELECT
    		A.BOARD_ID boardId,
    		A.BOARD_SID boardSid,
			A.DATA_SID dataSid,
			A.DATA_TITLE dataTitle,
			A.USER_ID userId,
			A.USER_NICK userNIck,
			A.USER_IP userIp,
			A.DATA_DEP dataDep,
			A.DATA_STATUS dataStatus,
			A.DELETE_STATUS deleteStatus,
			A.ANSWER_STATUS answerStatus,
			A.DATA_NOTICE dataNotice,
			A.DATA_SECRET dataSecret,
			A.START_DATE start_dt,
			A.END_DATE end_dt,
			A.VIEW_COUNT viewCount,
			A.REGISTER_DATE register_dt,			
    		B.BOARD_TITLE boardTitle
    	FROM
    		RFC_COMTNBBSDATA A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
    	WHERE 1=1 
    		<isNotEmpty prepend="AND" property="boardId" >
          		    B.BOARD_ID =#boardId# 
            </isNotEmpty>	
    		<isNotEmpty prepend="AND" property="searchCondition" >
          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
            </isNotEmpty>		
            <isNotEmpty prepend="AND" property="sgroupId" >
          		     B.SGROUP_ID  = #sgroupId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="domainId" >
                      B.DOMAIN_ID  = #domainId#
               </isNotEmpty>
           <isEmpty  property="domainId" >
               	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
                	B.DOMAIN_ID in ( $myDomainList$ )
        		</isEqual>
           </isEmpty> 
           <isEmpty  property="boardId">
           		ORDER BY A.DATA_SID DESC
           </isEmpty>
           <isNotEmpty property="boardId" >
           		ORDER BY A.DATA_NOTICE  DESC, A.DATA_IDX DESC,A.DATA_REF DESC,A.DATA_DEP ASC
           </isNotEmpty>           	
            LIMIT #pageSize# OFFSET #pageIndex#
    </select>
    
    
    <select id="boardDAO.selectBoardDataManagerStandbyListCnt"  parameterClass="boardVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
    	SELECT
    		count(*) totcnt
    	FROM
    		RFC_COMTNBBSDATA A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
    	WHERE 1=1 and A.DATA_STATUS='T' and A.DELETE_STATUS='N'
    		<isNotEmpty prepend="AND" property="boardId" >
          		    B.BOARD_ID =#boardId# 
            </isNotEmpty>	
    		<isNotEmpty prepend="AND" property="searchCondition" >
          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="sgroupId" >
          		     B.SGROUP_ID  = #sgroupId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="domainId" >
                      B.DOMAIN_ID  = #domainId#
               </isNotEmpty>		
           <isEmpty  property="domainId" >
               	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
                	B.DOMAIN_ID in ( $myDomainList$ )
        		</isEqual>
           </isEmpty> 
    </select>
    
    <select id="boardDAO.selectBoardDataManagerStandbyList"  parameterClass="boardVO" resultClass="boardDataVO" cacheModel="RFCBoardDataManageCache"  remapResults="true">
 
		    	SELECT
		    	    nvl((SELECT DOMAIN_NM FROM RFC_COMTNDOMAIN WHERE DOMAIN_ID=B.DOMAIN_ID ),'') domainNm,
		    		A.BOARD_ID boardId,
		    		nvl((SELECT CONTENTS_TITLE FROM RFC_COMTNCONTENTS WHERE CONTENTS_BOARDID=A.BOARD_ID AND rownum &lt; 2 ),'')  contentsTitle,
		    		A.BOARD_SID boardSid,
					A.DATA_SID dataSid,
					A.DATA_TITLE dataTitle,
					A.USER_ID userId,
					A.USER_NICK userNIck,
					A.USER_IP userIp,
					A.DATA_DEP dataDep,
					A.DATA_STATUS dataStatus,
					A.DELETE_STATUS deleteStatus,
					A.ANSWER_STATUS answerStatus,
					A.DATA_NOTICE dataNotice,
					A.DATA_SECRET dataSecret,
					A.START_DATE startDate,
					A.END_DATE endDate,
					A.VIEW_COUNT viewCount,
					A.REGISTER_DATE register_dt,			
		    		B.BOARD_TITLE boardTitle,
		    		A.TMP_FIELD1 tmpField1,
					A.TMP_FIELD2 tmpField2,
					A.TMP_FIELD3 tmpField3,
					A.TMP_FIELD4 tmpField4,
					A.TMP_FIELD5 tmpField5,
					A.TMP_FIELD6 tmpField6,
					A.TMP_FIELD7 tmpField7,
					A.TMP_FIELD8 tmpField8,
					A.TMP_FIELD9 tmpField9,
					A.TMP_FIELD10 tmpField10,
					A.TMP_FIELD11 tmpField11,
					A.TMP_FIELD12 tmpField12,
					A.TMP_FIELD13 tmpField13,
					A.TMP_FIELD14 tmpField14,
					A.TMP_FIELD15 tmpField15,
					A.TMP_FIELD16 tmpField16,
					A.TMP_FIELD17 tmpField17,
					A.TMP_FIELD18 tmpField18,
					A.TMP_FIELD19 tmpField19,
					A.TMP_FIELD20 tmpField20	
		    	FROM
		    		RFC_COMTNBBSDATA A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
		    	WHERE 1=1 and A.DATA_STATUS='T' and A.DELETE_STATUS='N'
		    	   
		    		<isNotEmpty prepend="AND" property="boardId" >
		          		    B.BOARD_ID =#boardId# 
		            </isNotEmpty>	
		    		<isNotEmpty prepend="AND" property="searchCondition" >
		          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
		            </isNotEmpty>		
		            <isNotEmpty prepend="AND" property="sgroupId" >
		          		     B.SGROUP_ID  = #sgroupId#
		            </isNotEmpty>
		            <isNotEmpty prepend="AND" property="domainId" >
		                      B.DOMAIN_ID  = #domainId#
		               </isNotEmpty>
		           <isEmpty  property="domainId" >
		               	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
		                	B.DOMAIN_ID in ( $myDomainList$ )
		        		</isEqual>
		           </isEmpty> 
		           <isNotEmpty prepend="AND" property="dataStatus" >
		                      A.DATA_STATUS  = #dataStatus#
		           </isNotEmpty>
		           <isNotEmpty prepend="AND" property="deleteStatus" >
		                      A.DELETE_STATUS  = #deleteStatus#
		           </isNotEmpty>
		      
		           ORDER BY  A.REGISTER_DATE DESC
		           	
		         	LIMIT #pageSize# OFFSET #pageIndex#
    </select>
    
    <delete id="boardDAO.deleteDataListManager"  parameterClass="boardVO" >
    	DELETE FROM RFC_COMTNBBSDATA
    	WHERE DATA_SID IN ($sidList$)
    </delete>
    <delete id="boardDAO.deleteDataFileManager"  parameterClass="boardVO" >
    	DELETE FROM RFC_COMTNBBSFILE
    	WHERE DATA_SID IN ($sidList$)
    </delete>
    <delete id="boardDAO.deleteDataExtManager"  parameterClass="boardVO" >
    	DELETE FROM RFC_COMTNBBSEXTDATA
    	WHERE DATA_SID IN ($sidList$)
    </delete>
    <delete id="boardDAO.deleteDataCommentManager"  parameterClass="boardVO" >
    	DELETE FROM RFC_COMTNBBSCOMMENT
    	WHERE DATA_SID IN ($sidList$)
    </delete>
    <select id="boardDAO.getMultiFileList"  parameterClass="boardVO" resultClass="boardFileVO" cacheModel="RFCBoardDataManageCache">
		SELECT
			FILE_SID fileSid,
			DATA_SID dataSid,
			BOARD_ID boardId,
			BOARD_SID boardSid,
			FILE_NAME fileName,
			FILE_MASK fileMask,
			FILE_MEMO fileMemo,
			FILE_SIZE fileSize,
			FILE_STATUS fileStatus,
			FILE_DEL_STATUS fileDelStatus,
			FILE_ID fileId,
			DOWNLOAD_CNT downloadCnt,
			REGISTER_DT register_dt
		FROM 
			RFC_COMTNBBSFILE
    	WHERE DATA_SID IN ($sidList$)
    </select>
    <update id="boardDAO.updateDataRegisterDt" parameterClass="boardDataVO"  >
					UPDATE RFC_COMTNBBSDATA
					SET
						REGISTER_DATE = #register_dt#
					WHERE 
						DATA_SID = #dataSid#
	</update>
	<select id="boardDAO.getBoardMenuList" parameterClass="boardSearchVO"  resultMap="menu"  cacheModel="RFCBoardDataManageCache">	
			          SELECT A.MENU_SID menuSid, 
					       A.MENU_CD menuCd, 
					       A.MENU_NM menuNm, 
					       A.MENU_PARENT_CD menuParentCd, 
					       A.MENU_SORT_IX menuSortIx, 
					       A.MENU_IS_USE menuIsUse, 
					       A.MENU_DP menuDp, 
					       A.SGROUP_ID sgroupId, 
					       A.DOMAIN_ID domainId, 
					       A.OFFICE_NM officeNm, 
					       A.LAYOUT_SID layoutSid, 
					       A.PCODE pcode, 
					       A.MENU_CONTENTS_SID menuContentsSid, 
					       A.MENU_LEFT_OUTIMG menuLeftOutimg, 
					       A.MENU_LEFT_OVERIMG menuLeftOverimg, 
					       A.MENU_LEFT_CURIMG menuLeftCurimg, 
					       A.MENU_LEFT_TOPIMG menuLeftTopimg, 
					       A.MENU_INTRO_IMG menuIntroImg, 
					       A.MENU_TG menuTg, 
					       A.MENU_BOARD_GB menuBoardGb,
					       A.MENU_BOARD_PERIOD menuBoardPeriod,
					       A.MENU_BOARD1_CATE menuBoard1Cate, 
					       A.MENU_BOARD2_CATE menuBoard2Cate, 
					       A.MENU_BOARD3_CATE menuBoard3Cate, 
					       A.MENU_ORDER_FIELD menuOrderField, 
					       A.MENU_ORDER_SORT menuOrderSort, 
					       A.BOARD_PCODE boardPcode, 
					       A.MENU_IS_SATIS menuIsSatis, 
					       A.MENU_IS_BOARD1_CATE menuIsBoard1Cate, 
					       A.MENU_IS_BOARD2_CATE menuIsBoard2Cate, 
					       A.MENU_IS_BOARD3_CATE menuIsBoard3Cate, 
					       A.MENU_BOARD_CEL menuBoardCel, 
					       A.MENU_BOARD_ROW menuBoardRow, 
					       A.MENU_BOARD_PAGE_BLOCK menuBoardPageBlock, 
					       A.MENU_IS_FIX1_CATE menuIsFix1Cate, 
					       A.MENU_IS_FIX2_CATE menuIsFix2Cate, 
					       A.MENU_IS_FIX3_CATE menuIsFix3Cate, 
					       A.MENU_IS_RETURN_PAGE menuIsReturnPage, 
					       A.MENU_LOGIN_APPLY menuLoginApply, 
					       A.MENU_IS_SKIN_APPLY menuIsSkinApply , 
					       A.CATEGORY_CODE1 categoryCode1, 
					       A.CATEGORY_CODE2 categoryCode2, 
					       A.CATEGORY_CODE3 categoryCode3, 
					       A.MENU_IS_LEFT_PRINT menuIsLeftPrint, 
					       A.MENU_TG_OPTION menuTgOption, 
					       A.OFFICE_PT_SID officePtSid, 
					       A.MENU_HELP menuHelp, 
					       A.CATE_CD cateCd, 
					       A.CATE1_CD cate1Cd, 
					       A.CATE2_CD cate2Cd, 
					       A.CATE3_CD cate3Cd, 
					       (SELECT CONTENTS_TYPE 
					         FROM RFC_COMTNCONTENTS 
					        WHERE CONTENTS_SID = A.MENU_CONTENTS_SID 
					       ) contentsType, 
					       (SELECT CONTENTS_LINK_URL 
					         FROM RFC_COMTNCONTENTS 
					        WHERE CONTENTS_SID = A.MENU_CONTENTS_SID 
					       ) contentsLinkUrl, 
					       now() contentsModiDate, 
					       SKIN_ID skinId  
					  FROM RFC_COMTNMENU A  , RFC_COMTNCONTENTS B
					  WHERE 
					  		B.CONTENTS_SID = A.MENU_CONTENTS_SID
					  		AND CONTENTS_BOARDID = #boardId#	       
							  <isNotEmpty prepend="AND" property="categoryCode1Query" >
										$categoryCode1Query$
								</isNotEmpty>						
								<isNotEmpty prepend="AND" property="categoryCode2Query" >
										$categoryCode2Query$
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="categoryCode3Query" >
										$categoryCode3Query$
								</isNotEmpty>	     
	</select>	
	
	<update id="boardDAO.updateDataTmpField" parameterClass="boardDataVO"  >
					UPDATE RFC_COMTNBBSDATA
					SET
							TMP_FIELD1 = #tmpField1#,
							PCODE = #pcode#
					WHERE 
						DATA_SID = #dataSid#
	</update>
	
	<select id="boardDAO.selectCommentUserCnt"  parameterClass="commentVO" resultClass="int" cacheModel="RFCBoardDataManageCache">
						SELECT
							count(*) totcnt
						FROM 
							RFC_COMTNBBSCOMMENT
						WHERE
							DATA_SID = #dataSid# AND USER_ID = #userId# AND COMMENT_STATUS = 'N'
	</select>
	<update id="boardDAO.deleteUserBoardData" parameterClass="boardDataVO"  >
			       	UPDATE RFC_COMTNBBSDATA 
			       	SET	
			       		USER_ID = '',	       	
			       		DELETE_STATUS = #deleteStatus#,
			       		DATA_TITLE=#dataTitle#,
						DATA_CONTENT=#dataContent#,
						BACKUP_DATA_TITLE=#backupDataTitle#,
						BACKUP_DATA_CONTENT=#backupDataContent#,
						DELETE_ID = #deleteId#,
						DELETE_NAME = #deleteName#,
						DELETE_DATE = #delete_date#
					WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update> 
	
	<select id="boardDAO.selectBoardDataReplyCnt"  parameterClass="boardDataVO" resultClass="int" cacheModel="RFCBoardDataManageCache">						
						SELECT
							count(*) totcnt																  
						FROM
							RFC_COMTNBBSDATA A 
						WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DELETE_STATUS != 'Y' AND A.DATA_IDX = #dataIdx# AND #dataRef# >  A.DATA_REF
						ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
	</select>

<select id="boardDAO.getBoardCommentAllCnt" parameterClass="boardSearchVO"  resultClass="int" cacheModel="RFCBoardDataManageCache">
		SELECT
			count(*) totcnt
		FROM 
			RFC_COMTNBBSCOMMENT A LEFT OUTER JOIN RFC_COMTNBBSDATA B ON A.DATA_SID = B.DATA_SID 	
		WHERE
			A.BOARD_SID = #boardSid# AND A.BOARD_ID = #boardId# AND A.COMMENT_STATUS = 'N'	
		AND
	 		to_char(A.REGISTER_DT,'YYYYMM')  LIKE LPAD(#strYears#,4,'0')||LPAD(#strMonths#,2,'0')||'%'
	</select>
	
	






	<select id="boardDAO.getCommentListAllPage"  parameterClass="boardSearchVO" resultClass="commentVO" cacheModel="RFCBoardDataManageCache">
		
					select 
						A.COMMENT_SID commentSid,
						A.DATA_SID dataSid,
						A.BOARD_ID boardId,
						A.BOARD_SID boardSid,
						A.DATA_IDX dataIdx,
						A.DATA_REF dataRef,
						A.DATA_DEP dataDep,
						A.USER_ID userId,
						A.USER_NICK userNick,
						A.USER_PW userPw,
						A.STAR_POINT starPoint,
						A.COMMENT_TITLE commentTitle,
						A.COMMENT_STATUS commentStatus,
						A.USER_IP userIp,
						A.FILE_NAME fileName,
						A.FILE_MASK fileMask,
						A.FILE_SIZE fileSize,
						A.REGISTER_DT register_dt
					from RFC_COMTNBBSCOMMENT A LEFT OUTER JOIN RFC_COMTNBBSDATA B ON A.DATA_SID = B.DATA_SID 	
					WHERE
						A.BOARD_SID = #boardSid# AND A.BOARD_ID = #boardId# AND A.COMMENT_STATUS = 'N'
					AND
		 				 to_char(A.REGISTER_DT,'YYYYMM')  LIKE LPAD(#strYears#,4,'0')||LPAD(#strMonths#,2,'0')||'%'
		 				 ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
			LIMIT #pageSize# OFFSET #pageIndex#			
						
	</select>
	
	<select id="boardDAO.getCommentListAll"  parameterClass="boardSearchVO" resultClass="commentVO" cacheModel="RFCBoardDataManageCache">
		
					select 
						A.COMMENT_SID commentSid,
						A.DATA_SID dataSid,
						A.BOARD_ID boardId,
						A.BOARD_SID boardSid,
						A.DATA_IDX dataIdx,
						A.DATA_REF dataRef,
						A.DATA_DEP dataDep,
						A.USER_ID userId,
						A.USER_NICK userNick,
						A.USER_PW userPw,
						A.STAR_POINT starPoint,
						A.COMMENT_TITLE commentTitle,
						A.COMMENT_STATUS commentStatus,
						A.USER_IP userIp,
						A.FILE_NAME fileName,
						A.FILE_MASK fileMask,
						A.FILE_SIZE fileSize,
						A.REGISTER_DT register_dt
					from RFC_COMTNBBSCOMMENT A LEFT OUTER JOIN RFC_COMTNBBSDATA B ON A.DATA_SID = B.DATA_SID 	
					WHERE
						A.BOARD_SID = #boardSid# AND A.BOARD_ID = #boardId# AND A.COMMENT_STATUS = 'N'
					AND
		 				 to_char(A.REGISTER_DT,'YYYYMM')  LIKE LPAD(#strYears#,4,'0')||LPAD(#strMonths#,2,'0')||'%'
		 				 ORDER BY A.DATA_IDX DESC, A.DATA_REF DESC, A.DATA_DEP ASC
			
						
	</select>
	
	
	<update id="boardDAO.updateNoticeData" parameterClass="boardDataVO"  >
			UPDATE RFC_COMTNBBSDATA 
		       	SET
					DATA_NOTICE=0,
					START_DATE = null ,
					END_DATE = null
				WHERE DATA_SID=#dataSid# AND BOARD_ID=#boardId#
	</update>
	
	<select id="boardDAO.selectNoticeUpdateDataList"  parameterClass="boardSearchVO" resultClass="boardDataVO">
		SELECT
			A.DATA_SID dataSid,
			A.BOARD_SID boardSid,
			A.BOARD_ID boardId,
			A.DATA_NOTICE dataNotice,
			A.START_DATE startDate,
			A.END_DATE endDate
																			  
		FROM
			RFC_COMTNBBSDATA A 
		WHERE  A.BOARD_ID = #boardId# AND A.DELETE_STATUS != 'D' AND A.DATA_NOTICE = 1
		AND
			( A.DATA_STATUS != 'F' OR A.DATA_STATUS IS NULL OR REPLACE(A.DATA_STATUS,' ','') = '' ) AND 
			
			( A.END_DATE IS NOT NULL AND A.END_DATE &lt;= NOW())		
			
	</select>
	
	
	<insert id="boardDAO.insertBoardDataLike" parameterClass="boardDataLikeVO"  >
					INSERT INTO RFC_COMTNBBSLIKE
					(
						LIKE_SID,
						BOARD_ID,
						BOARD_SID,
						DATA_SID,
						USER_ID,
						USER_NAME,
						CHECK_TYPE,
						USER_IP,
						REGISTER_DATE
					)
					VALUES
					(
						#likeSid#,
						#boardId#,
						#boardSid#,
						#dataSid#,
						#userId#,
						#userName#,
						#checkType#,
						#userIp#,
						#register_dt#
					)			       		       	
	</insert>
	
	<delete id="boardDAO.deleteBoardDataLike" parameterClass="boardDataLikeVO" >
		DELETE 
		FROM
			RFC_COMTNBBSLIKE 
		WHERE
			BOARD_ID = #boardId#
			AND DATA_SID = #dataSid#
			AND USER_ID = #userId#	
	</delete>	
	
	<select id="boardDAO.selectBoardDataLikeCnt"  parameterClass="boardDataLikeVO" resultClass="int">
		
		select count(*) cnt from  RFC_COMTNBBSLIKE where DATA_SID=#dataSid# 
		
		<isNotEmpty prepend="AND" property="userId" >
			USER_ID=#userId# 
		</isNotEmpty>
		
		
		<isEqual property="countType" compareValue="insert">
		
		<isEqual prepend="AND" property="checkType" compareValue="L">
			(CHECK_TYPE='L' or CHECK_TYPE='H')
		</isEqual>
		<isEqual prepend="AND" property="checkType" compareValue="H">
			(CHECK_TYPE='L' or CHECK_TYPE='H')
		</isEqual>
		
		<isEqual prepend="AND" property="checkType" compareValue="A">
			(CHECK_TYPE='A' or CHECK_TYPE='O')
		</isEqual>
		<isEqual prepend="AND" property="checkType" compareValue="O">
			(CHECK_TYPE='A' or CHECK_TYPE='O')
		</isEqual>
		
		</isEqual>
		
		<isEqual prepend="AND" property="countType" compareValue="view">
			CHECK_TYPE=#checkType#
		</isEqual>
		
			
	</select>
	
	
	
	<select id="boardDAO.selectBoardDataLikeList"  parameterClass="boardDataLikeVO" resultClass="boardDataLikeVO">
		
		select BOARD_ID boardId,
		BOARD_SID boardSid,
		CHECK_TYPE checkType,
		DATA_SID dataSid,
		LIKE_SID likeSid,
		REGISTER_DATE register_dt,
		USER_ID userId,
		USER_IP userIp,
		USER_NAME userName from RFC_COMTNBBSLIKE where DATA_SID=#dataSid# AND CHECK_TYPE=#checkType#
		
		<isNotEmpty prepend="AND" property="recordCount" >
		LIMIT #recordCount#
		</isNotEmpty>
			
	</select>
	
	
	
	<insert id="boardDAO.insertCommentDataLike" parameterClass="commentLikeVO"  >
					INSERT INTO RFC_COMTNBBSCOMMENTLIKE
					(
						COMMENTLIKE_SID,
						BOARD_ID,
						BOARD_SID,
						COMMENT_SID,
						USER_ID,
						USER_NAME,
						CHECK_TYPE,
						USER_IP,
						REGISTER_DATE
					)
					VALUES
					(
						#commentLikeSid#,
						#boardId#,
						#boardSid#,
						#commentSid#,
						#userId#,
						#userName#,
						#checkType#,
						#userIp#,
						#register_dt#
					)			       		       	
	</insert>
	
	
	<select id="boardDAO.selectBoardCommentLikeCnt"  parameterClass="commentLikeVO" resultClass="int">
		
		select count(*) cnt from  RFC_COMTNBBSCOMMENTLIKE where COMMENT_SID=#commentSid# and CHECK_TYPE=#checkType# 
		
		<isNotEmpty prepend="AND" property="userId" >
			USER_ID=#userId# 
		</isNotEmpty>
			
	</select>
	
	
	
</sqlMap>