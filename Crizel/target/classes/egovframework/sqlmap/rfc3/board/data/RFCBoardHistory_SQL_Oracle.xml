<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RFCBoardHistoryManage">
	
	<cacheModel type="${Globals.ibatis.default.cache}" id="RFCBoardHistoryManageCache" readOnly="true" serialize="false">
        <flushInterval hours="24" />
      	<flushOnExecute statement="boardDAO.insertBoardHistory"/>
      	<flushOnExecute statement="boardDAO.insertDownloadHistory"/>
     </cacheModel>
     
	<typeAlias  alias="egovMap"      type = "egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias  alias="boardHistoryVO"	 type = "egovframework.rfc3.board.vo.BoardHistoryVO"/>
    <typeAlias  alias="downloadHistoryVO"	 type = "egovframework.rfc3.board.vo.DownloadHistoryVO"/>
    <typeAlias  alias="boardVO"	 type = "egovframework.rfc3.board.vo.BoardVO"/>
    <typeAlias  alias="boardSearchVO"	 type = "egovframework.rfc3.board.vo.BoardSearchVO"/>
    <typeAlias  alias="boardCountVO"	 type = "egovframework.rfc3.board.vo.BoardCountVO"/>
    
    <select id="boardDAO.selectBoardHistoryListTotal"  parameterClass="boardHistoryVO" resultClass="int" cacheModel="RFCBoardHistoryManageCache">
    	SELECT
    		count(*) totcnt
    	FROM
    		RFC_COMTHBBSLOG A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
    	WHERE 1=1
    		<isNotEmpty prepend="AND" property="searchCondition" >
          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
            </isNotEmpty>		
           <isNotEmpty prepend="AND" property="sgroupId" >
          		     B.SGROUP_ID  = #sgroupId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="domainId" >
                      B.DOMAIN_ID  = #domainId#
               </isNotEmpty> 
               <isEmpty  property="domainId" >
                  	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
                    	   B.DOMAIN_ID in ( $myDomainList$ )
         			</isEqual>
              </isEmpty> 
    </select>
    <select id="boardDAO.selectBoardHistoryList"  parameterClass="boardHistoryVO" resultClass="boardHistoryVO" cacheModel="RFCBoardHistoryManageCache">
    
    <isEqual property="isPaging" compareValue="true">
    SELECT  * 
		  FROM (
				SELECT ROWNUM RNUM, ALL_LIST.*  
				FROM  
				(
	</isEqual>
			    	SELECT
			    		A.BOARD_ID boardId,
			    		A.BOARD_SID boardSid,
						A.DATA_SID dataSid,
						A.ACTION_TYPE actionType,
						A.DATA_TITLE dataTitle,
						A.WRITE_ID wrtieId,
						A.WRITE_NAME wrtieName,  
						A.USER_ID userId,
						A.USER_NAME userName,
						A.USER_IP userIp,
						A.REGISTER_DATE register_dt,
			    		B.BOARD_TITLE boardTitle,
			  			B.DOMAIN_ID domainId,
			  			B.SGROUP_ID sgroupId
			    	FROM
			    		RFC_COMTHBBSLOG A LEFT OUTER JOIN RFC_COMTNBBS B ON A.BOARD_ID = B.BOARD_ID 
			    	WHERE 1=1
			    		<isNotEmpty prepend="AND" property="searchCondition" >
			          		    A. $searchCondition$  LIKE '%$searchKeyword$%'
			            </isNotEmpty>		
			           <isNotEmpty prepend="AND" property="sgroupId" >
			          		     B.SGROUP_ID  = #sgroupId#
			            </isNotEmpty>
			            <isNotEmpty prepend="AND" property="domainId" >
			                      B.DOMAIN_ID  = #domainId#
			               </isNotEmpty> 
			               <isEmpty  property="domainId" >
			                  	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
			                    	   B.DOMAIN_ID in ( $myDomainList$ )
			         			</isEqual>
			              </isEmpty>
			            ORDER BY A.REGISTER_DATE  DESC
			            
	  <isEqual property="isPaging" compareValue="true">
				         ) ALL_LIST
		      )
		  WHERE  RNUM  &gt; #firstIndex#
	  	AND  RNUM &lt;= #firstIndex# + #recordCountPerPage#
	  </isEqual>
    </select>
    
    <insert id="boardDAO.insertBoardHistory"  parameterClass="boardHistoryVO">
				INSERT INTO RFC_COMTHBBSLOG
					( 
						LOG_ID,
						BOARD_ID,
						BOARD_SID,
						DATA_SID,
						ACTION_TYPE,
						DATA_TITLE,
						WRITE_ID,
						WRITE_NAME,
						USER_ID,
						USER_NAME,
						USER_IP,
						REGISTER_DATE 
					)
				VALUES (
						#logId#,
						#boardId#,
						#boardSid#,
						#dataSid#,
						#actionType#,
						#dataTitle#,
						#wrtieId#,
						#wrtieName#,
						#userId#,
						#userName#,
						#userIp#,
						#register_dt#
					)
	</insert>
	<insert id="boardDAO.insertDownloadHistory"  parameterClass="downloadHistoryVO">
				INSERT INTO RFC_COMTHDOWNLOG
					( 
						LOG_ID,
						BOARD_ID,
						BOARD_SID,
						DATA_SID,
						FILE_SID,
						USER_ID,
						USER_NAME,
						USER_IP,
						REGISTER_DATE 
					)
				VALUES (
						#logId#,
						#boardId#,
						#boardSid#,
						#dataSid#,					
						#fileSid#,
						#userId#,
						#userName#,
						#userIp#,
						#register_dt#
					)
	</insert>
	<select id="boardDAO.selectDownloadHistoryTotal"  parameterClass="downloadHistoryVO" resultClass="int" cacheModel="RFCBoardHistoryManageCache">
    	SELECT
    		count(*) totcnt
    	FROM
    		RFC_COMTHDOWNLOG
    	WHERE
    		BOARD_ID = #boardId# AND DATA_SID =  #dataSid#
    		<isNotEqual prepend="AND" property="fileSid"  compareValue="0"> FILE_SID = #fileSid# </isNotEqual>
    		<isEqual prepend="AND" property="isToday"  compareValue="true"> TO_CHAR(REGISTER_DATE,'yyyymmdd') = TO_CHAR(sysdate,'yyyymmdd') </isEqual>
    </select>
    
    <select id="boardDAO.boardDataCount"  parameterClass="boardSearchVO" resultClass="boardCountVO" cacheModel="RFCBoardHistoryManageCache">
    	SELECT 
			BBS.BOARD_TITLE boardTitle, 
			DATA.BOARD_ID boardId,  
			COUNT(DATA.BOARD_ID) dataCount, 
			SUM(DATA.VIEW_COUNT) viewCount,
			(SELECT COUNT(*) 
		         FROM RFC_COMTNBBSCOMMENT 
		        WHERE BOARD_ID = DATA.BOARD_ID 
		       ) commentCount , 
		       (SELECT COUNT(*) 
		         FROM RFC_SNS_COMMENT 
		        WHERE CATEGORY_ID LIKE CONCAT(DATA.BOARD_ID,'%') 
		       ) snsCount 
		FROM RFC_COMTNBBSDATA DATA 
 			LEFT OUTER JOIN RFC_COMTNBBS BBS 
     		ON DATA.BOARD_ID = BBS.BOARD_ID 
    	WHERE
			(
 				1=1    		
  				<isNotEmpty prepend="AND" property="startTs" >
					DATA.REGISTER_DATE >= #startTs#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="endTs" >
					#endTs# >= DATA.REGISTER_DATE 
				</isNotEmpty>
			)
			AND DATA.DELETE_STATUS != 'Y'
			<isNotEmpty prepend="AND" property="sgroupId" >
          		     BBS.SGROUP_ID  = #sgroupId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="domainId" >
                      BBS.DOMAIN_ID  = #domainId#
               </isNotEmpty> 
               <isEmpty  property="domainId" >
                  	<isEqual  prepend="AND"   property="isDomainAdmin" compareValue="true">
                    	   BBS.DOMAIN_ID in ( $myDomainList$ )
         			</isEqual>
              </isEmpty>
		GROUP BY DATA.BOARD_ID,BBS.BOARD_TITLE
    </select>
    <select id="boardDAO.boardOfficeCount"  parameterClass="boardSearchVO" resultClass="boardCountVO" cacheModel="RFCBoardHistoryManageCache">
    	SELECT PCODE pcode,
		       SUM(dataCount) dataCount,
		       SUM(viewCount) viewCount,
		       SUM(commentCount) commentCount,
		       SUM(snsCount) snsCount
		  FROM 
		       (SELECT DATA.PCODE, 
		              DATA.BOARD_ID, 
		              COUNT(DATA.BOARD_ID) dataCount, 
		              SUM(DATA.VIEW_COUNT) viewCount, 
		              (SELECT COUNT(*) 
		                FROM RFC_COMTNBBSCOMMENT 
		               WHERE BOARD_ID = DATA.BOARD_ID 
		              ) commentCount , 
		              (SELECT COUNT(*) 
		                FROM RFC_SNS_COMMENT 
		               WHERE CATEGORY_ID LIKE CONCAT(DATA.BOARD_ID,'%') 
		              ) snsCount 
		         FROM RFC_COMTNBBSDATA DATA 
		        WHERE
		        	(
		 				1=1    		
		  				<isNotEmpty prepend="AND" property="startTs" >
							DATA.REGISTER_DATE >= #startTs#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="endTs" >
							#endTs# >= DATA.REGISTER_DATE 
						</isNotEmpty>
					)
		        	 AND DATA.DELETE_STATUS != 'Y' 
		             AND REGEXP_LIKE( PCODE , #pcode# ) 
		        GROUP BY DATA.PCODE, DATA.BOARD_ID 
		       ) 
		 GROUP BY PCODE    	
    </select>
</sqlMap>