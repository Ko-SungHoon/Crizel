<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RFCComponentManage">
	
	<cacheModel type="${Globals.ibatis.default.cache}" id="RFCComponentManageCache" readOnly="true" serialize="false">
		<flushInterval hours="24" />
		<flushOnExecute statement="componentDAO.insertComponent"/>
		<flushOnExecute statement="componentDAO.updateComponent"/>
		<flushOnExecute statement="componentDAO.deleteStatusComponent"/>
	</cacheModel>
     
	<typeAlias  alias="componentVO"      type = "egovframework.rfc3.component.vo.ComponentVO"/>
	
	<insert id="componentDAO.insertComponent"  parameterClass="componentVO">
		INSERT 
			INTO RFC_COMTNCOMPONENT 
			(
				COMPONENT_ID, 
				COMPONENT_NAME, 
				LICENSE_NAME, 
				OVER_IMAGE, 
				OUT_IMAGE,
				ORDER_IDX, 
				IS_USE,
				WRITER_ID,
				REGISTER_DATE
			) 
			VALUES 
			( 
				#componentId#,				
				#componentName#,
				#licenseName#,
				#overImage#,
				#outImage#,
				#orderIdx#,
				#isUse#,
				#writerId#,
				#register_dt#
			)
	</insert>
	
	<update id="componentDAO.updateComponent"  parameterClass="componentVO">
		UPDATE
		RFC_COMTNCOMPONENT 
		SET
			COMPONENT_NAME = #componentName#, 
			LICENSE_NAME =  #licenseName#,
			OVER_IMAGE = #overImage#, 
			OUT_IMAGE = #outImage#,
			ORDER_IDX = #orderIdx#,
			IS_USE = #isUse#,
			MODIFIER_ID = #modifierId#,
			MODIFY_DATE = #modify_dt#
		WHERE
			COMPONENT_ID = #componentId#
	</update>
	
	<select id="componentDAO.selectComponent"  parameterClass="componentVO" resultClass="componentVO" cacheModel="RFCComponentManageCache">
		SELECT
			COMPONENT_ID	componentId,
			COMPONENT_NAME	 componentName,
			LICENSE_NAME	licenseName, 
			OVER_IMAGE	overImage, 
			OUT_IMAGE	outImage,
			ORDER_IDX orderIdx,
			IS_USE	isUse,
			WRITER_ID writerId,
			REGISTER_DATE register_dt,
			MODIFIER_ID modifieId,
			MODIFY_DATE	modify_dt,
			DEFAULT_COMPONENT defaultComponent
		FROM
			RFC_COMTNCOMPONENT
		WHERE
			DELETE_STATUS = 'N'
		ORDER BY ORDER_IDX ASC
	</select>
	
	<select id="componentDAO.selectUseComponent"  parameterClass="componentVO" resultClass="componentVO" cacheModel="RFCComponentManageCache">
		SELECT
			COMPONENT_ID	componentId,
			COMPONENT_NAME	 componentName,
			LICENSE_NAME	licenseName, 
			OVER_IMAGE	overImage, 
			OUT_IMAGE	outImage,
			ORDER_IDX orderIdx,
			IS_USE	isUse,
			WRITER_ID writerId,
			REGISTER_DATE register_dt,
			MODIFIER_ID modifieId,
			MODIFY_DATE	modify_dt,
			DEFAULT_COMPONENT defaultComponent
		FROM
			RFC_COMTNCOMPONENT
		WHERE
			DELETE_STATUS = 'N' AND IS_USE = #isUse#
		ORDER BY ORDER_IDX ASC
	</select>
	
	<select id="componentDAO.getComponent"  parameterClass="componentVO" resultClass="componentVO" cacheModel="RFCComponentManageCache">
		SELECT
			COMPONENT_ID	componentId,
			COMPONENT_NAME componentName, 
			LICENSE_NAME	licenseName, 
			OVER_IMAGE	overImage, 
			OUT_IMAGE	outImage,
			ORDER_IDX orderIdx,
			IS_USE	isUse,
			WRITER_ID writerId,
			REGISTER_DATE register_dt,
			MODIFIER_ID modifieId,
			MODIFY_DATE	modify_dt,
			DEFAULT_COMPONENT defaultComponent
		FROM
			RFC_COMTNCOMPONENT
		WHERE
			COMPONENT_ID = #componentId#
	</select>
	
	<delete id="componentDAO.deleteStatusComponent"  parameterClass="componentVO">
		UPDATE
			RFC_COMTNCOMPONENT
		SET
			DELETE_STATUS = 'Y'	
		WHERE
			COMPONENT_ID = #componentId# AND DEFAULT_COMPONENT = 'N'
	</delete>
	
</sqlMap>