<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="JeonjuBusDataManage">
	<typeAlias  alias="jeonjuBusNosunSearchVO"	type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusNosunSearchVO"/>
	<typeAlias  alias="jeonjuBusNosunRouteVO"	type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusNosunRouteVO"/>
	<typeAlias  alias="jeonjuBusStopInfoVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusStopInfoVO"/>
	<typeAlias  alias="jeonjuBusStopSearchVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusStopSearchVO"/>
	<typeAlias  alias="jeonjuBusLowListVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusLowListVO"/>
	<typeAlias  alias="jeonjuRoadStatusVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuRoadStatusVO"/>
	<typeAlias  alias="jeonjuRoadStatusDetailVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuRoadStatusDetailVO"/>
	<typeAlias  alias="jeonjuCctvListVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuCctvListVO"/>
	<typeAlias  alias="jeonjuNosunInfoVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuNosunInfoVO"/>
	<typeAlias  alias="jeonjuNosunTimeVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuNosunTimeVO"/>
	<typeAlias  alias="jeonjuRouteSearchVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuRouteSearchVO"/>
	<typeAlias  alias="jeonjuRouteNonstopDetailSearchVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuRouteNonstopDetailSearchVO"/>
	<typeAlias  alias="jeonjuRouteTransferDetailSearchVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuRouteTransferDetailSearchVO"/>
	<typeAlias  alias="jeonjuNosunByWayStopVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuNosunByWayStopVO"/>
	<typeAlias  alias="jeonjuBusStopNosunInfoVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusStopNosunInfoVO"/>
	<typeAlias  alias="jeonjuBusStopNosunDrawingVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusStopNosunDrawingVO"/>
	<typeAlias  alias="jeonjuBusNosunDrawingVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusNosunDrawingVO"/>
	<typeAlias  alias="jeonjuBusStopApproachVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusStopApproachVO"/>
	<typeAlias  alias="jeonjuBusTransferStopInfoVO" type = "egovframework.rfc3.openapijeonjubus.vo.JeonjuBusTransferStopInfoVO"/>
	
	
	<typeAlias  alias="jeonjuBaseInfoBusStopVO" type = "egovframework.rfc3.openapijeonjubus.vo.base.JeonjuBaseInfoBusStopVO"/>
	<typeAlias  alias="jeonjuBaseInfoNosunBusStopVO" type = "egovframework.rfc3.openapijeonjubus.vo.base.JeonjuBaseInfoNosunBusStopVO"/>
	<typeAlias  alias="jeonjuBaseInfoBusNodeVO" type = "egovframework.rfc3.openapijeonjubus.vo.base.JeonjuBaseInfoBusNodeVO"/>
	<typeAlias  alias="jeonjuBaseInfoBusRouteVO" type = "egovframework.rfc3.openapijeonjubus.vo.base.JeonjuBaseInfoBusRouteVO"/>
	<typeAlias  alias="jeonjuBaseInfoBusOperationVO" type = "egovframework.rfc3.openapijeonjubus.vo.base.JeonjuBaseInfoBusOperationVO"/>
	
	
    <!-- 버스정보 - 모든 노선 검색 2016.06. 업데이트-->
    <select id="JeonjuBusDAO.selectBusNosunSearchAll"  parameterClass="jeonjuBusNosunSearchVO" resultClass="jeonjuBusNosunSearchVO" >

  SELECT * FROM (
            SELECT 
              DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) brtId,
              DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass              
             FROM JJBIS.BUSROUTE
             WHERE ROUTE_sTATUS = '1')
             GROUP BY brtId, brtClass 
            ORDER BY TO_NUMBER(brtId), TO_NUMBER(brtClass) 			
    </select>
    
    
    <!--  노선번호 검색 2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectBusNosunSearch"  parameterClass="jeonjuBusNosunSearchVO" resultClass="jeonjuBusNosunSearchVO" >

		    SELECT * FROM (
    SELECT 
     DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) brtId
    , DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass                  
    , ROUTE_DIRECTION brtDirection
    , ROUTE_SUBID brtSubid
    , ROUTE_ID brtStdid
    , (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) brtSname
    , (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) brtEname      
    , PERM_COUNT brtBusnum
    , JJBIS.F_GET_FIRSTTIME(ROUTE_ID) brtFirsttime
    , JJBIS.F_GET_LASTTIME(ROUTE_ID) brtLasttime
    , BRT_NEEDTIME brtNeedtime
    , BRT_MININTERVAL brtMininterval
    , BRT_MAXINTERVAL brtMaxinterval
    , NVL(BRT_ILREGINTERVAL_YN,'N') brtIlreginterval
    , (SELECT B.TOTAL_SECT_DISTANCE FROM BUSROUTE_SECTION B WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID) brtLength       
    FROM JJBIS.BUSROUTE A 
      WHERE 1=1
       AND ROUTE_STATUS = '1' )
    WHERE 1=1         
       AND brtId = #brtId#
       <isNotEmpty  property="brtClass" >
       AND   brtClass = #brtClass#
       </isNotEmpty>
       ORDER BY  brtSubid, brtDirection
    </select>
    
    
    
    <!--  노선번호 검색후 해당 노선의 운행경로 정보 2016.06. 업데이트-->
    <select id="JeonjuBusDAO.selectBusNosunRoute"  parameterClass="jeonjuBusNosunRouteVO" resultClass="jeonjuBusNosunRouteVO" >		
			    <isNotEmpty property="bNo">

					SELECT C.ROUTE_ID brtStdid, A.STOP_ORD brsSeqno, A.NODE_ID bnodeId, B.STOP_NAME stopKname, B.SERVICE_ID stopId, D.PLATE_NO busNo, 
                    B.STOP_ID stopStandardid, B.REMARK reMark, A.ROUTE_ORD brnSeqno, C.ROUTE_ID brtSubid, D.busLow 
                    FROM JJBIS.BUSROUTE_STOP_dETAIL A, JJBIS.BUSSTOP B, JJBIS.BUSROUTE C,  
                    ( SELECT B.PLATE_NO, C.ROUTE_ID,
                          (SELECT TRIM(NODE_ID) FROM BUSROUTE_STOP_DETAIL WHERE C.ROUTESECT_GROUP_ID = ROUTESECT_GROUP_ID AND A.LATEST_STOP_ORD = STOP_ORD) BNODE_DEPARTURESTOPID,
                          A.CURRENT_NODE_ORD BOP_DEPARTURESEQNO,
                          A.LATEST_STOP_ORD BOP_DEPARTURESTOPSEQNO,
                          B.LOW_FLAG busLow
                          FROM JJBIS.BUS_OPERATION A, JJBIS.VEHICLE B, JJBIS.BUSROUTE C
                           WHERE 1=1
                           AND A.ROUTE_ID = #brtStdid#
                           AND A.VEH_ID = B.VEH_ID                         
                           AND A.OPERATION_STATUS &lt;&gt; '0'                        
                           AND A.ROUTE_ID = C.ROUTE_ID                           
                           <![CDATA[
                           AND B.PLATE_NO <  9000
                           ]]>
                           <isNotEmpty   property="lKey" >
                           AND B.LOW_FLAG ='1'
                           </isNotEmpty> 
                       )D
                    WHERE 1=1
                      AND A.ROUTESECT_GROUP_ID = C.ROUTESECT_GROUP_ID 
                      AND  TRIM(A.NODE_ID) = TRIM(B.STOP_ID) 
                      AND A.ROUTE_ORD = D.BOP_DEPARTURESTOPSEQNO(+) 
                      AND C.ROUTE_ID = #brtStdid# 
                    ORDER BY A.STOP_ORD
					</isNotEmpty>
					
					
					<isEmpty property="bNo">

							
							 SELECT aa.BRT_STDID brtStdid, aa.BRS_SEQNO brsSeqno, aa.BNODE_ID bnodeId, aa.STOP_KNAME stopKname, aa.STOP_ID stopId, 
                            DECODE(aa.BRT_direction, bb.brt_direction, bb.bus_no,'') busNo, 
                        aa.STOP_STANDARDID stopStandardid, aa.REMARK reMark, aa.BRN_SEQNO brnSeqno, aa.BRT_SUBID brtSubid, bb.bus_low busLow 
                            FROM                                        
                               ( SELECT A.ROUTE_ID BRT_STDID, B.STOP_ORD BRS_SEQNO, B.NODE_ID BNODE_ID, C.STOP_NAME STOP_KNAME, C.SERVICE_ID STOP_ID,
                                  C.STOP_ID STOP_STANDARDID, C.REMARK, B.ROUTE_ORD BRN_SEQNO, A.ROUTE_SUBID BRT_SUBID, A.ROUTE_DIRECTION brt_direction
                                 FROM JJBIS.BUSROUTE A , JJBIS.BUSROUTE_STOP_dETAIL B, JJBIS.BUSSTOP C
                                  WHERE 1=1
                                    AND A.ROUTE_ID = #brtStdid# 
                                    AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
                                    AND B.NODE_ID = C.STOP_ID
                                    ORDER BY B.STOP_ORD ) AA,                                                                        
                                    ( SELECT C.PLATE_NO bus_no 
                                        ,(SELECT NODE_ID FROM BUSROUTE_STOP_dETAIL WHERE A.ROUTESECT_gROUP_ID = ROUTESECT_gROUP_ID AND STOP_ORD = B.LATEST_STOP_ORD) bnode_departurestopid
                                        , A.ROUTE_ID brt_stdid
                                        , C.LOW_FLAG bus_low
                                        , A.ROUTE_DIRECTION brt_direction
                                     FROM JJBIS.BUSROUTE A ,JJBIS.BUS_OPERATION B, JJBIS.VEHICLE C
                                     WHERE 1=1
                                       AND A.ROUTE_ID IN (SELECT ROUTE_ID 
                                                            FROM JJBIS.BUSROUTE 
                                                            WHERE DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) = #brtId#
                                                              AND DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) = #brtClass#) 
                                       AND B.VEH_ID = C.VEH_ID
                                       AND B.OPERATION_STATUS &lt;&gt;  '0'                                    
                                       AND A.ROUTE_ID = B.ROUTE_ID  
                                       <isNotEmpty   property="lKey" >                                                           
                                       AND C.LOW_FLAG = '1'   
                                       </isNotEmpty>
                                       <![CDATA[
                                       AND C.PLATE_NO  <  9000
                                       ]]>
                                        ) BB 
                                       WHERE aa.STOP_STANDARDID = bb.bnode_departurestopid(+)  
                                      
                                      
					</isEmpty>
					
    </select>
    
    
    <!-- 정류장 도착 예정정보 2016.06 업데이트-->
   <select id="JeonjuBusDAO.selectBusStopInfo"  parameterClass="jeonjuBusStopInfoVO" resultClass="jeonjuBusStopInfoVO" >
       <isNotEmpty property="lKey" >
            SELECT * FROM ( 
      </isNotEmpty>   
               SELECT * FROM (
           SELECT  
             A.ROUTE_ID brtStdid
           , A.ROUTE_EXPLAIN brtVianame
           , A.ROUTE_DIRECTION brtDirection        
           , brtId
           , brtClass           
           , CASE WHEN (A.TURN_USEFLAG = 1) THEN DECODE(C.CURRENT_NODE_ORD, 1, 1, C.TURN_ORD, 2, 3) ELSE DECODE(C.CURRENT_NODE_ORD, 1, 1, 3) END PROVIDE_TYPE
           ,  C.VEH_ID bidNo
           , B.STOP_ORD - C.LATEST_STOP_ORD AS rStop
           , C.TRAVEL_TIME + C.SERVICE_TIME AS rTime,
             (SELECT STOP_NAME
               FROM JJBIS.BUSROUTE_STOP_DETAIL AA, JJBIS.BUSSTOP BB
              WHERE 1=1 
                AND AA.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID 
                AND AA.NODE_ID = BB.STOP_ID               
                AND AA.STOP_ORD = C.LATEST_STOP_ORD) viaStopname           
            ,(SELECT LOW_FLAG FROM JJBIS.VEHICLE VEH WHERE VEH.VEH_ID = C.VEH_ID ) busLow        
           FROM JJBIS.BUSROUTE A,
                JJBIS.BUSROUTE_STOP_DETAIL B,
                (SELECT B.ED_NODE_ID AS NODE_ID, A.ROUTE_ID, B.ROUTESECT_GROUP_ID, B.ROUTE_ORD, C.VEH_ID, C.CURRENT_NODE_ORD, C.LATEST_STOP_ORD,
                          FUSN_TRAVEL_TIME, FUSN_SERVICE_TIME, SUM(D.FUSN_TRAVEL_TIME) OVER (PARTITION BY A.ROUTE_ID, C.VEH_ID ORDER BY A.ROUTE_ID, B.ROUTE_ORD, C.VEH_ID) TRAVEL_TIME,
                          SUM(D.FUSN_SERVICE_TIME) OVER (PARTITION BY A.ROUTE_ID, C.VEH_ID ORDER BY A.ROUTE_ID, B.ROUTE_ORD, C.VEH_ID) - D.FUSN_SERVICE_TIME AS SERVICE_TIME
                       , DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) brtId
                       , DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass  
                       , E.TURN_ORD                       
                     FROM JJBIS.BUSROUTE A,
                          JJBIS.BUSROUTE_SECTION_DETAIL B,
                          JJBIS.BUS_OPERATION C,
                          JJBIS.M_PROCESS_CURRENT D,
                          JJBIS.BUSROUTE_SECTION E
                    WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
                      AND A.ROUTESECT_GROUP_ID = E.ROUTESECT_GROUP_ID
                      AND A.ROUTE_ID = C.ROUTE_ID
                      AND A.ROUTE_STATUS = 1
                      AND B.ROUTE_ORD > C.CURRENT_NODE_ORD
                      AND A.ROUTE_ID = D.ROUTE_ID
                      AND B.ST_NODE_ID = D.ST_NODE_ID
                      AND B.ED_NODE_ID = D.ED_NODE_ID
                      AND C.OPERATION_STATUS = 1 
                      AND ((A.TURN_USEFLAG = 1 AND E.TURN_ORD &lt;= C.CURRENT_NODE_ORD AND B.ROUTE_ORD > C.CURRENT_NODE_ORD)
                        OR (A.TURN_USEFLAG = 1 AND E.TURN_ORD > C.CURRENT_NODE_ORD AND E.TURN_ORD > C.CURRENT_NODE_ORD)
                        OR (A.TURN_USEFLAG = 0 AND B.ROUTE_ORD > C.CURRENT_NODE_ORD))) C
          WHERE 1=1
            AND A.ROUTE_ID = C.ROUTE_ID
            AND A.ROUTE_STATUS = 1  
            AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
            AND B.ROUTE_ORD = C.ROUTE_ORD        
            AND C.NODE_ID = #stopStdid#                          
            AND ( B.STOP_ORD - C.LATEST_STOP_ORD) > 0)             
   
               <isEqual property="orderBy" compareValue="brtId">
                   ORDER BY TO_NUMBER(brtId) $range$ 
               </isEqual>
   
               <isEqual property="orderBy" compareValue="rTime">
                   ORDER BY rTime $range$ 
               </isEqual>
               
               <isEqual property="orderBy" compareValue="rStop">
                   ORDER BY rStop $range$ 
               </isEqual>
           <isNotEmpty property="lKey" >
            ) WHERE busLow = '1' 
           </isNotEmpty>
    </select>
    
    
    <!--  정류장 번호 및 이름으로 검색 2016.06. 업데이트-->
    <select id="JeonjuBusDAO.selectBusStopSearch"  parameterClass="jeonjuBusStopSearchVO" resultClass="jeonjuBusStopSearchVO" >

			
			   SELECT STOP_NAME stopKname, STOP_ID stopStandardid, SERVICE_ID stopId, LNG stopX, LAT stopY, REMARK reMark  
             FROM JJBIS.BUSSTOP
             WHERE USE_FLAG ='1'
             <isEqual property="searchFld" compareValue="stopnm">
             AND STOP_NAME LIKE '%$searchNm$%'
             </isEqual>
             <isEqual property="searchFld" compareValue="stopno">
             AND SERVICE_ID LIKE '%$searchNm$%' 
             </isEqual>
             ORDER BY STOP_NAME
             
    </select>
    
    
     <select id="JeonjuBusDAO.selectBusLowList"  parameterClass="jeonjuBusLowListVO" resultClass="jeonjuBusLowListVO" >

		 	  SELECT 
               ROUTE_ID brtStdid
             , DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1))  brtId
             , DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass
             , ROUTE_SUBID brtSubid
             , ROUTE_DIRECTION brtDirection
             , (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) brtSname
             , (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) brtEname  
              FROM JJBIS.BUSROUTE A
             WHERE 1=1
              AND ROUTE_ID IN (SELECT B.ROUTE_ID 
                                FROM JJBIS.BUS_ALLOCATION_GROUP A, JJBIS.BUS_ALLOCATION_GROUP_DETAIL B
                                WHERE 1=1
                                 AND TRIM(A.BUS_ALLOC_GROUP_ID) = TRIM(B.BUS_ALLOC_GROUP_ID)
                                 AND A.GROUP_NAME LIKE '%저상%'
                                 AND A.USE_FLAG = '1'
                                 GROUP BY B.ROUTE_ID )
              AND ROUTE_DIRECTION = '1'
              AND ROUTE_sTATUS = '1' 
            ORDER BY TO_NUMBER(brtId), brtClass
    </select>
    
    
    <!--  도로별 현황 리스트 -->
    <select id="JeonjuBusDAO.selectRoadStatus"  parameterClass="jeonjuRoadStatusVO" resultClass="jeonjuRoadStatusVO" >
    	SELECT IFSC_NM ifscNm FROM ATMS.TB_IFSC_MST 
    		WHERE VIEW_YN = '1' 
    	<isNotEmpty property="totalSearch" >
				AND IFSC_NM LIKE '%$totalSearch$%' 
		</isNotEmpty>
			GROUP BY IFSC_NM 
		ORDER BY IFSC_NM 
    </select>
    
	<!-- 도로별  현황 상세 정보1 -->
     <select id="JeonjuBusDAO.selectRoadStatusDetail1"  parameterClass="jeonjuRoadStatusDetailVO" resultClass="jeonjuRoadStatusDetailVO" >
    	SELECT C.IFSC_NM ifscNm, A.IFSC_MST_ID mstId1, B.IFSC_MST_ID mstId2, B.DRCT_NM fromNm, A.DRCT_NM toNm 
    		FROM ATMS.TB_IFSC_MST A, ATMS.TB_IFSC_MST B, 
    	(SELECT IFSC_NM FROM  ATMS.TB_IFSC_MST WHERE  IFSC_NM = #loadResult# GROUP BY IFSC_NM ORDER BY IFSC_NM) C 
    		WHERE  C.IFSC_NM = A.IFSC_NM AND  C.IFSC_NM = B.IFSC_NM AND  A.DRCT_CD = '1' AND  B.DRCT_CD = '2' 
    	ORDER BY ifscNm 
    </select>
    
    	<!-- 도로별  현황 상세 정보2 -->
    <select id="JeonjuBusDAO.selectRoadStatusDetail2"  parameterClass="jeonjuRoadStatusDetailVO" resultClass="jeonjuRoadStatusDetailVO" >
    	SELECT * FROM (  
    	SELECT '1' baNg, A.IFSC_ID ifscId, A.IFSC_ID_SEQ ifscIdSeq, A.SRT_NODE_NM srtNodeNm,  A.END_NODE_NM endNodeNm, 
    	B.CMTR_GRAD_CD cmtrGradCd, B.SPED sPed,  B.TRVL_HH trvlHh, ROW_NUMBER() OVER ( ORDER BY A.IFSC_ID_SEQ )  lraNk 
    	FROM ATMS.TB_IFSC A, ATMS.TB_IFSC_TRAF B 
    	WHERE  A.IFSC_MST_ID = #ifscMstId1# 
    	AND  A.IFSC_ID = B.IFSC_ID(+) 
    	UNION ALL 
    	SELECT '2' baNg, A.IFSC_ID ifscId, A.IFSC_ID_SEQ ifscIdSeq, A.SRT_NODE_NM srtNodeNm,  A.END_NODE_NM endNodeNm, 
    	B.CMTR_GRAD_CD cmtrGradCd, B.SPED sPed,  B.TRVL_HH trvlHh, ROW_NUMBER() OVER ( ORDER BY A.IFSC_ID_SEQ DESC)  lraNk 
    	FROM ATMS.TB_IFSC A, ATMS.TB_IFSC_TRAF B 
    	WHERE  A.IFSC_MST_ID = #ifscMstId2# 
    	AND  A.IFSC_ID = B.IFSC_ID(+) 
    	) TB 
    	ORDER BY BANG, lraNk 
    </select>
    
    
    <!--  CCTV 상세정보 -->
    <select id="JeonjuBusDAO.selectCctvList"  parameterClass="jeonjuCctvListVO" resultClass="jeonjuCctvListVO" >
    	SELECT ISTL_LCTN_NM istlLctnNm, IP iP, LCTN_X lctnX, LCTN_Y lctnY, CCTV_MNGM_NMBR cctvMngmNmbr, CHNL_NMBR chnlNmbr, CCTV_TYPE cctvType, VIEW_CD viewCd 
    	FROM ATMS.TB_CCTV_CTLR 
    	WHERE ISTL_LCTN_NM LIKE '%$searchNm$%' 
    	ORDER BY CCTV_MNGM_NMBR 
    </select>
    
    
    <!--   시내버스 출발지 검색 및 도착지 검색 2016.06. 업데이트 -->
    <select id="JeonjuBusDAO.selectRouteSearch"  parameterClass="jeonjuRouteSearchVO" resultClass="jeonjuRouteSearchVO" >

    SELECT A.STOP_NAME bnodeKname, A.STOP_ID bnodeId, A.REMARK reMark, A.LNG bNodex, A.LAT bNodey, A.SERVICE_ID stopId 
      FROM JJBIS.BUSSTOP A
      WHERE 1=1
       AND USE_FLAG = '1'
       AND STOP_NAME LIKE '%$sSearchNm$%'
       ORDER BY STOP_NAME
    </select>
    
    
    <!-- 시내버스 경로검색 (직행)  2016.06. 업데이트 -->
    <select id="JeonjuBusDAO.selectRouteNonstopDetailSearch"  parameterClass="jeonjuRouteNonstopDetailSearchVO" resultClass="jeonjuRouteNonstopDetailSearchVO" >

		    SELECT BR.ROUTE_ID brtStdid, BR.ROUTE_NAME AS brtNo, 
            BH.BRT_ID brtId, BH.BRT_CLASS brtClass, BR.ROUTE_SUBID brtSubId, BH.FROM_SEQNO fromSeqNo, BH.TO_SEQNO toSeqNo, BH.STOP_CNT stopCnt, 
        (SELECT ROUND(SUM(SECT_DISTANCE) / 60) FROM JJBIS.BUSROUTE_STOP_DETAIL    WHERE ROUTESECT_gROUP_ID = BR.ROUTESECT_gROUP_ID 
        <![CDATA[
            AND STOP_ORD > BH.FROM_SEQNO AND STOP_ORD <= BH.TO_SEQNO) tripTime,  
        (SELECT ROUND(SUM(SECT_DISTANCE) / 1000, 1) FROM JJBIS.BUSROUTE_STOP_DETAIL WHERE ROUTESECT_gROUP_ID = BR.ROUTESECT_gROUP_ID 
            AND STOP_ORD > BH.FROM_SEQNO AND STOP_ORD <= BH.TO_SEQNO) tripDisTance 
        ]]>
        FROM JJBIS.BUSROUTE BR, 
            (SELECT A.ROUTESECT_gROUP_ID, B.BRT_STDID, B.STOP_ORD FROM_SEQNO, A.STOP_ORD TO_SEQNO, B.NSUN , (A.STOP_ORD - B.STOP_ORD) STOP_CNT 
                    ,B.BRT_ID, B.BRT_CLASS
                FROM JJBIS.BUSROUTE_STOP_DETAIL A, 
                    (SELECT B1.ROUTESECT_gROUP_ID, B1.STOP_ORD, B2.BRT_ID, B2.BRT_CLASS, B2.BRT_STDID,
                        ROW_NUMBER() OVER (PARTITION BY DECODE(B2.BRT_CLASS,'0',B2.BRT_ID,B2.BRT_ID || '-' || B2.BRT_CLASS) 
                        ORDER BY B2.BRT_SUBID) NSUN 
                        FROM JJBIS.BUSROUTE_STOP_DETAIL B1, 
                        (SELECT ROUTE_ID BRT_STDID, ROUTESECT_gROUP_ID, ROUTE_NAME, ROUTE_SUBID BRT_SUBID, ROUTE_STATUS STATUSCODE,
                                DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1))  BRT_ID
                                , DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) BRT_CLASS
                         FROM JJBIS.BUSROUTE) B2 
                            WHERE B1.ROUTESECT_gROUP_ID = B2.ROUTESECT_gROUP_ID 
                            AND NODE_ID = #sStandardId# 
                            AND B2.STATUSCODE = '1') B 
                WHERE A.ROUTESECT_gROUP_ID = B.ROUTESECT_gROUP_ID 
                  AND NODE_ID= #eStandardId# 
                  AND A.STOP_ORD > B.STOP_ORD) BH 
        WHERE BR.ROUTESECT_gROUP_ID = BH.ROUTESECT_gROUP_ID AND BH.NSUN ='1' 
            AND BR.ROUTE_STATUS = '1' 
        ORDER BY BH.STOP_CNT, TO_NUMBER(BH.BRT_ID), BH.BRT_CLASS 
    </select>
    
    
    <!--  시내버스 경로검색 (환승) 2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectRouteTransferDetailSearch"  parameterClass="jeonjuRouteTransferDetailSearchVO" resultClass="jeonjuRouteTransferDetailSearchVO" >

			SELECT TB.START_ID startId,TB.START_NO startNo,TB.FIN_ID finId,TB.FIN_NO finNo,TB.CHG_BNODEID chgBnodeId,TB.RSTOP1 rStop1,TB.RSTOP2 rStop2,TB.START_FROMSEQNO startFromSeqNo,
        TB.START_TOSEQNO startToseqNo,TB.FIN_TOSEQNO finToseqNo,FIN_FROMSEQNO finFromseqNo,RR rr,STOP_CNT stopCnt,CHG_NAME chgName,REMARK reMark,TRIP_TIME1 tripTime1,
        TRIP_TIME2 tripTime2,TRIP_DISTANCE1 tripDistance1,TRIP_DISTANCE2 tripDistance2,RNUM rNum, 
            (TB.TRIP_TIME1 + TB.TRIP_TIME2) tripTime, (TB.TRIP_DISTANCE1 + TB.TRIP_DISTANCE2) tripDistance 
        FROM ( 
            SELECT HH.*,BS.STOP_NAME CHG_NAME, BS.REMARK, 
        (SELECT ROUND(SUM(TTT) / 60) FROM JJBIS.V_STOP_PROCESS    WHERE ROUTE_ID = HH.START_ID 
        <![CDATA[
            AND STOP_ORD > HH.START_FROMSEQNO AND STOP_ORD <= HH.START_TOSEQNO) TRIP_TIME1, 
            ]]>
        (SELECT ROUND(SUM(TTT) / 60) FROM JJBIS.V_STOP_PROCESS     WHERE ROUTE_ID = HH.FIN_ID 
        <![CDATA[
            AND STOP_ORD > HH.FIN_FROMSEQNO AND STOP_ORD <= HH.FIN_TOSEQNO) TRIP_TIME2, 
            ]]>
        (SELECT ROUND(SUM(TTT) / 1000, 1) FROM JJBIS.V_STOP_PROCESS  WHERE ROUTE_ID = HH.START_ID 
        <![CDATA[
            AND STOP_ORD > HH.START_FROMSEQNO AND STOP_ORD <= HH.START_TOSEQNO) TRIP_DISTANCE1, 
            ]]>
        (SELECT ROUND(SUM(SECT_dISTANCE) / 1000, 1) FROM JJBIS.V_STOP_PROCESS  WHERE ROUTE_ID = HH.FIN_ID 
        <![CDATA[
            AND STOP_ORD > HH.FIN_FROMSEQNO AND STOP_ORD <= HH.FIN_TOSEQNO) TRIP_DISTANCE2, 
            ]]>
        ROW_NUMBER() OVER ( ORDER BY STOP_CNT, START_NO )  RNUM 
            FROM JJBIS.BUSSTOP BS, 
        ( 
            SELECT SRT.BRT_STDID START_ID, SRT.START_NO, FIN.BRT_STDID  FIN_ID, FIN.FIN_NO,SRT.BNODE_ID CHG_BNODEID, 
        SRT.RSTOP1, FIN.RSTOP2, START_FROMSEQNO, START_TOSEQNO, FIN_TOSEQNO, FIN_FROMSEQNO, 
            RANK() OVER (PARTITION BY SRT.START_NO || FIN.FIN_NO ORDER BY (SRT.RSTOP1+FIN.RSTOP2), SRT.ROUTE_SUBID, FIN.BRT_SUBID, SRT.RSTOP1) AS RR 
        ,(SRT.RSTOP1+FIN.RSTOP2) STOP_CNT 
            FROM 
                (SELECT A.ROUTE_ID BRT_STDID, B.STOP_ORD START_FROMSEQNO, A.STOP_ORD START_TOSEQNO, (A.STOP_ORD - B.STOP_ORD) RSTOP1 
                        , A.NODE_ID BNODE_ID, B.ROUTE_SUBID
                        , DECODE(INSTR(B.ROUTE_NAME, '-'), 0, B.ROUTE_NAME, SUBSTR(B.ROUTE_NAME, 1, INSTR(B.ROUTE_NAME, '-')-1))  BRT_ID
                        , DECODE(INSTR(B.ROUTE_NAME, '-'), 0, '0', SUBSTR(B.ROUTE_NAME, INSTR(B.ROUTE_NAME, '-')+1, LENGTH(B.ROUTE_NAME) - INSTR(B.ROUTE_NAME, '-'))) BRT_CLASS                        
                        , B.ROUTE_NAME AS START_NO 
                    FROM JJBIS.V_BUSROUTE_STOP A, 
                        (SELECT B1.ROUTE_ID, B1.STOP_ORD,   B2.ROUTE_SUBID, B2.ROUTE_NAME, B1.NODE_ID START_BNODEID 
                            FROM JJBIS.V_BUSROUTE_STOP B1, JJBIS.BUSROUTE B2 
                        WHERE B1.NODE_ID = #sStandardId# 
                            AND B1.ROUTE_ID = B2.ROUTE_ID 
                            AND B2.ROUTE_STATUS = '1') B 
                    WHERE A.ROUTE_ID = B.ROUTE_ID 
                        AND A.STOP_ORD > B.STOP_ORD) SRT, 
                (SELECT A.ROUTE_ID BRT_STDID, B.BRS_SEQNO FIN_TOSEQNO, A.STOP_ORD FIN_FROMSEQNO,(B.BRS_SEQNO - A.STOP_ORD) RSTOP2 
                        ,A.NODE_ID BNODE_ID, B.BRT_SUBID, B.BRT_ID, B.BRT_CLASS, 
                        DECODE(B.BRT_CLASS,'0',B.BRT_ID,B.BRT_ID || '-' || B.BRT_CLASS) AS FIN_NO 
                    FROM JJBIS.V_BUSROUTE_STOP A, 
                        (SELECT B1.ROUTE_ID BRT_STDID
                            , B1.STOP_ORD BRS_SEQNO
                            , B2.ROUTE_SUBID BRT_SUBID
                            , DECODE(INSTR(B2.ROUTE_NAME, '-'), 0, B2.ROUTE_NAME, SUBSTR(B2.ROUTE_NAME, 1, INSTR(B2.ROUTE_NAME, '-')-1))  BRT_ID
                            , DECODE(INSTR(B2.ROUTE_NAME, '-'), 0, '0', SUBSTR(B2.ROUTE_NAME, INSTR(B2.ROUTE_NAME, '-')+1, LENGTH(B2.ROUTE_NAME) - INSTR(B2.ROUTE_NAME, '-'))) BRT_CLASS
                            , B1.NODE_ID FIN_BNODEID 
                            FROM JJBIS.V_BUSROUTE_STOP B1, JJBIS.BUSROUTE B2 
                        WHERE B1.NODE_ID = #eStandardId# 
                            AND B1.ROUTE_ID = B2.ROUTE_ID 
                            AND B2.ROUTE_STATUS = '1') B 
                    WHERE A.ROUTE_ID = B.BRT_STDID AND B.BRS_SEQNO > A.STOP_ORD) FIN 
        WHERE SRT.BNODE_ID = FIN.BNODE_ID 
            ORDER BY SRT.BRT_STDID 
        ) HH 
            WHERE RR = '1' AND HH.CHG_BNODEID = BS.STOP_ID 
            <![CDATA[
        AND HH.START_NO <> HH.FIN_NO 
        ]]>
            ) TB 
            <![CDATA[
        WHERE TB.RNUM < $maxCnt$ 
        ]]>
            ORDER BY TB.RNUM 
    </select>
    
    <!-- 해당 노선의 정보 2016.06. 업데이트 -->
    <select id="JeonjuBusDAO.selectNosunInfo"  parameterClass="jeonjuNosunInfoVO" resultClass="jeonjuNosunInfoVO" >	    
	      SELECT 
	         JJBIS.F_GET_BRTID(A.ROUTE_NAME) brtId
	       , JJBIS.F_GET_CLSNAME(A.ROUTE_NAME) brtClass
	       , ROUTE_DIRECTION  brtDirection 
	       , A.ROUTE_SUBID brtSubid
	       , A.ROUTE_ID brtStdid 
	       , NVL(A.ROUTE_EXPLAIN,' ') brtSname 
	       , A.ROUTE_EXPLAIN brtEname 
	       , (SELECT COUNT(*) 
	            FROM JJBIS.BUS_OPERATION O
	               , VEHICLE V 
	           WHERE O.VEH_ID=V.VEH_ID 
	             AND O.ROUTE_ID = A.ROUTE_ID) brtBusNum 
	       , JJBIS.F_GET_FIRSTTIME(A.ROUTE_ID) brtFirstTime 
	       , JJBIS.F_GET_LASTTIME(A.ROUTE_ID) brtLastTime 
	       , '0' brtNeedTime 
	       , A.BRT_MININTERVAL AS brtMininTerval 
	       , A.BRT_MAXINTERVAL AS brtMaxinTerval
	       , 'N' brtIlregintervalYn 
	       , (SELECT TOTAL_SECT_DISTANCE 
	            FROM JJBIS.BUSROUTE_SECTION 
	           WHERE ROUTESECT_GROUP_ID=A.ROUTE_ID) brtLength 
	       , (SELECT COUNT(*) 
	            FROM JJBIS.V_BUS_TIME_TABLE 
	           WHERE ROUTE_ID = A.ROUTE_ID) brtDnum 
	       , NVL(PERM_COUNT,0) brtNum 
	       , (SELECT BRT_TEXT FROM JJBIS.BUSTIMEINFO WHERE BRT_STDID = A.ROUTE_ID) brtText                                                       
	       , (SELECT WMSYS.WM_CONCAT(REPLACE(TO_CHAR(DEPARTURE_TIME,'00,00'),',',':')) 
	            FROM JJBIS.V_BUS_TIME_TABLE 
	           WHERE ROUTE_ID = A.ROUTE_ID AND SAT_USE = '0')  satNlist 
	       , (SELECT WMSYS.WM_CONCAT(REPLACE(TO_CHAR(DEPARTURE_TIME,'00,00'),',',':')) 
	            FROM JJBIS.V_BUS_TIME_TABLE 
	           WHERE ROUTE_ID = A.ROUTE_ID AND HOLI_USE = '0')  holiNlist 
	       , (SELECT COUNT(*) 
	            FROM JJBIS.V_BUS_TIME_TABLE 
	           WHERE ROUTE_ID = A.ROUTE_ID) tCount 
	       , NVL(PERM_COUNT,0) bCount 
	   FROM 
	         JJBIS.BUSROUTE    A   
	     WHERE  A.ROUTE_ID =#stdId# 
	     ORDER BY TO_NUMBER(BRTID), BRTCLASS
    </select>
    
    
    
    <!-- 해당 노선 배차시간  2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectNosunTime"  parameterClass="jeonjuNosunTimeVO" resultClass="jeonjuNosunTimeVO" >

			       <isNotEmpty property="lKey" >
                SELECT 
                    A.ROUTE_ID brtStdId
                    , A.BUS_ALLOC_ORD startSeq    
                    , A.BUS_ALLOC_GROUP_ID CourseId
                    , A.DEPARTURE_TIME courseStime 
                 FROM JJBIS.BUS_ALLOCATION_GROUP_DETAIL A,  
                        (SELECT T.BUS_ALLOC_GROUP_ID  
                            FROM JJBIS.BUS_ALLOCATION_GROUP T, JJBIS.BUS_ALLOCATION_GROUP_DETAIL C   
                            WHERE C.BUS_ALLOC_GROUP_ID = T.BUS_ALLOC_GROUP_ID  
                            AND T.USE_FLAG ='1' 
                            AND T.GROUP_NAME LIKE '저상%'  
                        GROUP BY T.BUS_ALLOC_GROUP_ID) B  
                WHERE 1=1 
                 AND A.BUS_ALLOC_GROUP_ID = B.BUS_ALLOC_GROUP_ID 
                 AND A.ROUTE_ID = #stdId#   
                ORDER BY A.BUS_ALLOC_ORD  
        </isNotEmpty>
        
        <isEmpty property="lKey">
            SELECT ROUTE_ID brtStdId, 
                BUS_ALLOC_ORD startSeq, 
                BUS_ALLOC_GROUP_ID CourseId, 
                DEPARTURE_TIME courseStime 
            FROM JJBIS.BUS_ALLOCATION_GROUP_DETAIL  
            WHERE 1=1 
             AND ROUTE_ID = #stdId# 
            ORDER BY BUS_ALLOC_ORD  
        </isEmpty>
    </select>
    
    
    
    <!--   해당 정류장을 경유하는 노선 정보 2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectNosunByWayStop"  parameterClass="jeonjuNosunByWayStopVO" resultClass="jeonjuNosunByWayStopVO" >
      	
    	<isNotEmpty property="lKey" >

			 SELECT  
                ROUTE_ID brtStdId, 
                DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) brtId, 
                DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass,
                ROUTE_DIRECTION brtDirection, 
                ROUTE_SUBID brtSubId, 
               (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) brtSname,
               (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) brtEname,                  
                PERM_COUNT brtBusNum, 
                JJBIS.F_GET_FIRSTTIME(A.ROUTE_ID) brtFirstTime, 
                JJBIS.F_GET_LASTTIME(A.ROUTE_ID) brtLastTime, 
                BRT_NEEDTIME brtNeedTime, 
                BRT_MININTERVAL brtMininTerVal, 
                BRT_MAXINTERVAL brtMaxinTerVal, 
                BRT_ILREGINTERVAL_YN brtIlreginTerValYn 
                FROM (SELECT A.* FROM JJBIS.BUSROUTE A
                WHERE ROUTE_STATUS = '1' 
                AND ROUTE_ID IN 
                    ( SELECT A.ROUTE_ID 
                        FROM JJBIS.V_BUSROUTE_STOP A, 
                            (SELECT T.ROUTE_ID FROM JJBIS.BUS_ALLOCATION_GROUP_DETAIL T, JJBIS.BUS_ALLOCATION_GROUP C 
                                WHERE C.BUS_ALLOC_GROUP_ID = T.BUS_ALLOC_GROUP_ID 
                                AND C.GROUP_NAME LIKE '저상%' 
                                GROUP BY T.ROUTE_ID) B 
                        WHERE A.ROUTE_ID = B.ROUTE_ID AND TRIM(A.NODE_ID) = #stopStandardid# GROUP BY A.ROUTE_ID)) A
		</isNotEmpty>
		
		<isEmpty property="lKey">
	SELECT  
                ROUTE_ID brtStdId, 
                DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) brtId, 
                DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) brtClass,
                ROUTE_DIRECTION brtDirection, 
                ROUTE_SUBID brtSubId, 
               (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) brtSname,
               (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) brtEname,                  
                PERM_COUNT brtBusNum, 
                JJBIS.F_GET_FIRSTTIME(A.ROUTE_ID) brtFirstTime, 
                JJBIS.F_GET_LASTTIME(A.ROUTE_ID) brtLastTime, 
                BRT_NEEDTIME brtNeedTime, 
                BRT_MININTERVAL brtMininTerVal, 
                BRT_MAXINTERVAL brtMaxinTerVal, 
                BRT_ILREGINTERVAL_YN brtIlreginTerValYn 
                FROM 
                 ( SELECT A.* 
                  FROM JJBIS.BUSROUTE A                  
                WHERE ROUTE_STATUS = '1' 
                AND ROUTE_ID IN                                     
                            ( SELECT A.ROUTE_ID 
                                FROM JJBIS.V_BUSROUTE_STOP A                           
                                WHERE A.NODE_ID = #stopStandardid# GROUP BY A.ROUTE_ID) ) A
		</isEmpty>
			
    </select>
    
    
    
    
    <!--   선택한 출발지와 도착지의 이동경로 좌표 2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectBusStopNosunInfo"  parameterClass="jeonjuBusStopNosunInfoVO" resultClass="jeonjuBusStopNosunInfoVO" >
    <!-- junban node -->
    	<isEqual property="sStdId4" compareValue="2">

	    	SELECT A.LINK_ID sLinkId, A.VTX_SEQ sVtxSeq, A.STOP_XINLINK sStopXinLink, A.STOP_YINLINK sStopYinLink, 
                C.LINK_ID cLinkId, C.VTX_SEQ cVtxSeq, C.STOP_XINLINK cStopXinLink, C.STOP_YINLINK cStopYinLInk 
            FROM 
                (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId2#) A, 
                (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId3#) C
    	</isEqual>
   	<!-- hooban node --> 
    	<isEqual property="sStdId4" compareValue="3">

	    	   SELECT B.LINK_ID fLinkId, B.VTX_SEQ fVtxSeq, B.STOP_XINLINK fStopXinLink, B.STOP_YINLINK fStopYinLink, 
            C.LINK_ID cLinkId, C.VTX_SEQ cVtxSeq, C.STOP_XINLINK cStopXinLink, C.STOP_YINLINK cStopYinLInk 
            FROM 
            (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId2#) C,
            (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId3#) B 
    	</isEqual>
    <!-- jikhaeng node --> 
    	<isEqual property="sStdId4" compareValue="1">

	    	   SELECT A.LINK_ID sLinkId, A.VTX_SEQ sVtxSeq, A.STOP_XINLINK sStopXinLink, A.STOP_YINLINK sStopYinLink, 
            B.LINK_ID fLinkId, B.VTX_SEQ fVtxSeq, B.STOP_XINLINK fStopXinLink, B.STOP_YINLINK fStopYinLink 
            FROM 
            (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId2#) A, 
            (SELECT LINK_ID, LINK_VTX_ORD VTX_SEQ, LINK_LNG STOP_XINLINK, LINK_LAT STOP_YINLINK 
            FROM JJBIS.BUSSTOP WHERE  STOP_ID = #sStdId3#) B 
    	</isEqual> 
    </select>
    
    
    <!-- 선택한 출발지와 도착지의 이동경로 좌표 2016.06 업데이트-->
     <select id="JeonjuBusDAO.selectBusStopNosunDrawing"  parameterClass="jeonjuBusStopNosunDrawingVO" resultClass="jeonjuBusStopNosunDrawingVO" >

			 SELECT A.LINK_ID linkId, A.ORD vtxSeq, A.LNG vtxx, A.LAT vtxy 
            FROM JJBIS.LINK_VERTEX A,               
        ( SELECT IDX, LINK_ID  
            FROM ( SELECT ROW_NUMBER() OVER(ORDER BY MAX(ROUTE_ORD)) AS IDX, LINK_ID 
        FROM JJBIS.BUSROUTE_SECTION_DETAIL_eDIT A, BUSROUTE B
         WHERE 1=1
          AND B.ROUTE_ID =#sStdId1#
          AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
          AND B.ROUTE_sTATUS ='1'  
          GROUP BY A.LINK_ID )  
            WHERE  IDX BETWEEN ( SELECT IDX  
        FROM ( SELECT ROW_NUMBER() OVER(ORDER BY MAX(ROUTE_ORD)) AS IDX,LINK_ID  
            FROM JJBIS.BUSROUTE_SECTION_DETAIL_eDIT A, BUSROUTE B
             WHERE 1=1
              AND B.ROUTE_ID =#sStdId1#
              AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
              AND B.ROUTE_sTATUS ='1' 
            GROUP BY LINK_ID )  
        WHERE  LINK_ID = #startLinkId# ) 
          AND ( SELECT IDX FROM ( SELECT ROW_NUMBER() OVER(ORDER BY MAX(ROUTE_ORD)) AS IDX,  
            LINK_ID 
        FROM JJBIS.BUSROUTE_SECTION_DETAIL_eDIT A, BUSROUTE B
         WHERE 1=1
          AND B.ROUTE_ID =#sStdId1#
          AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
          AND B.ROUTE_sTATUS ='1' 
            GROUP BY LINK_ID )  
        WHERE  LINK_ID = #endLinkId# ) ORDER BY IDX ) B 
            WHERE A.LINK_ID = B.LINK_ID ORDER BY B.IDX, A.ORD 
    </select>
    
    <!--  버스 노선의 운행경로 좌표 2016.06 업데이트 -->
    <select id="JeonjuBusDAO.selectBusNosunDrawing"  parameterClass="jeonjuBusNosunDrawingVO" resultClass="jeonjuBusNosunDrawingVO" >

		SELECT A.LINK_ID linkId, A.ORD vtxSeq, A.LNG vtxx, A.LAT vtxy 
            FROM JJBIS.LINK_VERTEX A, 
        ( SELECT ROWNUM RN, LINK_ID 
            FROM ( SELECT A.LINK_ID FROM JJBIS.BUSROUTE_SECTION_DETAIL_EDIT A, BUSROUTE B
            WHERE 1=1
             AND A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID
             AND B.ROUTE_sTATUS ='1'
             AND B.ROUTE_ID = #brtStdid#             
            GROUP BY A.LINK_ID ORDER BY MAX(ROUTE_ORD) ) ) B 
        WHERE A.LINK_ID = B.LINK_ID ORDER BY B.RN, A.ORD 
    </select>
    
    
    <!--  선택한 좌표에서 가까운 정류장의 좌표값 구하기  2016.06 업데이트 -->
    <select id="JeonjuBusDAO.selectBusStopApproach"  parameterClass="jeonjuBusStopApproachVO" resultClass="jeonjuBusStopApproachVO" >

			 SELECT STOP_STANDARDID stopStandardid, STOP_X stopx, STOP_Y stopy, STOP_KNAME stopKname, REMARK reMark 
            FROM (  SELECT STOP_ID STOP_STANDARDID, STOP_NAME STOP_KNAME, LNG STOP_X, LAT STOP_Y, REMARK, 
        ( (LNG - $arg1$) * (LNG - $arg1$)  + (LAT - $arg2$) * (LAT - $arg2$)) AS LENGTH 
        <![CDATA[
            FROM   JJBIS.BUSSTOP ORDER BY   LENGTH) 
            WHERE ROWNUM <= $arg3$ 
            ]]>
    </select>
    
    
    <!--  특정 노선의 특정 정류장의 버스 도착 정보 2016.06 업데이트 -->
    <select id="JeonjuBusDAO.selectBusStopRealLocation"  parameterClass="jeonjuBusStopInfoVO" resultClass="jeonjuBusStopInfoVO" >

			  SELECT * FROM (
            SELECT A.BRT_STDID brtStdid, A.BID_NO bidNo, (A.BRS_SEQNO - A.CUR_BRS_SEQNO) rStop, A.RTIME rTime, A.VIA_STOPNAME viaStopname, 
                DECODE(INSTR(B.ROUTE_NAME, '-'), 0, B.ROUTE_NAME, SUBSTR(B.ROUTE_NAME, 1, INSTR(B.ROUTE_NAME, '-')-1)) brtId, 
                DECODE(INSTR(B.ROUTE_NAME, '-'), 0, '0', SUBSTR(B.ROUTE_NAME, INSTR(B.ROUTE_NAME, '-')+1, LENGTH(B.ROUTE_NAME) - INSTR(B.ROUTE_NAME, '-'))) brtClass, 
                B.ROUTE_EXPLAIN brtVianame, 
                B.ROUTE_DIRECTION brtDirection, 
            (SELECT LOW_FLAG FROM JJBIS.VEHICLE WHERE VEH_ID = A.BID_NO) busLow 
                FROM 
            ( 
                SELECT BRT_STDID, BID_NO, CUR_BRS_SEQNO, BRS_SEQNO, VIA_STOPNAME, SUM(TTIME) RTIME 
            FROM 
                ( 
                    SELECT BRNA.ROUTE_ORD BRN_SEQNO, BRNA.ROUTE_ID BRT_STDID, BRNA.ED_NODE_ID BNODE_ID, BRNA.ST_NODE_ID BNODE_FROMID, 
                        BRSB.CUR_BRS_SEQNO, BRSB.BRN_SEQNO_MAX, BRSB.BRS_SEQNO, BRSB.BID_NO, BRSB.VIA_STOPNAME, 
                        (SELECT (FUSN_SERVICE_TIME + FUSN_TRAVEL_TIME) TTIME FROM JJBIS.M_PROCESS_CURRENT WHERE 
                            ROUTE_ID = BRNA.ROUTE_ID
                            AND ST_NODE_ID = BRNA.ST_NODE_ID AND ED_NODE_ID = BRNA.ED_NODE_ID) TTIME 
                    FROM JJBIS.V_BUSROUTE_SECTION BRNA, 
                        ( 
                                SELECT * FROM 
                                    ( SELECT 
                                     A.ROUTE_ID AS BRT_STDID,
                                     B.VEH_ID AS BID_NO,
                                     A.STOP_ORD AS BRS_SEQNO,
                                     A.ROUTE_ORD BRN_SEQNO_MAX,
                                     B.LATEST_STOP_ORD AS CUR_BRS_SEQNO,
                                     B.CURRENT_NODE_ORD AS CUR_BRN_SEQNO,
                                     (SELECT STOP_NAME FROM JJBIS.BUSSTOP WHERE STOP_ID = A.NODE_ID ) VIA_STOPNAME
                                    FROM
                                     JJBIS.V_BUSROUTE_STOP A, JJBIS.BUS_OPERATION B
                                    WHERE A.ROUTE_ID = B.ROUTE_ID
                                     AND A.NODE_ID = #stopStdid#
                                     AND B.OPERATION_STATUS = '1' ) BR
                                    WHERE (BR.BRS_SEQNO-BR.CUR_BRS_SEQNO) BETWEEN 1 AND 9 
                        )BRSB 
                    WHERE BRNA.ROUTE_ID = BRSB.BRT_STDID 
                        AND BRNA.ROUTE_ORD BETWEEN BRSB.CUR_BRN_SEQNO AND BRSB.BRN_SEQNO_MAX 
                    ORDER BY BRNA.ROUTE_ORD, BRNA.ROUTE_ORD ASC 
                ) GROUP BY BRT_STDID, BID_NO, CUR_BRS_SEQNO, BRS_SEQNO, VIA_STOPNAME 
            ) A, JJBIS.BUSROUTE B 
                WHERE A.BRT_STDID = B.ROUTE_ID 
            ORDER BY TO_NUMBER(DECODE(INSTR(B.ROUTE_NAME, '-'), 0, B.ROUTE_NAME, SUBSTR(B.ROUTE_NAME, 1, INSTR(B.ROUTE_NAME, '-')-1))), 
                DECODE(INSTR(B.ROUTE_NAME, '-'), 0, '0', SUBSTR(B.ROUTE_NAME, INSTR(B.ROUTE_NAME, '-')+1, LENGTH(B.ROUTE_NAME) - INSTR(B.ROUTE_NAME, '-'))), A.RTIME
            ) WHERE brtId=#initBrtid# 
             <isNotEmpty property="initBrtClass" >
					    AND brtClass = #initBrtClass#  
			      </isNotEmpty>
                    
                  <isNotEmpty property="lKey" >
                  AND busLow = '1' 
                  </isNotEmpty>
    </select>
    
    
    
    
    <!--  특정 환승경로의 경유 정류장 리스트  2016.06 업데이트-->
    <select id="JeonjuBusDAO.selectBusTransferStopInfo"  parameterClass="jeonjuBusTransferStopInfoVO" resultClass="jeonjuBusTransferStopInfoVO" >

				  SELECT A.STOP_ORD brsSeqNo,A.ED_NODE_ID bNodeId,A.SECT_DISTANCE brsLength,A.TTT brsNeedTime,
                (SELECT STOP_NAME STOP_KNAME FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopKname,
                (SELECT LNG STOP_X FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopx,
                (SELECT LAT STOP_Y FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopy 
                FROM JJBIS.V_STOP_PROCESS A 
                <![CDATA[
                WHERE A.ROUTE_ID=#startId# 
                AND A.STOP_ORD >= #startFromSeqNo# 
                AND A.STOP_ORD <= #startToseqNo# 
                AND STOP_ORD IS NOT NULL
                ]]>                
                UNION ALL                 
              SELECT A.STOP_ORD brsSeqNo,A.ED_NODE_ID bNodeId,A.SECT_DISTANCE brsLength,A.TTT brsNeedTime,
                (SELECT STOP_NAME STOP_KNAME FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopKname,
                (SELECT LNG STOP_X FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopx,
                (SELECT LAT STOP_Y FROM JJBIS.BUSSTOP B WHERE B.STOP_ID=A.ED_NODE_ID) stopy 
                FROM JJBIS.V_STOP_PROCESS A                 
                <![CDATA[
                WHERE A.ROUTE_ID=#finId# 
                 AND A.STOP_ORD > #finFromseqNo# 
                 AND A.STOP_ORD <= #finToseqNo#
                 AND STOP_ORD IS NOT NULL
                ]]>
    </select>
    


    <!-- 버스정류장 기반정보  2016.06 업데이트-->
     <select id="JeonjuBusDAO.selectBaseInfoBusStop"  parameterClass="jeonjuBaseInfoBusStopVO" resultClass="jeonjuBaseInfoBusStopVO" >
     <isNotEmpty property="min" >
    	SELECT * FROM (
	</isNotEmpty>		
	<isNotEmpty property="max" >
			SELECT ROWNUM AS RNUM, A.* FROM (
		</isNotEmpty>
			
     SELECT 
       STOP_ID AS STOP_STANDARDID
     , SERVICE_ID AS STOP_ID
     , STOP_TYPE AS STOP_TYPE
     , CENTERLANE_FLAG AS STOP_CENTERYN
     , STOP_NAME AS STOP_KNAME
     , STOP_SHORTNAME AS STOP_SHORTNAME
     , STOP_ENAME
     , LNG AS STOP_X
     , LAT AS STOP_Y
     , STOP_ANGLE STOP_HEADING
     , LINK_ID
     , LINK_VTX_ORD AS VTX_SEQ
     , LINK_LNG AS STOP_XINLINK
     , LINK_LAT AS STOP_YINLINK
     , LINK_STOP_ORD AS STOP_SEQNOINLINK
     , LINK_STOP_LEN AS IN_LINK_LENGTH
     , DEPARTURE_DETECT_RADIUS AS STOP_DPRTDIST
     , ARRIVAL_DETECT_RADIUS AS STOP_ARRVLDIST
     , '30' STOP_REVISIONNO
     , '1' STOP_TRANSFERFLAG
     , 'N' STOP_AMSRVPLATE_YN
     , DECODE(USE_FLAG, '0','N','1','Y',NULL, 'N') USE_YN
     , RELAY_AREACODE AS CO_ID
     , REMARK
     FROM JJBIS.BUSSTOP
     ORDER BY STOP_ID ASC
		<isNotEmpty property="max" >		
		<![CDATA[
			) A WHERE ROWNUM <= $max$ 
			]]>
			</isNotEmpty>
			
		<isNotEmpty property="min" >
		<![CDATA[		
		) WHERE RNUM > $min$
		]]>
		</isNotEmpty>
    </select>
    
    
    
    
    <!--  노선별 정류장 기반정보 2016.06 업데이트-->
     <select id="JeonjuBusDAO.selectBaseInfoNosunBusStop"  parameterClass="jeonjuBaseInfoNosunBusStopVO" resultClass="jeonjuBaseInfoNosunBusStopVO" >
     <isNotEmpty property="min" >
    	SELECT * FROM (
	</isNotEmpty>		
	<isNotEmpty property="max" >
			SELECT ROWNUM AS RNUM, A.* FROM (
		</isNotEmpty>

		  SELECT ROUTE_ID AS BRT_STDID
            ,ROUTE_ORD AS BRN_SEQNO
            ,STOP_ORD AS BRS_SEQNO
            ,'1' BRS_IMPORTANTFLAG
            , ED_NODE_ID AS BNODE_ID
            , SECT_DISTANCE AS BRS_LENGTH
            ,TTT AS BRS_NEEDTIME
            FROM JJBIS.V_STOP_PROCESS
            WHERE STOP_ORD IS NOT NULL
            ORDER BY ROUTE_ORD		
		<isNotEmpty property="max" >		
		<![CDATA[
			) A WHERE ROWNUM <= $max$ 
			]]>
			</isNotEmpty>
			
		<isNotEmpty property="min" >
		<![CDATA[		
		) WHERE RNUM > $min$
		]]>
		</isNotEmpty>
    </select>
    
    
    <!-- 노선별 노선별지점 기반정보  2016.06 업데이트-->
     <select id="JeonjuBusDAO.selectBaseInfoBusNode"  parameterClass="jeonjuBaseInfoBusNodeVO" resultClass="jeonjuBaseInfoBusNodeVO" >

			<isNotEmpty property="min" >
			 SELECT * FROM (
        </isNotEmpty>        
        <isNotEmpty property="max" >
                SELECT ROWNUM AS RNUM, A.* FROM (
            </isNotEmpty>
        
           SELECT ROUTE_ID BRT_STDID, ST_NODE_ID BNODE_FROMID,
             ED_NODE_ID BNODE_ID,
             SECT_DISTANCE BRN_LENGTH,
             (TOTAL_SECT_DISTANCE-SECT_ACC_DISTANCE) BRN_REMAINDISTANCE,
             ROUTE_ORD BRN_SEQNO             
             FROM JJBIS.V_BUSROUTE_sECTION
             ORDER BY BRT_STDID, ROUTE_ORD
                    
            <isNotEmpty property="max" >        
            <![CDATA[
                ) A WHERE ROWNUM <= $max$ 
                ]]>
                </isNotEmpty>
                
            <isNotEmpty property="min" >
            <![CDATA[        
            ) WHERE RNUM > $min$
            ]]>
            </isNotEmpty>
    </select>
    
    
    <!-- 버스노선 기반정보 -->
     <select id="JeonjuBusDAO.selectBaseInfoBusRoute"  parameterClass="jeonjuBaseInfoBusRouteVO" resultClass="jeonjuBaseInfoBusRouteVO" >
		     <isNotEmpty property="min" >
		    	SELECT * FROM (
			</isNotEmpty>		
			<isNotEmpty property="max" >
					SELECT ROWNUM AS RNUM, A.* FROM (
				</isNotEmpty>

			SELECT 
					ROUTE_ID AS BRT_STDID
					, DECODE(INSTR(ROUTE_NAME, '-'), 0, ROUTE_NAME, SUBSTR(ROUTE_NAME, 1, INSTR(ROUTE_NAME, '-')-1)) BRT_ID
					, DECODE(INSTR(ROUTE_NAME, '-'), 0, '0', SUBSTR(ROUTE_NAME, INSTR(ROUTE_NAME, '-')+1, LENGTH(ROUTE_NAME) - INSTR(ROUTE_NAME, '-'))) BRT_CLASS
					, ROUTE_DIRECTION AS BRT_DIRECTION
					, ROUTE_SUBID AS BRT_SUBID
					, DECODE(ROUTE_STATUS, '1', '2', '0', '0', NULL, '0') STATUSCODE
					, ROUTE_TYPE AS BRT_TYPE
					, (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) BRT_SNAME
					, (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) BRT_ENAME       
					, ROUTE_EXPLAIN AS BRT_VIANAME
					, PERM_COUNT BRT_BUSNUM
					, '0' BRT_BOPNUM
					, BRT_MININTERVAL
					, BRT_MAXINTERVAL
					, BRT_NEEDTIME
					, JJBIS.F_GET_FIRSTTIME(ROUTE_ID) BRT_FIRSTTIME
					, JJBIS.F_GET_LASTTIME(ROUTE_ID) BRT_LASTTIME
					, (SELECT B.TOTAL_SECT_DISTANCE FROM BUSROUTE_SECTION B WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID )
					, OPERATION_ST_DATE BRT_BEGINDAY
					, OPERATION_ED_DATE BRT_CLOSEDAY
					, '4' BRT_OPERWEEK
					, BRT_EXPLANATION
					, DECODE(ROUTE_STATUS , '1' ,'Y', '0','N','2','N',NULL,'N') USE_YN
					, (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ST_STOP_ID = C.STOP_ID ) COURSE_SNAME
					, '' COURSE_MNAME1
					, '' COURSE_MNAME2
					, (SELECT C.STOP_NAME FROM BUSROUTE_SECTION B, BUSSTOP C WHERE A.ROUTESECT_GROUP_ID = B.ROUTESECT_GROUP_ID AND B.ED_STOP_ID = C.STOP_ID ) COURSE_ENAME
					, '' FIRST_REGYMDHS
					, 'admin' AS FIRST_REGID
					, '' FINAL_REGYMDHS
					, 'admin' AS FINAL_REGID
					, BRT_ILREGINTERVAL_YN
					, RELAY_AREACODE AS CO_ID
					, '3' BRT_RSVDIV
					FROM JJBIS.BUSROUTE A
					ORDER BY ROUTE_ID			
				<isNotEmpty property="max" >		
				<![CDATA[
					) A WHERE ROWNUM <= $max$ 
					]]>
					</isNotEmpty>
					
				<isNotEmpty property="min" >
				<![CDATA[		
				) WHERE RNUM > $min$
				]]>
				</isNotEmpty>
    </select>
    
    
    <!--   버스 현재위치 기반정보 2016.06. 업데이트-->
    <select id="JeonjuBusDAO.selectBaseInfoBusOperation"  parameterClass="jeonjuBaseInfoBusOperationVO" resultClass="jeonjuBaseInfoBusOperationVO" >
		     <isNotEmpty property="min" >
		    	SELECT * FROM (
			</isNotEmpty>		
			<isNotEmpty property="max" >
					SELECT ROWNUM AS RNUM, A.* FROM (
				</isNotEmpty>

			 SELECT 
                VEH_ID AS BID_NO, 
                LNG AS BOP_X, 
                LAT AS BOP_Y, 
                ANGLE AS BOP_ANGLE, 
                (SELECT NVL(ED_NODE_ID,0) FROM JJBIS.V_BUSROUTE_SECTION WHERE A.ROUTE_ID = ROUTE_ID AND DECODE(A.CURRENT_NODE_ORD,1,1,A.CURRENT_NODE_ORD-1) = ROUTE_ORD) AS BNODE_DEPARTUREID, 
                DECODE(CURRENT_NODE_ORD,1,1,CURRENT_NODE_ORD-1) AS BOP_DEPARTURESEQNO, 
                UPDATE_DT AS BOP_DEPARTUREYMDHMS, 
                (SELECT ED_NODE_ID FROM JJBIS.V_BUSROUTE_SECTION WHERE A.ROUTE_ID = ROUTE_ID AND A.CURRENT_NODE_ORD = ROUTE_ORD) AS BNODE_ARRIVALID, 
                CURRENT_NODE_ORD AS BOP_ARRIVALSEQNO, 
                (SELECT NODE_ID FROM JJBIS.V_BUSROUTE_STOP WHERE A.ROUTE_ID = ROUTE_ID AND A.LATEST_STOP_ORD = STOP_ORD) BNODE_DEPARTURESTOPID, 
                UPDATE_DT AS BOP_DEPARTURESTOPYMDHMS, 
                OPERATION_STATUS AS BOP_FLAG, 
                UPDATE_DT AS BOP_CHGYMDHMS, 
                ROUTE_ID AS BRT_STDID, 
                LATEST_STOP_ORD AS BOP_DEPARTURESTOPSEQNO
                FROM JJBIS.BUS_OPERATION A			
                ORDER BY ROUTE_ID ASC
				<isNotEmpty property="max" >		
				<![CDATA[
					) A WHERE ROWNUM <= $max$ 
					]]>
					</isNotEmpty>
					
				<isNotEmpty property="min" >
				<![CDATA[		
				) WHERE RNUM > $min$
				]]>
				</isNotEmpty>
    </select>
    
</sqlMap>
