/**
 * Javascript implementation of PKCS#1 PSS signature padding.
 *
 * @author Stefan Siegl
 *
 * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>
 */
!function(){function e(e){var t=e.pss=e.pss||{};t.create=function(t){3===arguments.length&&(t={md:arguments[0],mgf:arguments[1],saltLength:arguments[2]});var r=t.md,n=t.mgf,o=r.digestLength,i=t.salt||null;"string"==typeof i&&(i=e.util.createBuffer(i));var a;if("saltLength"in t)a=t.saltLength;else{if(null===i)throw new Error("Salt length not specified or specific salt not given.");a=i.length()}if(null!==i&&i.length()!==a)throw new Error("Given salt length does not match length of given salt.");var s=t.prng||e.random,f={};return f.encode=function(t,f){var u,l=f-1,d=Math.ceil(l/8),c=t.digest().getBytes();if(o+a+2>d)throw new Error("Message is too long to encrypt.");var g;g=null===i?s.getBytesSync(a):i.bytes();var h=new e.util.ByteBuffer;h.fillWithByte(0,8),h.putBytes(c),h.putBytes(g),r.start(),r.update(h.getBytes());var y=r.digest().getBytes(),p=new e.util.ByteBuffer;p.fillWithByte(0,d-a-o-2),p.putByte(1),p.putBytes(g);var m=p.getBytes(),v=d-o-1,B=n.generate(y,v),C="";for(u=0;v>u;u++)C+=String.fromCharCode(m.charCodeAt(u)^B.charCodeAt(u));var w=65280>>8*d-l&255;return C=String.fromCharCode(C.charCodeAt(0)&~w)+C.substr(1),C+y+String.fromCharCode(188)},f.verify=function(t,i,s){var f,u=s-1,l=Math.ceil(u/8);if(i=i.substr(-l),o+a+2>l)throw new Error("Inconsistent parameters to PSS signature verification.");if(188!==i.charCodeAt(l-1))throw new Error("Encoded message does not end in 0xBC.");var d=l-o-1,c=i.substr(0,d),g=i.substr(d,o),h=65280>>8*l-u&255;if(0!==(c.charCodeAt(0)&h))throw new Error("Bits beyond keysize not zero as expected.");var y=n.generate(g,d),p="";for(f=0;d>f;f++)p+=String.fromCharCode(c.charCodeAt(f)^y.charCodeAt(f));p=String.fromCharCode(p.charCodeAt(0)&~h)+p.substr(1);var m=l-o-a-2;for(f=0;m>f;f++)if(0!==p.charCodeAt(f))throw new Error("Leftmost octets not zero as expected");if(1!==p.charCodeAt(m))throw new Error("Inconsistent PSS signature, 0x01 marker not found");var v=p.substr(-a),B=new e.util.ByteBuffer;B.fillWithByte(0,8),B.putBytes(t),B.putBytes(v),r.start(),r.update(B.getBytes());var C=r.digest().getBytes();return g===C},f}}var t="pss";if("function"!=typeof define){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var r=!0;define=function(e,t){t(require,module)}}var n,o=function(r,o){o.exports=function(o){var i=n.map(function(e){return r(e)}).concat(e);if(o=o||{},o.defined=o.defined||{},o.defined[t])return o[t];o.defined[t]=!0;for(var a=0;a<i.length;++a)i[a](o);return o[t]}},i=define;define=function(e,t){return n="string"==typeof e?t.slice(2):e.slice(2),r?(delete define,i.apply(null,Array.prototype.slice.call(arguments,0))):(define=i,define.apply(null,Array.prototype.slice.call(arguments,0)))},define(["require","module","./random","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}();