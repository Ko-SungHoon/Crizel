/**
 * Javascript implementation of X.509 and related components (such as
 * Certification Signing Requests) of a Public Key Infrastructure.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 *
 * The ASN.1 representation of an X.509v3 certificate is as follows
 * (see RFC 2459):
 *
 * Certificate ::= SEQUENCE {
 *   tbsCertificate       TBSCertificate,
 *   signatureAlgorithm   AlgorithmIdentifier,
 *   signatureValue       BIT STRING
 * }
 *
 * TBSCertificate ::= SEQUENCE {
 *   version         [0]  EXPLICIT Version DEFAULT v1,
 *   serialNumber         CertificateSerialNumber,
 *   signature            AlgorithmIdentifier,
 *   issuer               Name,
 *   validity             Validity,
 *   subject              Name,
 *   subjectPublicKeyInfo SubjectPublicKeyInfo,
 *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,
 *                        -- If present, version shall be v2 or v3
 *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,
 *                        -- If present, version shall be v2 or v3
 *   extensions      [3]  EXPLICIT Extensions OPTIONAL
 *                        -- If present, version shall be v3
 * }
 *
 * Version ::= INTEGER  { v1(0), v2(1), v3(2) }
 *
 * CertificateSerialNumber ::= INTEGER
 *
 * Name ::= CHOICE {
 *   // only one possible choice for now
 *   RDNSequence
 * }
 *
 * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName
 *
 * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue
 *
 * AttributeTypeAndValue ::= SEQUENCE {
 *   type     AttributeType,
 *   value    AttributeValue
 * }
 * AttributeType ::= OBJECT IDENTIFIER
 * AttributeValue ::= ANY DEFINED BY AttributeType
 *
 * Validity ::= SEQUENCE {
 *   notBefore      Time,
 *   notAfter       Time
 * }
 *
 * Time ::= CHOICE {
 *   utcTime        UTCTime,
 *   generalTime    GeneralizedTime
 * }
 *
 * UniqueIdentifier ::= BIT STRING
 *
 * SubjectPublicKeyInfo ::= SEQUENCE {
 *   algorithm            AlgorithmIdentifier,
 *   subjectPublicKey     BIT STRING
 * }
 *
 * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension
 *
 * Extension ::= SEQUENCE {
 *   extnID      OBJECT IDENTIFIER,
 *   critical    BOOLEAN DEFAULT FALSE,
 *   extnValue   OCTET STRING
 * }
 *
 * The only key algorithm currently supported for PKI is RSA.
 *
 * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.
 *
 * PKCS#10 v1.7 describes certificate signing requests:
 *
 * CertificationRequestInfo:
 *
 * CertificationRequestInfo ::= SEQUENCE {
 *   version       INTEGER { v1(0) } (v1,...),
 *   subject       Name,
 *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},
 *   attributes    [0] Attributes{{ CRIAttributes }}
 * }
 *
 * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}
 *
 * CRIAttributes  ATTRIBUTE  ::= {
 *   ... -- add any locally defined attributes here -- }
 *
 * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {
 *   type   ATTRIBUTE.&id({IOSet}),
 *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})
 * }
 *
 * CertificationRequest ::= SEQUENCE {
 *   certificationRequestInfo CertificationRequestInfo,
 *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},
 *   signature          BIT STRING
 * }
 */
!function(){function e(e){function t(e,t){"string"==typeof t&&(t={shortName:t});for(var r,a=null,i=0;null===a&&i<e.attributes.length;++i)r=e.attributes[i],t.type&&t.type===r.type?a=r:t.name&&t.name===r.name?a=r:t.shortName&&t.shortName===r.shortName&&(a=r);return a}function r(t){for(var r,a,i=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),s=t.attributes,n=0;n<s.length;++n){r=s[n];var u=r.value,c=o.Type.PRINTABLESTRING;"valueTagClass"in r&&(c=r.valueTagClass,c===o.Type.UTF8&&(u=e.util.encodeUtf8(u))),a=o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(r.type).getBytes()),o.create(o.Class.UNIVERSAL,c,!1,u)])]),i.value.push(a)}return i}function a(e){for(var t,r=0;r<e.length;++r){if(t=e[r],"undefined"==typeof t.name&&(t.type&&t.type in u.oids?t.name=u.oids[t.type]:t.shortName&&t.shortName in l&&(t.name=u.oids[l[t.shortName]])),"undefined"==typeof t.type){if(!(t.name&&t.name in u.oids)){var a=new Error("Attribute type not specified.");throw a.attribute=t,a}t.type=u.oids[t.name]}if("undefined"==typeof t.shortName&&t.name&&t.name in l&&(t.shortName=l[t.name]),t.type===c.extensionRequest&&(t.valueConstructed=!0,t.valueTagClass=o.Type.SEQUENCE,!t.value&&t.extensions)){t.value=[];for(var s=0;s<t.extensions.length;++s)t.value.push(u.certificateExtensionToAsn1(i(t.extensions[s])))}if("undefined"==typeof t.value){var a=new Error("Attribute value not specified.");throw a.attribute=t,a}}}function i(t,a){if(a=a||{},"undefined"==typeof t.name&&t.id&&t.id in u.oids&&(t.name=u.oids[t.id]),"undefined"==typeof t.id){if(!(t.name&&t.name in u.oids)){var i=new Error("Extension ID not specified.");throw i.extension=t,i}t.id=u.oids[t.name]}if("undefined"!=typeof t.value)return t;if("keyUsage"===t.name){var s=0,n=0,l=0;t.digitalSignature&&(n|=128,s=7),t.nonRepudiation&&(n|=64,s=6),t.keyEncipherment&&(n|=32,s=5),t.dataEncipherment&&(n|=16,s=4),t.keyAgreement&&(n|=8,s=3),t.keyCertSign&&(n|=4,s=2),t.cRLSign&&(n|=2,s=1),t.encipherOnly&&(n|=1,s=0),t.decipherOnly&&(l|=128,s=7);var d=String.fromCharCode(s);0!==l?d+=String.fromCharCode(n)+String.fromCharCode(l):0!==n&&(d+=String.fromCharCode(n)),t.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,d)}else if("basicConstraints"===t.name)t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),t.cA&&t.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255))),"pathLenConstraint"in t&&t.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.pathLenConstraint).getBytes()));else if("extKeyUsage"===t.name){t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);var f=t.value.value;for(var C in t)t[C]===!0&&(C in c?f.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(c[C]).getBytes())):-1!==C.indexOf(".")&&f.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(C).getBytes())))}else if("nsCertType"===t.name){var s=0,n=0;t.client&&(n|=128,s=7),t.server&&(n|=64,s=6),t.email&&(n|=32,s=5),t.objsign&&(n|=16,s=4),t.reserved&&(n|=8,s=3),t.sslCA&&(n|=4,s=2),t.emailCA&&(n|=2,s=1),t.objCA&&(n|=1,s=0);var d=String.fromCharCode(s);0!==n&&(d+=String.fromCharCode(n)),t.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,d)}else if("subjectAltName"===t.name||"issuerAltName"===t.name){t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);for(var p,g=0;g<t.altNames.length;++g){p=t.altNames[g];var d=p.value;if(7===p.type&&p.ip){if(d=e.util.bytesFromIP(p.ip),null===d){var i=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');throw i.extension=t,i}}else 8===p.type&&(d=o.oidToDer(p.oid?o.oidToDer(p.oid):d));t.value.value.push(o.create(o.Class.CONTEXT_SPECIFIC,p.type,!1,d))}}else if("subjectKeyIdentifier"===t.name&&a.cert){var m=a.cert.generateSubjectKeyIdentifier();t.subjectKeyIdentifier=m.toHex(),t.value=o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,m.getBytes())}else if("authorityKeyIdentifier"===t.name&&a.cert){t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);var f=t.value.value;if(t.keyIdentifier){var h=t.keyIdentifier===!0?a.cert.generateSubjectKeyIdentifier().getBytes():t.keyIdentifier;f.push(o.create(o.Class.CONTEXT_SPECIFIC,0,!1,h))}if(t.authorityCertIssuer){var y=[o.create(o.Class.CONTEXT_SPECIFIC,4,!0,[r(t.authorityCertIssuer===!0?a.cert.issuer:t.authorityCertIssuer)])];f.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,y))}if(t.serialNumber){var E=e.util.hexToBytes(t.serialNumber===!0?a.cert.serialNumber:t.serialNumber);f.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!1,E))}}if("undefined"==typeof t.value){var i=new Error("Extension value not specified.");throw i.extension=t,i}return t}function s(e,t){switch(e){case c["RSASSA-PSS"]:var r=[];return void 0!==t.hash.algorithmOid&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])),void 0!==t.mgf.algorithmOid&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])])),void 0!==t.saltLength&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.saltLength).getBytes())])),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,r);default:return o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")}}function n(t){var r=o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[]);if(0===t.attributes.length)return r;for(var a=t.attributes,i=0;i<a.length;++i){var s=a[i],n=s.value,u=o.Type.UTF8;"valueTagClass"in s&&(u=s.valueTagClass),u===o.Type.UTF8&&(n=e.util.encodeUtf8(n));var c=!1;"valueConstructed"in s&&(c=s.valueConstructed);var l=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(s.type).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,u,c,n)])]);r.value.push(l)}return r}var o=e.asn1,u=e.pki=e.pki||{},c=u.oids,l={};l.CN=c.commonName,l.commonName="CN",l.C=c.countryName,l.countryName="C",l.L=c.localityName,l.localityName="L",l.ST=c.stateOrProvinceName,l.stateOrProvinceName="ST",l.O=c.organizationName,l.organizationName="O",l.OU=c.organizationalUnitName,l.organizationalUnitName="OU",l.E=c.emailAddress,l.emailAddress="E";var d=e.pki.rsa.publicKeyValidator,f={name:"Certificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.signature.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certSubject"},d,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,constructed:!0,captureAsn1:"certExtensions",optional:!0}]},{name:"Certificate.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSignature"}]},C={name:"rsapss",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.hashAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,optional:!0,value:[{name:"rsapss.saltLength.saltLength",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,optional:!0,value:[{name:"rsapss.trailer.trailer",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"trailer"}]}]},p={name:"CertificationRequestInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfoSubject"},d,{name:"CertificationRequestInfo.attributes",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1},{name:"CertificationRequestInfo.attributes.value",tagClass:o.Class.UNIVERSAL,type:o.Type.SET,constructed:!0}]}]}]},g={name:"CertificationRequest",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"csr",value:[p,{name:"CertificationRequest.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"csrSignature"}]};u.RDNAttributesAsArray=function(e,t){for(var r,a,i,s=[],n=0;n<e.value.length;++n){r=e.value[n];for(var u=0;u<r.value.length;++u)i={},a=r.value[u],i.type=o.derToOid(a.value[0].value),i.value=a.value[1].value,i.valueTagClass=a.value[1].type,i.type in c&&(i.name=c[i.type],i.name in l&&(i.shortName=l[i.name])),t&&(t.update(i.type),t.update(i.value)),s.push(i)}return s},u.CRIAttributesAsArray=function(e){for(var t=[],r=0;r<e.length;++r)for(var a=e[r],i=o.derToOid(a.value[0].value),s=a.value[1].value,n=0;n<s.length;++n){var d={};if(d.type=i,d.value=s[n].value,d.valueTagClass=s[n].type,d.type in c&&(d.name=c[d.type],d.name in l&&(d.shortName=l[d.name])),d.type===c.extensionRequest){d.extensions=[];for(var f=0;f<d.value.length;++f)d.extensions.push(u.certificateExtensionFromAsn1(d.value[f]))}t.push(d)}return t};var m=function(e,t,r){var a={};if(e!==c["RSASSA-PSS"])return a;r&&(a={hash:{algorithmOid:c.sha1},mgf:{algorithmOid:c.mgf1,hash:{algorithmOid:c.sha1}},saltLength:20});var i={},s=[];if(!o.validate(t,C,i,s)){var n=new Error("Cannot read RSASSA-PSS parameter block.");throw n.errors=s,n}return void 0!==i.hashOid&&(a.hash=a.hash||{},a.hash.algorithmOid=o.derToOid(i.hashOid)),void 0!==i.maskGenOid&&(a.mgf=a.mgf||{},a.mgf.algorithmOid=o.derToOid(i.maskGenOid),a.mgf.hash=a.mgf.hash||{},a.mgf.hash.algorithmOid=o.derToOid(i.maskGenHashOid)),void 0!==i.saltLength&&(a.saltLength=i.saltLength.charCodeAt(0)),a};u.certificateFromPem=function(t,r,a){var i=e.pem.decode(t)[0];if("CERTIFICATE"!==i.type&&"X509 CERTIFICATE"!==i.type&&"TRUSTED CERTIFICATE"!==i.type){var s=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw s.headerType=i.type,s}if(i.procType&&"ENCRYPTED"===i.procType.type)throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var n=o.fromDer(i.body,a);return u.certificateFromAsn1(n,r)},u.certificateToPem=function(t,r){var a={type:"CERTIFICATE",body:o.toDer(u.certificateToAsn1(t)).getBytes()};return e.pem.encode(a,{maxline:r})},u.publicKeyFromPem=function(t){var r=e.pem.decode(t)[0];if("PUBLIC KEY"!==r.type&&"RSA PUBLIC KEY"!==r.type){var a=new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');throw a.headerType=r.type,a}if(r.procType&&"ENCRYPTED"===r.procType.type)throw new Error("Could not convert public key from PEM; PEM is encrypted.");var i=o.fromDer(r.body);return u.publicKeyFromAsn1(i)},u.publicKeyToPem=function(t,r){var a={type:"PUBLIC KEY",body:o.toDer(u.publicKeyToAsn1(t)).getBytes()};return e.pem.encode(a,{maxline:r})},u.publicKeyToRSAPublicKeyPem=function(t,r){var a={type:"RSA PUBLIC KEY",body:o.toDer(u.publicKeyToRSAPublicKey(t)).getBytes()};return e.pem.encode(a,{maxline:r})},u.getPublicKeyFingerprint=function(t,r){r=r||{};var a,i=r.md||e.md.sha1.create(),s=r.type||"RSAPublicKey";switch(s){case"RSAPublicKey":a=o.toDer(u.publicKeyToRSAPublicKey(t)).getBytes();break;case"SubjectPublicKeyInfo":a=o.toDer(u.publicKeyToAsn1(t)).getBytes();break;default:throw new Error('Unknown fingerprint type "'+r.type+'".')}i.start(),i.update(a);var n=i.digest();if("hex"===r.encoding){var c=n.toHex();return r.delimiter?c.match(/.{2}/g).join(r.delimiter):c}if("binary"===r.encoding)return n.getBytes();if(r.encoding)throw new Error('Unknown encoding "'+r.encoding+'".');return n},u.certificationRequestFromPem=function(t,r,a){var i=e.pem.decode(t)[0];if("CERTIFICATE REQUEST"!==i.type){var s=new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');throw s.headerType=i.type,s}if(i.procType&&"ENCRYPTED"===i.procType.type)throw new Error("Could not convert certification request from PEM; PEM is encrypted.");var n=o.fromDer(i.body,a);return u.certificationRequestFromAsn1(n,r)},u.certificationRequestToPem=function(t,r){var a={type:"CERTIFICATE REQUEST",body:o.toDer(u.certificationRequestToAsn1(t)).getBytes()};return e.pem.encode(a,{maxline:r})},u.createCertificate=function(){var r={};return r.version=2,r.serialNumber="00",r.signatureOid=null,r.signature=null,r.siginfo={},r.siginfo.algorithmOid=null,r.validity={},r.validity.notBefore=new Date,r.validity.notAfter=new Date,r.issuer={},r.issuer.getField=function(e){return t(r.issuer,e)},r.issuer.addField=function(e){a([e]),r.issuer.attributes.push(e)},r.issuer.attributes=[],r.issuer.hash=null,r.subject={},r.subject.getField=function(e){return t(r.subject,e)},r.subject.addField=function(e){a([e]),r.subject.attributes.push(e)},r.subject.attributes=[],r.subject.hash=null,r.extensions=[],r.publicKey=null,r.md=null,r.setSubject=function(e,t){a(e),r.subject.attributes=e,delete r.subject.uniqueId,t&&(r.subject.uniqueId=t),r.subject.hash=null},r.setIssuer=function(e,t){a(e),r.issuer.attributes=e,delete r.issuer.uniqueId,t&&(r.issuer.uniqueId=t),r.issuer.hash=null},r.setExtensions=function(e){for(var t=0;t<e.length;++t)i(e[t],{cert:r});r.extensions=e},r.getExtension=function(e){"string"==typeof e&&(e={name:e});for(var t,a=null,i=0;null===a&&i<r.extensions.length;++i)t=r.extensions[i],e.id&&t.id===e.id?a=t:e.name&&t.name===e.name&&(a=t);return a},r.sign=function(t,a){r.md=a||e.md.sha1.create();var i=c[r.md.algorithm+"WithRSAEncryption"];if(!i){var s=new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");throw s.algorithm=r.md.algorithm,s}r.signatureOid=r.siginfo.algorithmOid=i,r.tbsCertificate=u.getTBSCertificate(r);var n=o.toDer(r.tbsCertificate);r.md.update(n.getBytes()),r.signature=t.sign(r.md)},r.verify=function(t){var a=!1;if(!r.issued(t)){var i=t.issuer,s=r.subject,n=new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.");throw n.expectedIssuer=i.attributes,n.actualIssuer=s.attributes,n}var l=t.md;if(null===l){if(t.signatureOid in c){var d=c[t.signatureOid];switch(d){case"sha1WithRSAEncryption":l=e.md.sha1.create();break;case"md5WithRSAEncryption":l=e.md.md5.create();break;case"sha256WithRSAEncryption":l=e.md.sha256.create();break;case"sha512WithRSAEncryption":l=e.md.sha512.create();break;case"RSASSA-PSS":l=e.md.sha256.create()}}if(null===l){var n=new Error("Could not compute certificate digest. Unknown signature OID.");throw n.signatureOid=t.signatureOid,n}var f=t.tbsCertificate||u.getTBSCertificate(t),C=o.toDer(f);l.update(C.getBytes())}if(null!==l){var p;switch(t.signatureOid){case c.sha1WithRSAEncryption:p=void 0;break;case c["RSASSA-PSS"]:var g,m;if(g=c[t.signatureParameters.mgf.hash.algorithmOid],void 0===g||void 0===e.md[g]){var n=new Error("Unsupported MGF hash function.");throw n.oid=t.signatureParameters.mgf.hash.algorithmOid,n.name=g,n}if(m=c[t.signatureParameters.mgf.algorithmOid],void 0===m||void 0===e.mgf[m]){var n=new Error("Unsupported MGF function.");throw n.oid=t.signatureParameters.mgf.algorithmOid,n.name=m,n}if(m=e.mgf[m].create(e.md[g].create()),g=c[t.signatureParameters.hash.algorithmOid],void 0===g||void 0===e.md[g])throw{message:"Unsupported RSASSA-PSS hash function.",oid:t.signatureParameters.hash.algorithmOid,name:g};p=e.pss.create(e.md[g].create(),m,t.signatureParameters.saltLength)}a=r.publicKey.verify(l.digest().getBytes(),t.signature,p)}return a},r.isIssuer=function(e){var t=!1,a=r.issuer,i=e.subject;if(a.hash&&i.hash)t=a.hash===i.hash;else if(a.attributes.length===i.attributes.length){t=!0;for(var s,n,o=0;t&&o<a.attributes.length;++o)s=a.attributes[o],n=i.attributes[o],(s.type!==n.type||s.value!==n.value)&&(t=!1)}return t},r.issued=function(e){return e.isIssuer(r)},r.generateSubjectKeyIdentifier=function(){return u.getPublicKeyFingerprint(r.publicKey,{type:"RSAPublicKey"})},r.verifySubjectKeyIdentifier=function(){for(var t=c.subjectKeyIdentifier,a=0;a<r.extensions.length;++a){var i=r.extensions[a];if(i.id===t){var s=r.generateSubjectKeyIdentifier().getBytes();return e.util.hexToBytes(i.subjectKeyIdentifier)===s}}return!1},r},u.certificateFromAsn1=function(r,i){var s={},n=[];if(!o.validate(r,f,s,n)){var l=new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");throw l.errors=n,l}if("string"!=typeof s.certSignature){for(var d="\x00",C=0;C<s.certSignature.length;++C)d+=o.toDer(s.certSignature[C]).getBytes();s.certSignature=d}var p=o.derToOid(s.publicKeyOid);if(p!==u.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var g=u.createCertificate();g.version=s.certVersion?s.certVersion.charCodeAt(0):0;var h=e.util.createBuffer(s.certSerialNumber);g.serialNumber=h.toHex(),g.signatureOid=e.asn1.derToOid(s.certSignatureOid),g.signatureParameters=m(g.signatureOid,s.certSignatureParams,!0),g.siginfo.algorithmOid=e.asn1.derToOid(s.certinfoSignatureOid),g.siginfo.parameters=m(g.siginfo.algorithmOid,s.certinfoSignatureParams,!1);var y=e.util.createBuffer(s.certSignature);++y.read,g.signature=y.getBytes();var E=[];if(void 0!==s.certValidity1UTCTime&&E.push(o.utcTimeToDate(s.certValidity1UTCTime)),void 0!==s.certValidity2GeneralizedTime&&E.push(o.generalizedTimeToDate(s.certValidity2GeneralizedTime)),void 0!==s.certValidity3UTCTime&&E.push(o.utcTimeToDate(s.certValidity3UTCTime)),void 0!==s.certValidity4GeneralizedTime&&E.push(o.generalizedTimeToDate(s.certValidity4GeneralizedTime)),E.length>2)throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");if(E.length<2)throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");if(g.validity.notBefore=E[0],g.validity.notAfter=E[1],g.tbsCertificate=s.tbsCertificate,i){if(g.md=null,g.signatureOid in c){var p=c[g.signatureOid];switch(p){case"sha1WithRSAEncryption":g.md=e.md.sha1.create();break;case"md5WithRSAEncryption":g.md=e.md.md5.create();break;case"sha256WithRSAEncryption":g.md=e.md.sha256.create();break;case"sha512WithRSAEncryption":g.md=e.md.sha512.create();break;case"RSASSA-PSS":g.md=e.md.sha256.create()}}if(null===g.md){var l=new Error("Could not compute certificate digest. Unknown signature OID.");throw l.signatureOid=g.signatureOid,l}var v=o.toDer(g.tbsCertificate);g.md.update(v.getBytes())}var T=e.md.sha1.create();g.issuer.getField=function(e){return t(g.issuer,e)},g.issuer.addField=function(e){a([e]),g.issuer.attributes.push(e)},g.issuer.attributes=u.RDNAttributesAsArray(s.certIssuer,T),s.certIssuerUniqueId&&(g.issuer.uniqueId=s.certIssuerUniqueId),g.issuer.hash=T.digest().toHex();var S=e.md.sha1.create();return g.subject.getField=function(e){return t(g.subject,e)},g.subject.addField=function(e){a([e]),g.subject.attributes.push(e)},g.subject.attributes=u.RDNAttributesAsArray(s.certSubject,S),s.certSubjectUniqueId&&(g.subject.uniqueId=s.certSubjectUniqueId),g.subject.hash=S.digest().toHex(),g.extensions=s.certExtensions?u.certificateExtensionsFromAsn1(s.certExtensions):[],g.publicKey=u.publicKeyFromAsn1(s.subjectPublicKeyInfo),g},u.certificateExtensionsFromAsn1=function(e){for(var t=[],r=0;r<e.value.length;++r)for(var a=e.value[r],i=0;i<a.value.length;++i)t.push(u.certificateExtensionFromAsn1(a.value[i]));return t},u.certificateExtensionFromAsn1=function(t){var r={};if(r.id=o.derToOid(t.value[0].value),r.critical=!1,t.value[1].type===o.Type.BOOLEAN?(r.critical=0!==t.value[1].value.charCodeAt(0),r.value=t.value[2].value):r.value=t.value[1].value,r.id in c)if(r.name=c[r.id],"keyUsage"===r.name){var a=o.fromDer(r.value),i=0,s=0;a.value.length>1&&(i=a.value.charCodeAt(1),s=a.value.length>2?a.value.charCodeAt(2):0),r.digitalSignature=128===(128&i),r.nonRepudiation=64===(64&i),r.keyEncipherment=32===(32&i),r.dataEncipherment=16===(16&i),r.keyAgreement=8===(8&i),r.keyCertSign=4===(4&i),r.cRLSign=2===(2&i),r.encipherOnly=1===(1&i),r.decipherOnly=128===(128&s)}else if("basicConstraints"===r.name){var a=o.fromDer(r.value);r.cA=a.value.length>0&&a.value[0].type===o.Type.BOOLEAN?0!==a.value[0].value.charCodeAt(0):!1;var n=null;a.value.length>0&&a.value[0].type===o.Type.INTEGER?n=a.value[0].value:a.value.length>1&&(n=a.value[1].value),null!==n&&(r.pathLenConstraint=o.derToInteger(n))}else if("extKeyUsage"===r.name)for(var a=o.fromDer(r.value),u=0;u<a.value.length;++u){var l=o.derToOid(a.value[u].value);l in c?r[c[l]]=!0:r[l]=!0}else if("nsCertType"===r.name){var a=o.fromDer(r.value),i=0;a.value.length>1&&(i=a.value.charCodeAt(1)),r.client=128===(128&i),r.server=64===(64&i),r.email=32===(32&i),r.objsign=16===(16&i),r.reserved=8===(8&i),r.sslCA=4===(4&i),r.emailCA=2===(2&i),r.objCA=1===(1&i)}else if("subjectAltName"===r.name||"issuerAltName"===r.name){r.altNames=[];for(var d,a=o.fromDer(r.value),f=0;f<a.value.length;++f){d=a.value[f];var C={type:d.type,value:d.value};switch(r.altNames.push(C),d.type){case 1:case 2:case 6:break;case 7:C.ip=e.util.bytesToIP(d.value);break;case 8:C.oid=o.derToOid(d.value)}}}else if("subjectKeyIdentifier"===r.name){var a=o.fromDer(r.value);r.subjectKeyIdentifier=e.util.bytesToHex(a.value)}else if("authorityInfoAccess"===r.name){r.authorityInfoAccess=[];for(var a=o.fromDer(r.value),f=0;f<a.value.length;++f){var p=a.value[f],g={};g.type="["+f+"]Authority Info Access",g.value=[];var m=o.derToOid(p.value[0].value);m in c&&(m=c[m]),g.value.push({type:"Access Method",value:m}),accessLocation=_parseGeneralName(p.value[1]),g.value.push({type:"Access Location",value:accessLocation}),r.authorityInfoAccess.push(g)}}return r},u.certificationRequestFromAsn1=function(r,i){var s={},n=[];if(!o.validate(r,g,s,n)){var l=new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");throw l.errors=n,l}if("string"!=typeof s.csrSignature){for(var d="\x00",f=0;f<s.csrSignature.length;++f)d+=o.toDer(s.csrSignature[f]).getBytes();s.csrSignature=d}var C=o.derToOid(s.publicKeyOid);if(C!==u.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var p=u.createCertificationRequest();p.version=s.csrVersion?s.csrVersion.charCodeAt(0):0,p.signatureOid=e.asn1.derToOid(s.csrSignatureOid),p.signatureParameters=m(p.signatureOid,s.csrSignatureParams,!0),p.siginfo.algorithmOid=e.asn1.derToOid(s.csrSignatureOid),p.siginfo.parameters=m(p.siginfo.algorithmOid,s.csrSignatureParams,!1);var h=e.util.createBuffer(s.csrSignature);if(++h.read,p.signature=h.getBytes(),p.certificationRequestInfo=s.certificationRequestInfo,i){if(p.md=null,p.signatureOid in c){var C=c[p.signatureOid];switch(C){case"sha1WithRSAEncryption":p.md=e.md.sha1.create();break;case"md5WithRSAEncryption":p.md=e.md.md5.create();break;case"sha256WithRSAEncryption":p.md=e.md.sha256.create();break;case"sha512WithRSAEncryption":p.md=e.md.sha512.create();break;case"RSASSA-PSS":p.md=e.md.sha256.create()}}if(null===p.md){var l=new Error("Could not compute certification request digest. Unknown signature OID.");throw l.signatureOid=p.signatureOid,l}var y=o.toDer(p.certificationRequestInfo);p.md.update(y.getBytes())}var E=e.md.sha1.create();return p.subject.getField=function(e){return t(p.subject,e)},p.subject.addField=function(e){a([e]),p.subject.attributes.push(e)},p.subject.attributes=u.RDNAttributesAsArray(s.certificationRequestInfoSubject,E),p.subject.hash=E.digest().toHex(),p.publicKey=u.publicKeyFromAsn1(s.subjectPublicKeyInfo),p.getAttribute=function(e){return t(p,e)},p.addAttribute=function(e){a([e]),p.attributes.push(e)},p.attributes=u.CRIAttributesAsArray(s.certificationRequestInfoAttributes||[]),p},u.createCertificationRequest=function(){var r={};return r.version=0,r.signatureOid=null,r.signature=null,r.siginfo={},r.siginfo.algorithmOid=null,r.subject={},r.subject.getField=function(e){return t(r.subject,e)},r.subject.addField=function(e){a([e]),r.subject.attributes.push(e)},r.subject.attributes=[],r.subject.hash=null,r.publicKey=null,r.attributes=[],r.getAttribute=function(e){return t(r,e)},r.addAttribute=function(e){a([e]),r.attributes.push(e)},r.md=null,r.setSubject=function(e){a(e),r.subject.attributes=e,r.subject.hash=null},r.setAttributes=function(e){a(e),r.attributes=e},r.sign=function(t,a){r.md=a||e.md.sha1.create();var i=c[r.md.algorithm+"WithRSAEncryption"];if(!i){var s=new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");throw s.algorithm=r.md.algorithm,s}r.signatureOid=r.siginfo.algorithmOid=i,r.certificationRequestInfo=u.getCertificationRequestInfo(r);var n=o.toDer(r.certificationRequestInfo);r.md.update(n.getBytes()),r.signature=t.sign(r.md)},r.verify=function(){var t=!1,a=r.md;if(null===a){if(r.signatureOid in c){var i=c[r.signatureOid];switch(i){case"sha1WithRSAEncryption":a=e.md.sha1.create();break;case"md5WithRSAEncryption":a=e.md.md5.create();break;case"sha256WithRSAEncryption":a=e.md.sha256.create();break;case"sha512WithRSAEncryption":a=e.md.sha512.create();break;case"RSASSA-PSS":a=e.md.sha256.create()}}if(null===a){var s=new Error("Could not compute certification request digest. Unknown signature OID.");throw s.signatureOid=r.signatureOid,s}var n=r.certificationRequestInfo||u.getCertificationRequestInfo(r),l=o.toDer(n);a.update(l.getBytes())}if(null!==a){var d;switch(r.signatureOid){case c.sha1WithRSAEncryption:break;case c["RSASSA-PSS"]:var f,C;if(f=c[r.signatureParameters.mgf.hash.algorithmOid],void 0===f||void 0===e.md[f]){var s=new Error("Unsupported MGF hash function.");throw s.oid=r.signatureParameters.mgf.hash.algorithmOid,s.name=f,s}if(C=c[r.signatureParameters.mgf.algorithmOid],void 0===C||void 0===e.mgf[C]){var s=new Error("Unsupported MGF function.");throw s.oid=r.signatureParameters.mgf.algorithmOid,s.name=C,s}if(C=e.mgf[C].create(e.md[f].create()),f=c[r.signatureParameters.hash.algorithmOid],void 0===f||void 0===e.md[f]){var s=new Error("Unsupported RSASSA-PSS hash function.");throw s.oid=r.signatureParameters.hash.algorithmOid,s.name=f,s}d=e.pss.create(e.md[f].create(),C,r.signatureParameters.saltLength)}t=r.publicKey.verify(a.digest().getBytes(),r.signature,d)}return t},r},u.getTBSCertificate=function(t){var a=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.version).getBytes())]),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,e.util.hexToBytes(t.serialNumber)),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.siginfo.algorithmOid).getBytes()),s(t.siginfo.algorithmOid,t.siginfo.parameters)]),r(t.issuer),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(t.validity.notBefore)),o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(t.validity.notAfter))]),r(t.subject),u.publicKeyToAsn1(t.publicKey)]);return t.issuer.uniqueId&&a.value.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+t.issuer.uniqueId)])),t.subject.uniqueId&&a.value.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+t.subject.uniqueId)])),t.extensions.length>0&&a.value.push(u.certificateExtensionsToAsn1(t.extensions)),
a},u.getCertificationRequestInfo=function(e){var t=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(e.version).getBytes()),r(e.subject),u.publicKeyToAsn1(e.publicKey),n(e)]);return t},u.distinguishedNameToAsn1=function(e){return r(e)},u.certificateToAsn1=function(e){var t=e.tbsCertificate||u.getTBSCertificate(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),s(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},u.certificateExtensionsToAsn1=function(e){var t=o.create(o.Class.CONTEXT_SPECIFIC,3,!0,[]),r=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);t.value.push(r);for(var a=0;a<e.length;++a)r.value.push(u.certificateExtensionToAsn1(e[a]));return t},u.certificateExtensionToAsn1=function(e){var t=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);t.value.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.id).getBytes())),e.critical&&t.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255)));var r=e.value;return"string"!=typeof e.value&&(r=o.toDer(r).getBytes()),t.value.push(o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,r)),t},u.certificationRequestToAsn1=function(e){var t=e.certificationRequestInfo||u.getCertificationRequestInfo(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),s(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},u.createCaStore=function(t){function a(t){if(!t.hash){var a=e.md.sha1.create();t.attributes=u.RDNAttributesAsArray(r(t),a),t.hash=a.digest().toHex()}return i.certs[t.hash]||null}var i={certs:{}};if(i.getIssuer=function(e){var t=a(e.issuer);return t},i.addCertificate=function(t){if("string"==typeof t&&(t=e.pki.certificateFromPem(t)),!t.subject.hash){var a=e.md.sha1.create();t.subject.attributes=u.RDNAttributesAsArray(r(t.subject),a),t.subject.hash=a.digest().toHex()}if(t.subject.hash in i.certs){var s=i.certs[t.subject.hash];e.util.isArray(s)||(s=[s]),s.push(t)}else i.certs[t.subject.hash]=t},i.hasCertificate=function(t){var r=a(t.subject);if(!r)return!1;e.util.isArray(r)||(r=[r]);for(var i=o.toDer(u.certificateToAsn1(t)).getBytes(),s=0;s<r.length;++s){var n=o.toDer(u.certificateToAsn1(r[s])).getBytes();if(i===n)return!0}return!1},t)for(var s=0;s<t.length;++s){var n=t[s];i.addCertificate(n)}return i},u.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"},u.verifyCertificateChain=function(t,r,a){r=r.slice(0);var i=r.slice(0),s=new Date,n=!0,o=null,c=0;do{var l=r.shift(),d=null,f=!1;if((s<l.validity.notBefore||s>l.validity.notAfter)&&(o={message:"Certificate is not valid yet or has expired.",error:u.certificateError.certificate_expired,notBefore:l.validity.notBefore,notAfter:l.validity.notAfter,now:s}),null===o){if(d=r[0]||t.getIssuer(l),null===d&&l.isIssuer(l)&&(f=!0,d=l),d){var C=d;e.util.isArray(C)||(C=[C]);for(var p=!1;!p&&C.length>0;){d=C.shift();try{p=d.verify(l)}catch(g){}}p||(o={message:"Certificate signature is invalid.",error:u.certificateError.bad_certificate})}null!==o||d&&!f||t.hasCertificate(l)||(o={message:"Certificate is not trusted.",error:u.certificateError.unknown_ca})}if(null===o&&d&&!l.isIssuer(d)&&(o={message:"Certificate issuer is invalid.",error:u.certificateError.bad_certificate}),null===o)for(var m={keyUsage:!0,basicConstraints:!0},h=0;null===o&&h<l.extensions.length;++h){var y=l.extensions[h];!y.critical||y.name in m||(o={message:"Certificate has an unsupported critical extension.",error:u.certificateError.unsupported_certificate})}if(null===o&&(!n||0===r.length&&(!d||f))){var E=l.getExtension("basicConstraints"),v=l.getExtension("keyUsage");if(null!==v&&(v.keyCertSign&&null!==E||(o={message:"Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",error:u.certificateError.bad_certificate})),null!==o||null===E||E.cA||(o={message:"Certificate basicConstraints indicates the certificate is not a CA.",error:u.certificateError.bad_certificate}),null===o&&null!==v&&"pathLenConstraint"in E){var T=c-1;T>E.pathLenConstraint&&(o={message:"Certificate basicConstraints pathLenConstraint violated.",error:u.certificateError.bad_certificate})}}var S=null===o?!0:o.error,I=a?a(S,c,i):S;if(I!==!0)throw S===!0&&(o={message:"The application rejected the certificate.",error:u.certificateError.bad_certificate}),(I||0===I)&&("object"!=typeof I||e.util.isArray(I)?"string"==typeof I&&(o.error=I):(I.message&&(o.message=I.message),I.error&&(o.error=I.error))),o;o=null,n=!1,++c}while(r.length>0);return!0}}var t="x509";if("function"!=typeof define){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var r=!0;define=function(e,t){t(require,module)}}var a,i=function(r,i){i.exports=function(i){var s=a.map(function(e){return r(e)}).concat(e);if(i=i||{},i.defined=i.defined||{},i.defined[t])return i[t];i.defined[t]=!0;for(var n=0;n<s.length;++n)s[n](i);return i.pki}},s=define;define=function(e,t){return a="string"==typeof e?t.slice(2):e.slice(2),r?(delete define,s.apply(null,Array.prototype.slice.call(arguments,0))):(define=s,define.apply(null,Array.prototype.slice.call(arguments,0)))},define(["require","module","./aes","./asn1","./des","./md","./mgf","./oids","./pem","./pss","./rsa","./util"],function(){i.apply(null,Array.prototype.slice.call(arguments,0))})}();