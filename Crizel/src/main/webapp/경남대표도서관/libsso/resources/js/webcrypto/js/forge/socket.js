/**
 * Socket implementation that uses flash SocketPool class as a backend.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2013 Digital Bazaar, Inc.
 */
!function(){function e(e){var o=e.net=e.net||{};o.socketPools={},o.createSocketPool=function(t){t.msie=t.msie||!1;var n=t.flashId,c=document.getElementById(n);c.init({marshallExceptions:!t.msie});var r={id:n,flashApi:c,sockets:{},policyPort:t.policyPort||0,policyUrl:t.policyUrl||null};o.socketPools[n]=r,r.handler=t.msie===!0?function(e){if(e.id in r.sockets){var o;switch(e.type){case"connect":o="connected";break;case"close":o="closed";break;case"socketData":o="data";break;default:o="error"}setTimeout(function(){r.sockets[e.id][o](e)},0)}}:function(e){if(e.id in r.sockets){var o;switch(e.type){case"connect":o="connected";break;case"close":o="closed";break;case"socketData":o="data";break;default:o="error"}r.sockets[e.id][o](e)}};var s="forge.net.socketPools['"+n+"'].handler";return c.subscribe("connect",s),c.subscribe("close",s),c.subscribe("socketData",s),c.subscribe("ioError",s),c.subscribe("securityError",s),r.destroy=function(){delete o.socketPools[t.flashId];for(var e in r.sockets)r.sockets[e].destroy();r.sockets={},c.cleanup()},r.createSocket=function(o){o=o||{};var t=c.create(),n={id:t,connected:o.connected||function(){},closed:o.closed||function(){},data:o.data||function(){},error:o.error||function(){}};return n.destroy=function(){c.destroy(t),delete r.sockets[t]},n.connect=function(e){var o=e.policyUrl||null,n=0;null===o&&0!==e.policyPort&&(n=e.policyPort||r.policyPort),c.connect(t,e.host,e.port,n,o)},n.close=function(){c.close(t),n.closed({id:n.id,type:"close",bytesAvailable:0})},n.isConnected=function(){return c.isConnected(t)},n.send=function(o){return c.send(t,e.util.encode64(o))},n.receive=function(o){var n=c.receive(t,o).rval;return null===n?null:e.util.decode64(n)},n.bytesAvailable=function(){return c.getBytesAvailable(t)},r.sockets[t]=n,n},r},o.destroySocketPool=function(e){if(e.flashId in o.socketPools){var t=o.socketPools[e.flashId];t.destroy()}},o.createSocket=function(e){var t=null;if(e.flashId in o.socketPools){var n=o.socketPools[e.flashId];t=n.createSocket(e)}return t}}var o="net";if("function"!=typeof define){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var t=!0;define=function(e,o){o(require,module)}}var n,c=function(t,c){c.exports=function(c){var r=n.map(function(e){return t(e)}).concat(e);if(c=c||{},c.defined=c.defined||{},c.defined[o])return c[o];c.defined[o]=!0;for(var s=0;s<r.length;++s)r[s](c);return c[o]}},r=define;define=function(e,o){return n="string"==typeof e?o.slice(2):e.slice(2),t?(delete define,r.apply(null,Array.prototype.slice.call(arguments,0))):(define=r,define.apply(null,Array.prototype.slice.call(arguments,0)))},define(["require","module"],function(){c.apply(null,Array.prototype.slice.call(arguments,0))})}();